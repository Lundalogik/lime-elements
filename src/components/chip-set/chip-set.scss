@use '../../style/functions';
@use '../../style/internal/shared_input-select-picker';
@use '../../style/mixins';

@use '../../style/internal/lime-theme';

@use '@material/textfield';
@use '@material/textfield/icon';
@use '@material/notched-outline/mdc-notched-outline';
@use '@material/floating-label';
@use '@material/floating-label/mdc-floating-label';
@use '@material/chips/deprecated/mdc-chips';

/**
 * @prop --icon-background-color: Background color of the icon. Defaults to transparent.
 * @prop --icon-color: Color of the icon. Defaults to `rgb(var(--contrast-1100))`.
 * @prop --background-color: Background color of the field when type is set to input.
 * @prop --background-color-disabled: Background color of the field when type is set to input and the component is disabled or readonly.
 * @prop --input-chip-set-selected-chip-color: Color of the highlight around selected chips in input chip-sets.
 */

@include textfield.core-styles;
@include icon.icon-core-styles;

@include shared_input-select-picker.outlined-style-overrides;
@include shared_input-select-picker.floating-label-overrides;
@include shared_input-select-picker.cropped-label-hack;
@include shared_input-select-picker.disabled-overrides;
@include shared_input-select-picker.readonly-overrides;
@include shared_input-select-picker.leading-icon;
@include shared_input-select-picker.lime-empty-value-for-readonly;
@include shared_input-select-picker.lime-looks-like-input-value;

$height-of-chip-set-input: functions.pxToRem(36);
$leading-icon-space: functions.pxToRem(40);
$background-color-of-remove-chip-buton-when-hovered: rgba(
    var(--color-red-default),
    0.2
);
$scale-of-remove-chip-x-when-hovered: scale(0.7);

:host(limel-chip-set) {
    isolation: isolate;
}

.mdc-chip {
    // As long as this component is depended on MDC,
    // we need to force it to be font-agnostic.
    // When MDC-dependency is removed, this block can also be removed.
    // However, on removal of MDC-dependency, we should also make sure to check
    // other font-related styles that might be set by MDC,
    // such as `letter-spacing` or `font-size`.
    font-family: inherit;
}

.mdc-chip {
    @include mixins.is-elevated-inset-clickable();
    max-width: 100%;
    min-width: functions.pxToRem(32);
    padding: 0 functions.pxToRem(1);
    display: inline-grid;
    grid-auto-flow: column;

    span[role='gridcell'] {
        min-width: 0; // This is needed to force mdc-chip__text (which is inside this span) to truncate

        &:only-child {
            .mdc-chip__text {
                padding-left: functions.pxToRem(12);
            }
        }

        &:first-child {
            .mdc-chip__text {
                padding-left: functions.pxToRem(12);
            }
        }

        a[role='button'],
        span[role='checkbox'] {
            &:focus-visible {
                &:after {
                    // visualizes keyboard navigation on Chrome & Firefox
                    // only when non-pointer input is being used,
                    // e.g. tabbed into using keyboard
                    content: '';
                    display: block;
                    position: absolute;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    border-radius: functions.pxToRem(60);
                    box-shadow: var(--shadow-depth-8-focused);
                }
            }
        }
    }

    &.mdc-chip--selected {
        color: var(--mdc-theme-primary) !important;
        background-color: var(--mdc-theme-surface) !important;
        box-shadow: var(--button-shadow-inset);

        &:active {
            box-shadow: var(--button-shadow-inset-pressed);
        }

        .mdc-chip__icon--leading {
            color: var(--mdc-theme-primary) !important;
        }
    }
}

.mdc-chip.mdc-chip--selected .mdc-chip__checkmark,
.mdc-chip__checkmark {
    margin-right: functions.pxToRem(4);
    margin-left: functions.pxToRem(8);
}

limel-badge {
    margin-right: functions.pxToRem(4);
    margin-left: functions.pxToRem(-4);
}

.mdc-chip__text {
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
    padding: 0 functions.pxToRem(12) 0 functions.pxToRem(4);
    color: inherit;
    text-decoration: none;

    &:focus,
    &:focus-visible {
        outline: none;
    }
}

limel-icon.mdc-chip__icon.mdc-chip__icon--leading {
    background-color: var(--icon-background-color, transparent);
    margin: 0 !important;
    color: var(--icon-color, rgb(var(--contrast-1100)));
}

.mdc-chip-set {
    align-items: center;
    min-height: shared_input-select-picker.$height-of-mdc-text-field;
    position: relative;

    &.chip-set--with-label {
        .lime-floating-label--float-above {
            padding-left: functions.pxToRem(4);
        }
    }

    &.mdc-chip-set--input {
        padding: functions.pxToRem(8);

        width: 100%;

        .mdc-chip--selected {
            // When chip is selected with keyboard (backspace / arrow-keys) to be deleted
            box-shadow: var(--shadow-depth-8-error);

            .mdc-chip__icon--trailing {
                color: rgb(var(--color-red-dark));
                background-color: $background-color-of-remove-chip-buton-when-hovered;

                svg {
                    transform: $scale-of-remove-chip-x-when-hovered;
                }
            }
        }
    }

    &.has-clear-all-button {
        &.mdc-chip-set--input {
            padding-right: functions.pxToRem(
                32
            ); // This leaves space for "clear all" button and avoids overlapping with chips
        }
    }

    &.disabled:not(.mdc-chip-set--input) {
        @include shared_input-select-picker.looks-disabled;
        pointer-events: none;
    }
}

.mdc-chip__icon {
    &.mdc-chip__icon--trailing {
        transition:
            background-color 0.2s ease,
            color 0.2s ease;

        color: var(--mdc-theme-on-surface);
        margin-left: 0;
        margin-right: functions.pxToRem(5);

        width: functions.pxToRem(22);
        height: functions.pxToRem(22);

        &:hover {
            background-color: $background-color-of-remove-chip-buton-when-hovered;

            svg {
                transform: $scale-of-remove-chip-x-when-hovered;
            }
        }

        svg {
            transition: transform 0.2s ease;
            display: block;
            transform: scale(0.9);
        }
    }
}

.mdc-text-field {
    height: auto;
    cursor: text;

    .mdc-text-field__input {
        @include shared_input-select-picker.input-field-placeholder;

        width: auto;
        height: $height-of-chip-set-input;
        line-height: $height-of-chip-set-input;
        padding: 0 functions.pxToRem(12);

        flex-grow: 1;
        flex-shrink: 0;

        &.hidden {
            // This class is added, as soon as there is a chip selected and displayed
            // This input field should not be visually visible as it breaks the UI in some cases
            // But it should be rendered to be able to tab between fields and do other keyboard commands /Kia
            transition: all 0s;
            opacity: 0;
            position: absolute;
            z-index: -100; // to let users interact with chips, in case they're covered
        }
        &[type='search'] {
            -webkit-appearance: textfield; // Removes the default magnifying glass icon on iOS which appears automatically on input fields with type of search
            background-color: transparent; // overides styles caused by previous line

            &::-webkit-search-cancel-button {
                display: none; // removes the default X button
            }
        }
    }
}

.mdc-text-field--disabled .mdc-chip {
    pointer-events: all;

    &.disabled {
        @include shared_input-select-picker.looks-disabled;
        pointer-events: none;
    }
}

// used only in chipsets that do not have input
.chip-set__label {
    @include mixins.truncate-text;
    width: 120%; // `120%` instead of `100%`,
    // because this class is always together with `mdc-floating-label--float-above`,
    // which scales the label down. So there is more horizontal space to display the label in.
    top: functions.pxToRem(13);
    padding-left: functions.pxToRem(20);
}

// Because MDC removes some classes in chipset, we add custom
// classes with similar names and expected behavior & styles.
// These class names start with `lime-`, instead of `mdc-`.
.lime-notched-outline--notched {
    .mdc-notched-outline__notch {
        border-top: 1px solid transparent !important;

        .lime-floating-label--float-above {
            // This overrides MDC's original top value which is `top: 50%`.
            // The reason is that a % value aligns the label in a wrong position
            // vertically, when there are multiple rows of chips.
            top: functions.pxToRem(27);

            transform: translateY(-34.75px) scale(0.75);
            font-size: shared_input-select-picker.$cropped-label-hack--font-size;
        }
    }
}

.force-invalid {
    @extend .mdc-text-field--invalid;
}

.clear-all-button {
    @include mixins.clear-all-button;
    @include mixins.visualize-keyboard-focus;

    position: absolute;
    right: functions.pxToRem(8);
    top: functions.pxToRem(18);

    opacity: 0; // Is hidden, but can receive focus (such as when navigating through tab indexes).

    &:focus,
    .has-chips:not(.mdc-text-field--disabled):hover &,
    .has-chips:not(.mdc-text-field--disabled).mdc-text-field--focused & {
        opacity: 1;
        outline: none;
    }

    :not(.has-chips) &,
    .has-chips.mdc-text-field--disabled & {
        display: none; // Won't receive focus when disabled
    }
}

.has-leading-icon {
    &:not(.has-chips) {
        .mdc-text-field__input {
            padding-left: $leading-icon-space;
        }

        .mdc-floating-label {
            &:not(.lime-floating-label--float-above) {
                left: $leading-icon-space;
            }
            &.mdc-floating-label--float-above {
                left: functions.pxToRem(4);
            }
        }
    }

    .mdc-chip {
        &:first-of-type {
            margin-left: 40px;
        }
    }

    .search-icon {
        transition: transform 0.2s ease;
        position: absolute;
        top: functions.pxToRem(16);
        left: functions.pxToRem(16);
    }

    limel-icon {
        background-color: transparent;
    }
}

.delimiter {
    opacity: 0.5;
    padding: 0 functions.pxToRem(2);
    color: var(--mdc-theme-on-surface);
}

@import './partial-styles/_readonly';
@import './partial-styles/_file-picker';
@import './partial-styles/_helper-text';
