@import '../../style/mixins';
@import '../../style/internal/mdc-variables';

$mdc-textarea-background: $mdc-theme-background;
// $mdc-textarea-disabled-background: $mdc-theme-background;

$mdc-text-field-background: $mdc-theme-background;
// $mdc-text-field-disabled-background: $mdc-theme-background;

$mdc-text-field-bottom-line-idle: $lime-text-field-bottom-line-color;
$mdc-text-field-bottom-line-hover: $lime-text-field-bottom-line-color;
$mdc-text-field-fullwidth-bottom-line-color: $lime-text-field-bottom-line-color;
$mdc-chip-background-color: #fff;

@import '@limetech/mdc-chips/mdc-chips';
@import '@limetech/mdc-textfield/mdc-text-field';
@import '@limetech/mdc-ripple/mdc-ripple';

/**
 * @prop --icon-background-color: Background color of the icon. Defaults to transparent.
 * @prop --icon-color: Color of the icon. Defaults to 54% black.
 * @prop --background-color: Background color of the field when type is set to input.
 * @prop --background-color-disabled: Background color of the field when type is set to input and the component is disabled or readonly.
 * @prop --input-chip-set-selected-chip-color: Color of the highlight around selected chips in input chip-sets.
 */

.mdc-chip {
    background-color: $mdc-chip-background-color;
    @include is-elevated-clickable;
    max-width: 100%;

    span[role='gridcell'] {
        // This is needed to force mdc-chip__text (which is inside this span) to truncate
        min-width: 0;
    }

    &:hover {
        background-color: $mdc-chip-background-color;
    }
}

.mdc-chip__icon {
    flex-shrink: 0;
}

.mdc-chip__text {
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
}

limel-icon.mdc-chip__icon.mdc-chip__icon--leading {
    background-color: var(--icon-background-color, transparent);
    margin-left: pxToRem(-11) !important;
    color: var(--icon-color, rgba(0, 0, 0, 0.54));
}

.mdc-chip-set {
    &.disabled:not(.mdc-chip-set--input) {
        opacity: 0.5;
        pointer-events: none;
    }

    &.mdc-chip-set--input {
        margin-top: pxToRem(20);
        width: 100%;

        .mdc-chip--selected {
            box-shadow: 0 0 0 pxToRem(4)
                var(
                    --input-chip-set-selected-chip-color,
                    var(--lime-turquoise, orange)
                );
        }
    }
}

.mdc-chip__icon {
    &.mdc-chip__icon--trailing {
        margin-left: pxToRem(8);
        margin-right: pxToRem(-8);
        transition: background-color 0.2s ease;

        width: pxToRem(22);
        height: pxToRem(22);

        &:hover {
            background-color: rgba($lime-deep-red, 0.2);

            svg {
                transform: scale(0.7);
            }
        }

        svg {
            transition: transform 0.2s ease;
            display: block;
            transform: scale(0.9);
        }
    }
}

.mdc-text-field {
    @include mdc-states-hover-opacity(0);
    @include mdc-states-focus-opacity(0, true);
    width: 100%;
    height: auto;
    cursor: text;

    input {
        width: auto;
        border-bottom: none;
        height: auto;
        padding-top: 0;
        flex-grow: 1;
        flex-shrink: 0;
        max-height: pxToRem(35);

        &.hidden {
            max-height: 0 !important;
            transition: max-height 250ms cubic-bezier(0.5, 0, 1, 0);
        }
    }

    .mdc-floating-label--float-above {
        top: pxToRem(20);
        bottom: auto;
    }

    &:not(.mdc-text-field--focused) {
        border-bottom-style: solid;
        border-bottom-width: pxToRem(1);
    }

    &:not(.mdc-text-field--disabled) {
        &.mdc-text-field--focused {
            border-bottom-style: solid;
            border-bottom-width: pxToRem(1);
        }
    }
}

.mdc-text-field:not(.mdc-text-field--disabled) {
    background-color: var(--background-color, #ffffff);
}

.mdc-text-field--disabled:not(.mdc-text-field--textarea) {
    background-color: var(--background-color-disabled, #fafafa);
}

.mdc-text-field--disabled .mdc-chip {
    pointer-events: all;

    &.disabled {
        opacity: 0.5;
        pointer-events: none;
    }
}

.mdc-floating-label.mdc-text-field--required::after {
    content: '*';
}

.force-float {
    @extend .mdc-floating-label--float-above;
}

.force-invalid {
    @extend .mdc-text-field--invalid;
}
