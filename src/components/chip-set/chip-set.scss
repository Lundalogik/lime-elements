@import '../../style/internal/mdc-variables';
@import '../input-field/input-field';
@import '../../style/internal/shared_input-select-picker';

@import '@limetech/mdc-chips/mdc-chips';

@import '../../style/mixins';

/**
 * @prop --icon-background-color: Background color of the icon. Defaults to transparent.
 * @prop --icon-color: Color of the icon. Defaults to `rgb(var(--contrast-1100))`.
 * @prop --background-color: Background color of the field when type is set to input.
 * @prop --background-color-disabled: Background color of the field when type is set to input and the component is disabled or readonly.
 * @prop --input-chip-set-selected-chip-color: Color of the highlight around selected chips in input chip-sets.
 */
$height-of-chip-set-input: pxToRem(36);

.mdc-chip {
    @include is-elevated-inset-clickable;
    max-width: 100%;
    min-width: pxToRem(32);
    padding: 0 pxToRem(1);
    display: inline-grid;
    grid-auto-flow: column;
    background-color: $mdc-chip-background-color;

    span[role='gridcell'] {
        min-width: 0; // This is needed to force mdc-chip__text (which is inside this span) to truncate

        &:only-child {
            .mdc-chip__text {
                padding-left: pxToRem(12);
            }
        }

        &:first-child {
            .mdc-chip__text {
                padding-left: pxToRem(12);
            }
        }

        span[role='button'],
        span[role='checkbox'] {
            &:focus-visible {
                &:after {
                    // visualizes keyboard navigation on Chrome & Firefox
                    // only when non-pointer input is being used,
                    // e.g. tabbed into using keyboard
                    content: '';
                    display: block;
                    position: absolute;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    border-radius: pxToRem(60);
                    box-shadow: var(--shadow-depth-8-focused);
                }
            }
        }
    }

    &:hover {
        background-color: $mdc-chip-background-color;
    }

    &.mdc-chip--selected {
        box-shadow: var(--button-shadow-inset);

        &:active {
            box-shadow: var(--button-shadow-inset-pressed);
        }
    }
}

.mdc-chip.mdc-chip--selected .mdc-chip__checkmark,
.mdc-chip__checkmark {
    margin-right: pxToRem(4);
    margin-left: pxToRem(8);
}

limel-badge {
    margin-right: pxToRem(4);
    margin-left: pxToRem(-8);
}

.mdc-chip__text {
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
    padding: 0 pxToRem(12) 0 pxToRem(4);
    color: inherit;
    text-decoration: none;
}

limel-icon.mdc-chip__icon.mdc-chip__icon--leading {
    background-color: var(--icon-background-color, transparent);
    margin: 0 !important;
    color: var(--icon-color, rgb(var(--contrast-1100)));
}

.mdc-chip-set {
    align-items: center;
    min-height: $height-of-mdc-text-field;
    position: relative;

    &.chip-set--with-label {
        .lime-floating-label--float-above {
            padding-left: pxToRem(4);
        }
    }

    &.mdc-chip-set--input {
        padding: pxToRem(8);
        padding-right: pxToRem(
            32
        ); // This leaves space for "clear all" button and avoids overlapping with chips
        width: 100%;

        .mdc-chip--selected {
            // When chip is selected with keyboard (backspace / arrow-keys) to be deleted
            box-shadow: var(--shadow-depth-8-error);

            .mdc-chip__icon--trailing {
                color: rgb(var(--color-red-dark));
            }
        }
    }

    &.disabled:not(.mdc-chip-set--input) {
        @include looks-disabled;
    }
}

.mdc-chip__icon {
    &.mdc-chip__icon--trailing {
        transition: background-color 0.2s ease;

        margin-left: 0;
        margin-right: pxToRem(5);

        width: pxToRem(22);
        height: pxToRem(22);

        &:hover {
            background-color: rgba(var(--color-red-default), 0.2);

            svg {
                transform: scale(0.7);
            }
        }

        svg {
            transition: transform 0.2s ease;
            display: block;
            transform: scale(0.9);
        }
    }
}

.mdc-text-field {
    @include mdc-states-hover-opacity(0);
    @include mdc-states-focus-opacity(0, true);

    width: 100%;
    height: auto;
    cursor: text;

    .mdc-text-field__input {
        width: auto;
        height: $height-of-chip-set-input;
        line-height: $height-of-chip-set-input;
        padding: 0 pxToRem(12);

        flex-grow: 1;
        flex-shrink: 0;

        &.hidden {
            // This class is added, as soon as there is a chip selected and displayed
            // This input field should not be visually visible as it breaks the UI in some cases
            // But it should be rendered to be able to tab between fields and do other keyboard commands /Kia
            transition: all 0s;
            opacity: 0;
            position: absolute;
            z-index: $limel-chip-set--hidden-text-field--z-index; // to let users interact with chips, in case they're covered
        }
    }
}

.mdc-text-field--disabled .mdc-chip {
    pointer-events: all;

    &.disabled {
        @include looks-disabled;
    }
}

.mdc-floating-label {
    @include looks-like-input-label;
    &.mdc-text-field--required::after {
        content: '*';
    }
    &.lime-floating-label--float-above,
    &.lime-floating-label--float-above.mdc-floating-label--float-above {
        @include label--float-above;
        top: $floating-label-top-value;
    }
}

.chip-set__label {
    @include looks-like-input-label;
    padding-left: pxToRem(20);
    font-size: pxToRem(16);
}

.lime-notched-outline--notched {
    .mdc-notched-outline__notch {
        border-top: 1px solid transparent !important;
    }
}

.force-invalid {
    @extend .mdc-text-field--invalid;
}

.clear-all-button {
    transition: opacity 0.3s ease;
    @include clear-all-button;

    position: absolute;
    right: pxToRem(8);
    top: pxToRem(18);

    opacity: 0; // Is hidden, but can receive focus (such as when navigating through tab indexes).

    &:focus,
    .has-chips:not(.mdc-text-field--disabled):hover &,
    .has-chips:not(.mdc-text-field--disabled).mdc-text-field--focused & {
        opacity: 1;
        outline: none;
    }

    &:focus-visible {
        box-shadow: var(--shadow-depth-8-focused);
    }

    :not(.has-chips) &,
    .has-chips.mdc-text-field--disabled & {
        display: none; // Won't receive focus when disabled
    }
}

.has-leading-icon {
    &:not(.has-chips) {
        .mdc-text-field__input {
            padding-left: pxToRem(40);
        }

        .mdc-floating-label {
            &:not(.lime-floating-label--float-above) {
                padding-left: pxToRem(40);
            }
        }
    }

    .mdc-chip {
        &:first-of-type {
            margin-left: 40px;
        }
    }

    .search-icon {
        transition: transform 0.2s ease;
        position: absolute;
        top: pxToRem(16);
        left: pxToRem(16);
    }

    limel-icon {
        background-color: transparent;
    }
}

.delimiter {
    opacity: 0.5;
    padding: 0 pxToRem(2);
}
