@import '../../style/internal/mdc-variables';
@import '../../style/internal/shared_input-select-picker';
@import '../../style/mixins';

@import '@limetech/mdc-textfield/mdc-text-field';
@import '@limetech/mdc-ripple/mdc-ripple';
@import '@limetech/mdc-list/mdc-list';
@import '@limetech/mdc-elevation/mdc-elevation';
@import '@limetech/mdc-menu-surface/mdc-menu-surface';

@import './partial-styles/trailing-icon.scss';
@import './partial-styles/outlined-style-overrides.scss';

/**
 * @prop --textarea-height: Height of the field when type is set to `textarea`
 */

:host {
    display: block;
}

:host([hidden]) {
    display: none;
}

:host([type='textarea']) {
    height: var(--textarea-height, 100%);

    .mdc-text-field.mdc-text-field--textarea {
        height: var(--textarea-height, 100%);

        &.has-helper-line {
            --heightOfHelperText: 1.1875rem;
            height: calc(
                var(--textarea-height, 100%) - var(--heightOfHelperText)
            );
        }
    }
    textarea.mdc-text-field__input {
        resize: vertical;
    }
}

.mdc-text-field {
    &:not(.mdc-text-field--disabled) {
        .mdc-floating-label {
            color: $label-color;
        }
    }
    &.mdc-text-field--disabled {
        .mdc-floating-label {
            color: $label-color-disabled;
        }
    }
}

.mdc-text-field {
    width: 100%;
    @include mdc-states-hover-opacity(0);
    @include mdc-states-focus-opacity(0, true);

    .mdc-floating-label {
        right: pxToRem(
            8
        ); //This is a hack to force the label truncate when container is too little. Otherwise due to position: absolute it won't. Kia
    }
}

.formatted-input {
    @include looks-like-input-label;

    z-index: 1;
    padding: 0 pxToRem(40) 0 pxToRem(16);
    align-self: center;
    position: absolute;

    display: none;
}

:not(.mdc-text-field--focused):not(.mdc-text-field--invalid) {
    .formatted-input {
        display: block;
    }

    .mdc-text-field__input[type='number'] {
        color: transparent;
        -webkit-text-fill-color: transparent;
    }
}

.mdc-text-field--disabled {
    background-color: transparent;
    .formatted-input {
        @include looks-disabled;
    }
}

.autocomplete-list-container {
    position: relative;
}

.autocomplete-list {
    background-color: white;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    max-height: pxToRem(200);
    overflow-y: auto;
}

.mdc-list-item {
    cursor: pointer;
}

.mdc-text-field__icon {
    width: pxToRem(24);
    height: pxToRem(24);
}

input.mdc-text-field__input {
    &::-webkit-search-cancel-button {
        @include clear-all-button;

        -webkit-appearance: none;

        position: absolute;
        right: pxToRem(8);
        top: 0;
        bottom: 0;
        margin: auto;
    }
}

.mdc-text-field-character-counter {
    transition: opacity 0.2s ease;
    opacity: 0;

    .mdc-text-field--focused + .mdc-text-field-helper-line & {
        opacity: 1;
    }

    &:before {
        height: $height-of-helper-text-pseudo-before;
    }
}

.mdc-text-field-helper-text {
    &:before {
        height: $height-of-helper-text-pseudo-before;
    }
}

.force-invalid {
    // MDC will automatically remove the `mdc-text-field--invalid` class when
    // the native validation passes. We sometimes need to be able to override
    // that. /Ads
    @extend .mdc-text-field--invalid;
}
