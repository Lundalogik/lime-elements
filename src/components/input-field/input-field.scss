@import '../../style/internal/mdc-variables';
@import '../../style/internal/shared_input-select-picker';
@import '../../style/mixins';

@import '@limetech/mdc-textfield/mdc-text-field';
@import '@limetech/mdc-ripple/mdc-ripple';
@import '@limetech/mdc-list/mdc-list';
@import '@limetech/mdc-elevation/mdc-elevation';
@import '@limetech/mdc-menu-surface/mdc-menu-surface';

/**
 * @prop --textarea-height: Height of the field when type is set to `textarea`
 */

:host {
    display: block;
}

:host([hidden]) {
    display: none;
}

.mdc-text-field {
    width: 100%;
    @include mdc-states-hover-opacity(0);
    @include mdc-states-focus-opacity(0, true);

    .mdc-floating-label {
        top: $floating-label-top-value;
        right: pxToRem(
            8
        ); //This is a hack to force the label truncate when container is too little. Otherwise due to position: absolute it won't. Kia
    }
}

label,
div {
    &.mdc-text-field {
        transition: background-color 0.2s ease;

        &:not(.mdc-text-field--disabled) {
            // this has to be written this way to be able to override MD styles
            background-color: $background-color-normal;

            &:hover {
                background-color: $background-color-hovered;
            }
        }

        &.mdc-text-field--focused {
            background-color: $background-color-focused;
        }

        &.mdc-text-field--disabled {
            background-color: $background-color-disabled;
        }
    }
}

.mdc-text-field__formatted_input {
    display: None;
}

:not(.mdc-text-field--focused):not(.mdc-text-field--invalid) {
    .mdc-text-field__formatted_input {
        @include looks-like-input-label;

        display: block;

        position: absolute;
        left: pxToRem(16);
        top: pxToRem(21);
        z-index: 1;
    }

    .mdc-text-field__input[type='number'] {
        color: transparent;
        -webkit-text-fill-color: transparent;
    }
}

.mdc-text-field--disabled {
    .mdc-text-field__formatted_input {
        @include looks-disabled;
    }
}

.autocomplete-list-container {
    position: relative;
}

.autocomplete-list {
    background-color: white;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    max-height: pxToRem(200);
    overflow-y: auto;
}

.mdc-list-item {
    cursor: pointer;
}

.mdc-text-field__icon {
    width: pxToRem(24);
    height: pxToRem(24);
}

.mdc-text-field.mdc-text-field--textarea {
    textarea {
        height: var(--textarea-height);
    }
}

input.mdc-text-field__input {
    &::-webkit-search-cancel-button {
        -webkit-appearance: none;
        cursor: pointer;

        @include is-flat-clickable;
        height: pxToRem(20);
        width: pxToRem(20);
        border-radius: 50%;

        position: absolute;
        right: pxToRem(8);
        top: 0;
        bottom: 0;
        margin: auto;

        background: {
            color: #babac0;
            repeat: no-repeat;
            position: center;
            size: pxToRem(12);
            image: url("data:image/svg+xml; utf8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'><defs/><path fill='rgb(255,255,255)' d='M7.219 5.781L5.78 7.22 14.563 16 5.78 24.781 7.22 26.22 16 17.437l8.781 8.782 1.438-1.438L17.437 16l8.782-8.781L24.78 5.78 16 14.563z'/></svg>");
        }

        &:hover {
            background-color: #757580;
        }
    }
}
