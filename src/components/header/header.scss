@use '../../style/mixins.scss';
@use '../../style/functions.scss';

/**
 * @prop --header-background-color: Background color of header, defaults to `--contrast-300`.
 * @prop --header-heading-color: Color of heading text, defaults to `--contrast-1100`.
 * @prop --header-subheading-color: Color of subheading text, defaults to `--contrast-900`.
 * @prop --header-supporting-text-color: Color of supporting text in subheading, defaults to `--header-subheading-color`.
 * @prop --header-icon-color: Color of header icon, defaults to `--contrast-1100`.
 * @prop --header-icon-background-color: Background color of header icon, defaults to `transparent`.
 * @prop --header-top-right-left-border-radius: Top-left and top-right border radius of header, defaults to `0.75rem`.
 * @prop --header-responsive-breakpoint: Defines the minimum allowed `width` of both information and actions areas in the header, defaults to `22rem`.
 */

:host(limel-header) {
    display: flex;
    align-items: center;
    box-sizing: border-box;
    width: 100%;
    background-color: var(--header-background-color, rgb(var(--contrast-300)));
    border-top-left-radius: var(--header-top-right-left-border-radius, 0.75rem);
    border-top-right-radius: var(
        --header-top-right-left-border-radius,
        0.75rem
    );
    padding: 0.25rem;
}

.information {
    display: flex;
    flex-grow: 1;
    align-items: center;
    min-width: 0;
}

.icon {
    --limel-icon-svg-margin: 0.25rem;
    flex-shrink: 0;
    color: var(--header-icon-color, rgb(var(--contrast-1100)));
    background-color: var(--header-icon-background-color, transparent);
    width: 2.25rem;
    border-radius: 0.56rem;
}

.headings {
    min-width: 0;
    margin-left: 0.25rem;
}

.heading,
.subheading {
    @include mixins.truncate-text;
    margin: 0;
    padding: 0;
}

.heading {
    color: var(--header-heading-color, rgb(var(--contrast-1100)));
    font-size: 1rem;
    font-weight: 500;
}

.subheading {
    color: var(--header-subheading-color, rgb(var(--contrast-900)));
    font-size: functions.pxToRem(13);
    font-weight: 400;
}

.subheading__supporting-text {
    color: var(--header-supporting-text-color, var(--header-subheading-color));
    span {
        margin: 0 0.125rem;
    }
}

slot[name='actions'] {
    flex-shrink: 0;
}

:host(limel-header.is-narrow) {
    padding: 0.125rem 0.25rem;

    .icon {
        --limel-icon-svg-margin: 0;
        width: 1.25rem;
    }

    .heading {
        font-size: functions.pxToRem(15);
    }
}

:host(limel-header.has-responsive-layout) {
    display: grid;
    grid-template-columns: repeat(
        auto-fit,
        minmax(
            clamp(
                50%,
                var(--header-responsive-breakpoint, functions.pxToRem(352)),
                100%
            ),
            1fr
        )
    );
    .headings {
        padding-right: 0.5rem;
    }
    slot[name='actions'] {
        display: flex;
        justify-content: flex-end;
    }
}
