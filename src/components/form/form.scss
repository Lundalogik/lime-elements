@use '../../style/functions';
@use '../../style/internal/shared_input-select-picker';
@use '../../style/internal/lime-theme';
@use '../../style/internal/lime-typography';

/**
 * @prop --form-body-padding: space around content of the form
 */

@include lime-typography.core-styles;

.limel-form-array-item--simple {
    display: flex;
    align-items: center;
    margin-right: functions.pxToRem(10);

    *:first-child {
        flex-grow: 1;
    }
}

.limel-form-layout--default {
    --gap: 1rem;
    display: grid;
    gap: var(--gap);
    padding: var(--form-body-padding, functions.pxToRem(16));
}

.limel-form-layout--grid {
    --gap: 1rem;
    --min-height-of-one-row: 4.71rem;
    display: grid;
    gap: var(--gap);
    padding: var(--form-body-padding, functions.pxToRem(16));

    // Using `minmax(0, 1fr)` below, instead of just `1fr` ensures that
    // components that are wider than their column don't make the column grow
    // wider and squash the other columns. /Ads
    grid-template-columns: repeat(var(--number-of-columns), minmax(0, 1fr));

    &.auto-reorder-to-avoid-empty-cells {
        grid-auto-flow: dense;
    }

    &.layout-1-columns {
        .limel-form-layout-colspan--1,
        .limel-form-layout-colspan--2,
        .limel-form-layout-colspan--3,
        .limel-form-layout-colspan--4,
        .limel-form-layout-colspan--5 {
            grid-column: span 1;
        }
    }

    &.layout-2-columns {
        .limel-form-layout-colspan--1 {
            grid-column: span 1;
        }
        .limel-form-layout-colspan--2,
        .limel-form-layout-colspan--3,
        .limel-form-layout-colspan--4,
        .limel-form-layout-colspan--5 {
            grid-column: span 2;
        }
    }

    &.layout-3-columns {
        .limel-form-layout-colspan--1 {
            grid-column: span 1;
        }
        .limel-form-layout-colspan--2 {
            grid-column: span 2;
        }
        .limel-form-layout-colspan--3,
        .limel-form-layout-colspan--4,
        .limel-form-layout-colspan--5 {
            grid-column: span 3;
        }
    }

    &.layout-4-columns {
        .limel-form-layout-colspan--1 {
            grid-column: span 1;
        }
        .limel-form-layout-colspan--2 {
            grid-column: span 2;
        }
        .limel-form-layout-colspan--3 {
            grid-column: span 3;
        }
        .limel-form-layout-colspan--4,
        .limel-form-layout-colspan--5 {
            grid-column: span 4;
        }
    }

    &.layout-5-columns {
        .limel-form-layout-colspan--1 {
            grid-column: span 1;
        }
        .limel-form-layout-colspan--2 {
            grid-column: span 2;
        }
        .limel-form-layout-colspan--3 {
            grid-column: span 3;
        }
        .limel-form-layout-colspan--4 {
            grid-column: span 4;
        }
        .limel-form-layout-colspan--5 {
            grid-column: span 5;
        }
    }

    .limel-form-layout-colspan--all {
        grid-column: 1/-1;
    }
}

.form-group {
    limel-checkbox,
    limel-switch {
        margin-left: functions.pxToRem(8);
        min-height: calc(
            var(--min-height-of-one-row) - #{shared_input-select-picker.$height-of-mdc-helper-text-block}
        ); //This is because we have to align these items to top and make sure they align correctly even in one-columned layouts
    }
}

.form-error {
    color: var(--mdc-theme-error, #b00020);
    font-size: 0.6875rem;
    line-height: 1.5;
    visibility: inherit;
    padding-right: 1rem;
    padding-left: 1rem;
    padding-top: 0.25rem;
}
