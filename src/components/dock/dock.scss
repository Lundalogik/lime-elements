@use '../../style/mixins';
@use '../../style/functions';
@use '../../style/internal/variables';

/**
* @prop --dock-expanded-max-width: The maximum width of the Dock when it is expanded. Defaults to `max-content` which means the Dock will adjust its width to the widest dock item.
* @prop --dock-background-color: Background color of the whole component, defaults to `--contrast-100`.
* @prop --dock-item-background-color--selected: Background color of selected dock item, defaults to `--contrast-200`.
* @prop --dock-item-text-color: Text of dock items, defaults to `--contrast-1100`.
* @prop --dock-item-text-color--selected: Text color of selected dock item, defaults to `--contrast-1300`.
* @prop --dock-item-icon-color: Color of the optional icons used in each dock item. Only affects inactive dock items, defaults to text colors for default or selected states.
* @prop --dock-padding-top: Space of top side of the Dock. Can be used with environment variables, to take into account safe areas on mobile devices with rounded screen corners or those that have a "notch". For instance can be set to `env(safe-area-inset-top)`.
* @prop --dock-padding-right: Space of the right side of the Dock. Can be used with environment variables, to take into account safe areas on mobile devices with rounded screen corners or those that have a "notch". For instance can be set to `env(safe-area-inset-right)`.
* @prop --dock-padding-bottom: Space of the bottom side of the Dock. Can be used with environment variables, to take into account safe areas on mobile devices with rounded screen corners or those that have a "notch". For instance can be set to `env(safe-area-inset-bottom)`.
* @prop --dock-padding-left: Space of the left side of the Dock. Can be used with environment variables, to take into account safe areas on mobile devices with rounded screen corners or those that have a "notch". For instance can be set to `env(safe-area-inset-left)`.
* @prop --popover-surface-width: Defines the width of the popover that is opened for dock items with custom components. Defaults to `auto`.
*/

:host(limel-dock) {
    --badge-background-color: rgb(var(--color-red-default));
    --badge-text-color: rgb(var(--color-white));

    --dock-item-height: 2.75rem;
    --dock-padding: 0.25rem;
    --dock-expand-shrink-button-height: 1rem;

    --limel-dock-item-text-color: var(
        --dock-item-text-color,
        rgb(var(--contrast-1100))
    );
    --limel-dock-item-text-color--selected: var(
        --dock-item-text-color--selected,
        rgb(var(--contrast-1300))
    );

    isolation: isolate;
    position: relative;

    display: inline-flex;
    flex-direction: column;

    background-color: var(--dock-background-color, rgb(var(--contrast-100)));
    box-shadow: var(--shadow-depth-8);

    padding-top: var(--dock-padding-top);
    padding-right: var(--dock-padding-right);
    padding-bottom: var(--dock-padding-bottom);
    padding-left: var(--dock-padding-left);
}

:host(limel-dock:not(.has-mobile-layout)) {
    height: 100%;
    width: calc((var(--dock-padding) * 2) + var(--dock-item-height));
}

:host(limel-dock.expanded) {
    width: var(--dock-expanded-max-width, max-content);
}

.footer-separator {
    margin-top: auto;
    justify-self: flex-end;
}

nav {
    box-sizing: border-box;
    display: inline-flex;
    flex-direction: column;
    gap: functions.pxToRem(6);
    flex-grow: 1;

    padding: var(--dock-padding); // needed for the focus effect

    overflow-y: auto;
    scrollbar-width: none; // This hides the scrollbars appearing under in Firefox
    -ms-overflow-style: none; // Same as above for IE 11
    &::-webkit-scrollbar {
        display: none; // This hides the scrollbars appearing under in Chrome
    }

    :host(limel-dock.has-mobile-layout) & {
        justify-content: space-between;
        flex-direction: row;
    }
}

@import './partial-styles/shrink-expand-button';
