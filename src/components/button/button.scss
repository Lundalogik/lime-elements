@use '../../style/functions';
@use '../../style/mixins';

@use '../../style/internal/lime-theme';

@use '@material/button/mdc-button';

:host {
    display: inline-block;
}

:host([hidden]) {
    display: none;
}

:host([disabled]) {
    pointer-events: none;
}

button {
    @include mixins.is-elevated-clickable();

    &.mdc-button {
        min-width: functions.pxToRem(36);
        padding: 0 functions.pxToRem(12);
        height: 100%;
        min-height: functions.pxToRem(36);
        width: 100%;

        &:not(:disabled) {
            color: var(--mdc-theme-primary, rgb(var(--color-teal-default)));
            background-color: rgb(var(--contrast-100));

            &.mdc-button--raised,
            &.mdc-button--unelevated {
                // Primary
                color: var(--mdc-theme-on-primary, rgb(var(--color-white)));
                background-color: var(
                    --mdc-theme-primary,
                    rgb(var(--color-teal-default))
                );
            }
        }

        &:disabled {
            color: rgba(var(--contrast-1600), 0.37);
            background-color: rgba(var(--contrast-1600), 0.1);

            &.mdc-button--raised,
            &.mdc-button--unelevated {
                // Primary
                background-color: rgba(var(--contrast-1700), 0.15);
            }

            &.mdc-button--outlined {
                border-color: rgba(var(--contrast-1700), 0.2);
            }
        }
    }

    .label {
        opacity: 1;
    }

    limel-spinner {
        opacity: 0;
        display: none;
        position: absolute;
    }

    .mdc-button__icon {
        flex-shrink: 0;
    }

    .mdc-button__icon.no-label {
        margin-right: functions.pxToRem(-4);
        margin-left: functions.pxToRem(-4);
    }

    limel-icon {
        vertical-align: top;
    }

    svg {
        fill: currentColor;
        height: functions.pxToRem(30);
        opacity: 0;
        pointer-events: none;
        position: absolute;
        width: functions.pxToRem(30);
    }

    limel-icon,
    .label,
    limel-spinner,
    svg {
        transition: opacity 300ms ease-in-out;
    }

    &.loading {
        limel-icon,
        .label {
            opacity: 0;
        }
        limel-spinner {
            opacity: 1;
            display: block;
        }
    }

    &.just-loaded {
        limel-icon,
        .label {
            opacity: 0;
        }
        svg {
            opacity: 1;
        }
        limel-spinner {
            display: block;
        }
    }
}

$speed-of-reducing-presence: 0.3s;

@keyframes reduced-presence {
    0% {
        opacity: 1;
        transform: scale(1);
    }
    100% {
        opacity: 0;
        transform: scale(0.7);
    }
}

:host(.has-reduced-presence) {
    button {
        &[disabled]:not(.loading):not(.just-loaded) {
            animation: reduced-presence $speed-of-reducing-presence ease
                forwards;
            transition: padding $speed-of-reducing-presence ease,
                min-width $speed-of-reducing-presence ease;
            transition-delay: $speed-of-reducing-presence;

            padding: 0;
            min-width: 0;
            // we don't animate `min-height` and reset it to `0`, otherwise the
            // button completely dissapear physically and can sometimes layout-shifts
            // in the UI

            .label {
                transition: font-size 0.8s ease;
                transition-delay: $speed-of-reducing-presence;
                font-size: 0;
                opacity: 0;
            }
            limel-icon,
            limel-spinner,
            svg {
                transition: all $speed-of-reducing-presence ease;
                transition-delay: $speed-of-reducing-presence;

                opacity: 0;
                width: 0;
                height: 0;
            }
        }
    }
}
