@use '../../style/mixins';

/**
 * @prop --dialog-width: Width of the dialog.
 * @prop --dialog-max-width: Max width of the dialog.
 * @prop --dialog-height: Height of the dialog.
 * @prop --dialog-max-height: Max height of the dialog.
 * @prop --dialog-padding-top-bottom: Padding on top and bottom of dialog content. Affects the height of fade-out effects on top and bottom edges when the content is scrollable and has overflowed out of the content area. Defaults to `1.5rem`. Note that if you use this variable and set it to numbers smaller than 1rem, you will loose the fade-out effects on the edges. If you have set these paddings to `0`, losing the fade out effects should be however fine for your use case! Because in such a case your intention is to handle the `overflow` internally in the component that is displayed in the dialog's content.
 * @prop --dialog-padding-left-right: Padding on the sides of dialog content. Defaults to `1.25rem`.
 * @prop --dialog-heading-title-color: Color of the title.
 * @prop --dialog-heading-subtitle-color: Color of the subtitle.
 * @prop --dialog-heading-supporting-text-color: Color of the supporting text.
 * @prop --dialog-heading-icon-color: Color of the icon.
 * @prop --dialog-heading-icon-background-color: Background color of the icon when displayed as a badge.
 */

:host(limel-dialog) {
    --limel-dialog-border-radius: 0.75rem;
    --header-heading-color: var(--dialog-heading-title-color);
    --header-subheading-color: var(--dialog-heading-subtitle-color);
    --header-supporting-text-color: var(--dialog-heading-supporting-text-color);
    --header-icon-color: var(--dialog-heading-icon-color);
    --header-icon-background-color: var(--dialog-heading-icon-background-color);
}

* {
    box-sizing: border-box;
}

$responsive-body-padding: 3vw;

dialog {
    border: none;
    outline: none;

    padding: env(safe-area-inset-top) env(safe-area-inset-right)
        env(safe-area-inset-bottom) env(safe-area-inset-left);
    border-radius: var(--limel-dialog-border-radius);

    width: var(--dialog-width, fit-content);
    height: var(--dialog-height, fit-content);

    max-width: var(--dialog-max-width, calc(100vw - 1rem));
    max-height: var(--dialog-max-height, calc(100% - 1rem));

    background-color: transparent;
    box-shadow: var(--shadow-depth-8), var(--shadow-depth-64);

    &.fullscreen {
        --dialog-width: 100%;
        --dialog-height: 100%;
        width: 100%;
        height: 100%;
    }
}

.surface {
    display: flex;
    flex-direction: column;

    height: 100%;
    width: 100%;

    border-radius: var(--limel-dialog-border-radius);
    background-color: var(--lime-elevated-surface-background-color);
}

.content {
    flex-grow: 1;
    overflow-y: auto;

    --limel-top-edge-fade-height: var(--dialog-padding-top-bottom, 1.5rem);
    --limel-bottom-edge-fade-height: var(--dialog-padding-top-bottom, 1.5rem);
    @include mixins.fade-out-overflowed-content-on-edges(vertically);

    color: var(--mdc-theme-on-surface);
    padding-left: var(
        --dialog-padding-left-right,
        min(1.25rem, $responsive-body-padding)
    );
    padding-right: var(
        --dialog-padding-left-right,
        min(1.25rem, $responsive-body-padding)
    );
}

limel-header,
.actions {
    flex-shrink: 0;
}

.actions {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    min-height: 52px;
    margin: 0px;
    padding: 8px;
    border-top: 1px solid transparent;
}

slot[name='header'] {
    display: none;
}

slot[name='button'] {
    display: flex;
    gap: 0.5rem;
    width: 100%;
    justify-content: flex-end;
}

@media screen and (max-width: 760px) {
    slot[name='button'] {
        flex-direction: column-reverse;
    }
    .mdc-dialog__actions {
        padding: min(1.5rem, $responsive-body-padding);
        padding-top: 1rem;
    }
}

@import './partial-styles/show-hide-animations.scss';
