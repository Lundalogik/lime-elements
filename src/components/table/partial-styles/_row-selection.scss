@use '../../../style/functions';

// .has-rowselector {} // Mabe useful later

$checkbox-distance-to-left-edge: 0.5rem;

.select-all,
.limel-table--row-selector {
    // prevent the checkbox affecting the row height
    --mdc-checkbox-touch-target-size: 1.125rem;
    --mdc-checkbox-ripple-size: 2.5rem;
}

.select-all {
    position: absolute;
    z-index: $table--limel-table--row-selector;
    left: $checkbox-distance-to-left-edge;
    top: functions.pxToRem(6);
}

.limel-table--row-selector {
    position: sticky !important; // otherwise will be overwritten from `.tabulator-row .tabulator-cell`
    left: 0;
    border-width: 0;
    z-index: $table--limel-table--row-selector;

    text-overflow: unset !important; // Otherwise a `â€¦` will be rendered besides the checkbox, since we truncate all cells
    padding-left: $checkbox-distance-to-left-edge !important;

    limel-checkbox {
        margin-top: functions.pxToRem(1);
    }

    .tabulator-row-odd & {
        background-image: linear-gradient(
            to right,
            rgb(var(--table-row-background-color--odd)) 70%,
            rgb(var(--table-row-background-color--odd), 0)
        );
    }

    .tabulator-row-even & {
        background-image: linear-gradient(
            to right,
            rgb(var(--table-row-background-color--even)) 70%,
            rgb(var(--table-row-background-color--even), 0)
        );
    }

    .tabulator-row:not(.tabulator-calcs):hover & {
        will-change: background-image;
        background-image: linear-gradient(
            to right,
            rgb(var(--table-row-background-color--hover)) 70%,
            rgb(var(--table-row-background-color--hover), 0)
        );
    }

    .tabulator-row.active & {
        background-image: linear-gradient(
            to right,
            rgb(var(--table-row-background-color--active)) 70%,
            rgb(var(--table-row-background-color--active), 0)
        );
    }

    limel-checkbox {
        transition: opacity 0.2s ease;
        opacity: 0.3;

        .tabulator-row:hover & {
            opacity: 1;
        }

        .has-selection & {
            opacity: 1;
        }
    }

    // make the row selector column non-resizeable by hiding
    // the resize handles between the frozen column and the
    // column next to it
    .tabulator-col-resize-handle {
        display: none;
    }
    & + .tabulator-col,
    & + .tabulator-cell {
        .tabulator-col-resize-handle.prev {
            display: none;
        }
    }
}

.has-movable-columns
    .tabulator-header
    .tabulator-col.limel-table--row-selector {
    border: none;
    cursor: default !important;
    pointer-events: none;
    background-color: transparent;
    background-image: linear-gradient(
        to right,
        rgb(var(--table-header-background-color--hover)) 70%,
        rgb(var(--table-header-background-color--hover), 0)
    );
    left: 0;
}

.tabulator-calcs {
    .tabulator-cell {
        .has-selection & {
            color: var(
                --table-arrow-color--active
            ); // to indicate that aggregated numbers are coming from the selcted rows not all rows
        }
    }
}
