/**
* :::important
* The `RadioButtonTemplate` can be imported and used in the HTML of
* other components, to render a non-functional and decorative radio button in
* their UI. An example of this is the list component.
* This means the content of `RadioButtonTemplate` will become a part of the
* consumer's DOM structure.
*
* Additionally, the consumer components' also need to import the current `.scss`
* file into their own styles file, for the radio button to be rendered correctly!
* This means, if the styles in this file are not "specific" enough,
* there is a risk that the consumer component's styles are affected by
* our styles here.
*
* For instance if the consumer has a `<label>`,
* it might unintentionally inherit styles from the radio button; unless we
* make the such styles more specific here.
*
* Naturally, we cannot mitigate all sorts of potential styling problems.
* The consumer component should be aware of this issue too.
* But we can ensure that our styles here both make sense,
* are readable, and are as specific as possible to avoid unintended side effects.
* :::
*/

@use '../../style/mixins';

@forward '../../style/internal/boolean-input.scss';

.radio-button {
    --limel-boolean-input-box-border-radius: var(
        --limel-boolean-input-box-size
    );
}

.box {
    &:after {
        width: 100%;
        height: 100%;
        border-radius: 50%;

        .boolean-input:has(input[type='radio']:checked) & {
            opacity: 1;
            transform: scale(0.6);
            box-shadow: var(--shadow-depth-8);
        }
    }
}
