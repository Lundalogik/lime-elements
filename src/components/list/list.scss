@use '../../style/functions';
@use '../../style/mixins';

@use '../../style/internal/lime-theme';
@use '../checkbox/checkbox.scss';

@use '@material/list';

$list-border-radius: 0.375rem; // 6px
$list--has-interactive-items--mdc-list-item--hover: 1;
$list-static-actions-list: 1;
$list-mdc-list-item: 0;

/**
 * @prop --icon-background-color: Color to use for icon background when `badgeIcons=true`.
 * @prop --icon-color: Color to use for icon. Defaults to grey when `badgeIcons=false`. Defaults to white when `badgeIcons=true`.
 * @prop --list-grid-max-width: Maximum width of a list that has `has-grid-layout` class. Defaults to `100%`.
 * @prop --list-grid-item-max-width: Maximum width of items in a list that has `has-grid-layout` class. Defaults to `10rem`.
 * @prop --list-grid-item-min-width: Minimum width of items in a list that has `has-grid-layout` class. Defaults to `7.5rem`.
 * @prop --list-grid-gap: Distance between items in a list that has `has-grid-layout` class. Defaults to `0.75rem`.
 * @prop --list-background-color-of-odd-interactive-items: Background color of odd list items, when `has-striped-rows` class is applied to the component. Defaults to `--contrast-200`.
 * @prop --list-background-color-of-even-interactive-items:  Background color of even list items, when `has-striped-rows` class is applied to the component. Defaults to `transparent`.
 * @prop --list-margin: Space around the list. Defaults to `0.25rem`, which visualizes keyboard-focused items in a better way, as it adds some space for the outline effect;
 */

:host(limel-list) {
    display: block;
    isolation: isolate;
    @include checkbox.custom-checkbox-styles;
}

:host([hidden]) {
    display: none;
}

@include list.deprecated-core-styles;

.mdc-deprecated-list {
    --mdc-theme-text-icon-on-background: var(
        --icon-color,
        rgb(var(--contrast-900))
    );
    margin: var(
        --list-margin,
        0.25rem
    ); // added space to visualize keyboard-focused items
    padding: 0;
    border-radius: $list-border-radius;

    .mdc-deprecated-list-divider {
        border-bottom-color: transparent;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        height: auto;
        padding: 0 0.5rem;
    }

    .limel-list-divider-line {
        background-color: rgb(var(--contrast-400));
        height: 0.125rem;
        border-radius: 1rem;
        min-width: 1rem;
        flex-grow: 1;
    }

    .limel-list-divider-title {
        all: unset;
        @include mixins.truncate-text;
        color: rgb(var(--contrast-900));
        font-size: 0.8125rem; // 13px
    }

    .mdc-deprecated-list-item {
        transition: background-color 0.2s ease;
        box-sizing: border-box;
        z-index: $list-mdc-list-item; // in Chrome on Windows, menus flicker when they have a scroll bar and user hovers on them. We may be able to remove this in future versions of Chrome. Kia 2021-May-12

        &:not(.mdc-deprecated-list-item--disabled) {
            &:hover {
                background-color: rgb(var(--contrast-300));
                z-index: 1;
            }
        }

        &.mdc-deprecated-list-item--disabled {
            cursor: not-allowed;

            limel-icon {
                opacity: 0.38; // similar to `mdc-deprecated-list-item__text` when disabled
            }
        }

        &:first-child {
            border-top-left-radius: $list-border-radius;
            border-top-right-radius: $list-border-radius;
        }
        &:last-child {
            border-bottom-right-radius: $list-border-radius;
            border-bottom-left-radius: $list-border-radius;
        }
    }

    &.selectable
        .mdc-deprecated-list-item:not(.mdc-deprecated-list-item--disabled) {
        cursor: pointer;
    }

    .mdc-deprecated-list-item__meta {
        // the action menu on the right side a list item
        line-height: 100%;
        margin-right: -0.5rem;
    }

    .mdc-deprecated-list-item__graphic {
        margin-right: functions.pxToRem(8);
    }

    &.mdc-deprecated-list--avatar-list {
        position: relative;

        limel-icon.mdc-deprecated-list-item__graphic {
            background-color: var(
                --icon-background-color,
                rgb(var(--contrast-900))
            );
            color: var(--icon-color, rgba(var(--color-white), 0.88));
            margin-right: functions.pxToRem(12);
            margin-left: functions.pxToRem(-4);
        }

        hr.mdc-deprecated-list-divider {
            position: absolute;
            bottom: 0;

            &.mdc-deprecated-list-divider--inset {
                --icon-width: #{functions.pxToRem(40)};
                --icon-right-padding: #{functions.pxToRem(12)};
                --list-right-padding: #{functions.pxToRem(12)};
                right: 0;
                width: calc(
                    100% - var(--icon-width) - var(--icon-right-padding) -
                        var(--list-right-padding)
                );

                &.x-small {
                    --icon-width: #{functions.pxToRem(24)};
                }

                &.small {
                    --icon-width: #{functions.pxToRem(32)};
                }

                &.medium {
                    --icon-width: #{functions.pxToRem(40)};
                }

                &.large {
                    --icon-width: #{functions.pxToRem(48)};
                }
            }
        }

        .mdc-deprecated-list-item:last-child hr.mdc-deprecated-list-divider {
            display: none;
        }
    }

    &.mdc-deprecated-list--two-line {
        .mdc-deprecated-list-item__text {
            padding-top: functions.pxToRem(8);
            padding-bottom: functions.pxToRem(8);
        }
        .mdc-deprecated-list-item__primary-text {
            margin-bottom: functions.pxToRem(4);
        }
    }

    .mdc-deprecated-list-item__secondary-text,
    .mdc-deprecated-list-item__primary-text,
    .mdc-deprecated-list-item__command-text {
        margin: 0;
        &:before,
        &:after {
            display: none;
        }
    }

    .mdc-deprecated-list-item__command-text {
        color: rgb(var(--contrast-800));
        margin-left: 0.7rem;
    }

    .mdc-deprecated-list-item__text {
        align-self: center;
        width: 100%;
    }

    .has-primary-component {
        .mdc-deprecated-list-item__text {
            margin-left: 0.5rem;
        }
    }
    .mdc-deprecated-list-item__primary-command-text {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: baseline;
    }

    // Tweaks to display the icon correctly in Edge
    limel-icon.mdc-deprecated-list-item__graphic {
        display: block;
    }
}

.mdc-deprecated-list:not(.mdc-deprecated-list--avatar-list) {
    limel-icon.mdc-deprecated-list-item__graphic {
        // Tweaks to make icon lists align nicely with badge-icon lists.
        &[size='x-small'] {
            margin-right: functions.pxToRem(4);
        }
        &[size='small'] {
            margin-right: functions.pxToRem(8);
        }
        &[size='medium'] {
            margin-right: functions.pxToRem(8);
        }
        &[size='large'] {
            margin-right: functions.pxToRem(12);
        }
    }
}

.mdc-deprecated-list-item.mdc-deprecated-list-item--selected {
    &:before {
        background-color: var(--mdc-theme-primary);
        opacity: 0.15;
    }
}

:not(.mdc-deprecated-list--non-interactive) {
    > {
        :not(.mdc-deprecated-list-item--disabled).mdc-deprecated-list-item {
            @include mixins.visualize-keyboard-focus;

            &:focus-visible {
                border-radius: $list-border-radius;
                z-index: $list--has-interactive-items--mdc-list-item--hover;
            }
        }
    }
}

@import '../checkbox/checkbox.scss';

@import './radio-button/radio-button.scss';

@import './partial-styles/custom-styles.scss';
@import './partial-styles/enable-multiline-text.scss';
@import './partial-styles/_has-grid-layout.scss';
@import './partial-styles/_static-actions.scss';
