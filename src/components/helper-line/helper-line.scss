:host(limel-helper-line) {
    transition: opacity 0.2s ease;

    box-sizing: border-box;
    display: grid;

    padding: 0.125rem 1rem 0 1rem;
    min-width: 0; // prevents overflowing, if component is placed in flex containers

    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.6875rem;
    font-weight: 400;
    letter-spacing: 0.0333333333em; // keeping this for now for consistency, until we get rid of all of them
    line-height: normal;

    color: rgb(var(--contrast-1200));
}

div {
    display: flex;
    justify-content: space-between;
    gap: 0.75rem;
    overflow: hidden;
}

:host(limel-helper-line.invalid) {
    .helper-text {
        color: var(--mdc-theme-error);
    }
}

.counter {
    flex-shrink: 0;
    margin-left: auto;
}

// This animates height of the helper line, from `0` to `auto`.
// To get this animation effect, the consumer component should
// add `hide` classed accordingly.
:host(limel-helper-line) {
    --limel-h-l-grid-template-rows-transition-speed: 0.46s; // for internal use only!

    transition: grid-template-rows
        var(--limel-h-l-grid-template-rows-transition-speed)
        cubic-bezier(1, 0.09, 0, 0.89);
    grid-template-rows: 1fr;
}

:host(limel-helper-line.hide) {
    --limel-h-l-grid-template-rows-transition-speed: 0.3s;
    grid-template-rows: 0fr;
}
// End: animating height
