@use '../../style/internal/shared_input-select-picker';
@use '../../style/mixins.scss';

@include shared_input-select-picker.lime-looks-like-input-value;
.lime-looks-like-input-value {
    padding: var(--limel-text-editor-padding);
}

* {
    box-sizing: border-box;
}

:host(limel-text-editor) {
    --limel-text-editor-outline-color: #{shared_input-select-picker.$lime-text-field-outline-color};
    --limel-text-editor-background-color: #{shared_input-select-picker.$background-color-normal};
    --limel-text-editor-label-color: #{shared_input-select-picker.$label-color};
    --limel-text-editor-padding: 0.75rem 1rem;
    position: relative;
    isolation: isolate;
    display: flex;
    flex-direction: column;

    width: 100%;
    min-width: 5rem;
    min-height: 5rem;
    height: 100%;
    max-height: 100%;
}

:host(limel-text-editor:hover) {
    --limel-text-editor-outline-color: #{shared_input-select-picker.$lime-text-field-outline-color--hovered};
}

:host(limel-text-editor:focus-within) {
    --limel-text-editor-outline-color: #{shared_input-select-picker.$lime-text-field-outline-color--focused};
}

:host(limel-text-editor[disabled]:not([disabled='false'])) {
    @include shared_input-select-picker.looks-disabled;

    limel-prosemirror-adapter {
        pointer-events: none;
    }
}

:host(limel-text-editor[invalid]:not([invalid='false'])) {
    --limel-text-editor-outline-color: var(--lime-error-text-color);
}

:host(limel-text-editor[readonly]:not([readonly='false'])) {
    --limel-text-editor-placeholder-top: 0;
    --limel-text-editor-outline-color: transparent;
    --limel-text-editor-background-color: transparent;

    limel-markdown {
        display: block;
        padding: var(--limel-text-editor-padding);
    }
}

.notched-outline {
    transition: bottom
        var(--limel-h-l-grid-template-rows-transition-speed, 0.46s)
        cubic-bezier(1, 0.09, 0, 0.89);
    pointer-events: none;
    position: absolute;
    inset: 0;
    bottom: var(--limel-text-editor-notched-outline-bottom, 0);

    display: flex;
    background-color: var(--limel-text-editor-background-color);
}

.leading-outline,
.notch,
.trailing-outline {
    transition: border-color 0.2s ease;
    border-width: 1px;
    border-style: solid;
    border-color: var(--limel-text-editor-outline-color);
}

.leading-outline {
    flex-shrink: 0;
    width: 0.75rem;
    border-right-width: 0;
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
}

.notch {
    flex-shrink: 0;

    position: relative;
    z-index: 2;

    border-top-width: 0;
    border-right-width: 0;
    border-left-width: 0;

    max-width: calc(100% - 1.5rem);
}

.trailing-outline {
    flex-grow: 1;
    border-left-width: 0;
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
}

label {
    transform: translateY(-50%);

    @include mixins.truncate-text;
    display: block;
    padding: 0 0.25rem;

    color: var(--limel-text-editor-label-color);
    font-size: 0.65rem; // `10.4px` similar to MDC's floating label
    letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.009375em);

    :host(limel-text-editor[required]) & {
        &::after {
            content: '*';
        }
    }
}

.placeholder {
    @include mixins.truncate-text;
    pointer-events: none;
    position: absolute;
    top: var(--limel-text-editor-placeholder-top, 2.25rem);
    left: 0;
    right: 0;

    padding: var(--limel-text-editor-padding);
    font-style: italic;
    font-size: 0.875rem;
    color: shared_input-select-picker.$input-placeholder-color;
}

limel-prosemirror-adapter {
    flex-grow: 1;

    min-width: 0;
    min-height: 0;
    height: 100%;
    overflow: hidden auto;
}

@include mixins.hide-helper-line-when-not-needed(limel-text-editor);
:host(limel-text-editor.has-helper-text:focus-within),
:host(limel-text-editor.has-helper-text[invalid]:not([invalid='false'])) {
    .notched-outline {
        --limel-text-editor-notched-outline-bottom: 1rem;
    }
}

:host(limel-text-editor[allow-resize]) {
    limel-prosemirror-adapter {
        resize: vertical;
    }
}
