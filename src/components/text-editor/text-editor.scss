@use '../../style/internal/shared_input-select-picker';
@use '../../style/mixins.scss';

/**
 * @prop --text-editor-max-height: the tallest height the text editor can become when auto-resizing itself. Defaults to `calc(100vh - (env(safe-area-inset-top) + env(safe-area-inset-bottom)) - 4rem)`.
 * @prop --text-editor-fade-out-background-color: the color of the fade-out effect at the top and bottom of the text editor, when the text-editor is in readonly state. Defaults to rgb(var(--contrast-100)).
 */

* {
    box-sizing: border-box;
}

$min-height: 5rem;
$min-height-condensed: calc($min-height / 2);

:host(limel-text-editor) {
    --limel-notched-outline-z-index: 2; // since `div.toolbar` has `z-index: 1;`
    --limel-prosemirror-adapter-toolbar-opacity: 0.6;
    --limel-text-editor-padding: 0.25rem 1rem 0.75rem 1rem;
    --limel-prosemirror-adapter-toolbar-grid-template-rows: 1fr;
    --limel-prosemirror-adapter-toolbar-grid-template-rows-transition-duration: 0.3s;
    --limel-prosemirror-adapter-toolbar-transition-timing-function: cubic-bezier(
        0.19,
        0.23,
        0.26,
        0.89
    );

    position: relative;
    isolation: isolate;
    display: flex;
    flex-direction: column;

    width: 100%;
    min-width: 5rem;
    min-height: $min-height;
    height: 100%;
    max-height: var(
        --text-editor-max-height,
        calc(
            100vh - (env(safe-area-inset-top) + env(safe-area-inset-bottom)) -
                4rem
        )
    );
    padding: 1px; // prevents visual defects that can appear due to the backdrop-filter and closeness to borders

    limel-notched-outline {
        height: 100%; // overrides the default `height: fit-content;`
    }
}

:host(limel-text-editor:focus-within),
:host(limel-text-editor:not([ui='minimal']):hover) {
    --limel-prosemirror-adapter-toolbar-opacity: 1;
}

:host(limel-text-editor[ui='minimal']:not(:focus-within)) {
    --limel-prosemirror-adapter-toolbar-grid-template-rows: 0fr;
    --limel-prosemirror-adapter-toolbar-grid-template-rows-transition-duration: 0.46s;
    --limel-prosemirror-adapter-action-bar-padding-top-bottom: 0;
    --limel-prosemirror-adapter-toolbar-opacity: 0;
}

:host(limel-text-editor[ui='minimal']:not(:focus-within)),
:host(limel-text-editor[ui='no-toolbar']) {
    --limel-text-editor-padding: 0.75rem 1rem 0.75rem 1rem;
    --limel-text-editor-placeholder-top: 0;

    min-height: $min-height-condensed;
    limel-prosemirror-adapter {
        min-height: $min-height-condensed;
    }
}

:host(limel-text-editor:focus-within),
:host(limel-text-editor:focus) {
    .placeholder {
        opacity: 0;
    }
}

:host(limel-text-editor[disabled]:not([disabled='false'])) {
    limel-prosemirror-adapter {
        @include shared_input-select-picker.looks-disabled;
        pointer-events: none;
    }
}

:host(limel-text-editor[readonly]:not([readonly='false'])) {
    --limel-text-editor-padding: 0.75rem 1rem 0.75rem 1rem;
    --limel-text-editor-placeholder-top: 0;

    limel-markdown {
        // displayed when `readonly` instead of the adapter
        display: block;
        padding: var(--limel-text-editor-padding);

        overflow-y: auto;
        -webkit-overflow-scrolling: touch;
        height: 100%;

        &:before,
        &:after {
            z-index: 1;
            pointer-events: none;
            content: '';
            display: block;
            position: absolute;
            width: 100%;
        }
        &:after {
            height: 1.75rem;
            top: 0;
            background: linear-gradient(
                var(
                    --text-editor-fade-out-background-color,
                    rgb(var(--contrast-100))
                ),
                transparent
            );
        }

        &:before {
            height: 2rem;
            bottom: -0.25rem;
            background: linear-gradient(
                transparent,
                var(
                    --text-editor-fade-out-background-color,
                    rgb(var(--contrast-100))
                )
            );
        }
    }
}

.placeholder {
    transition-property: top;
    transition-duration: var(
        --limel-prosemirror-adapter-toolbar-grid-template-rows-transition-duration
    );
    transition-timing-function: var(
        --limel-prosemirror-adapter-toolbar-transition-timing-function
    );
    @include mixins.truncate-text;
    pointer-events: none;
    position: absolute;
    top: var(--limel-text-editor-placeholder-top, 2.25rem);
    left: 0;
    right: 0;

    padding: var(--limel-text-editor-padding);
    font-style: italic;
    font-size: 0.875rem;
    color: shared_input-select-picker.$input-placeholder-color;
}

limel-prosemirror-adapter {
    flex-grow: 1;

    min-width: 0;
    min-height: $min-height;
    height: 100%; // this can be overwritten by user's manual resizing
    max-height: 100%;
    overflow: hidden auto;
    -webkit-overflow-scrolling: touch;
}

@include mixins.hide-helper-line-when-not-needed(limel-text-editor);

:host(limel-text-editor[allow-resize]) {
    limel-prosemirror-adapter {
        resize: vertical;
    }
}
