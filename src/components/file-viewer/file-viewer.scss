@use '../../style/internal/variables';
@use '../../style/internal/shared_input-select-picker';
@use '../../style/mixins';

$size-of-buttons: 2rem;

:host {
    isolation: isolate;
    position: relative;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}

* {
    box-sizing: border-box;
}

img,
video,
audio,
object,
iframe {
    max-height: 100%;
    max-width: 100%;
    box-sizing: border-box;
}

iframe {
    border: none;
    width: 100%;
    height: 100%;
    min-height: 20rem; // makes sure to get minimum comfortable space for viewing office files, and Microsoft Office viewers toolbars
}

img {
    min-width: 7rem;
    object-fit: contain; // increases or decreases the size of the image to fill the box whilst preserving its aspect-ratio.
}

video {
    width: 100%;
    height: auto;
}

audio {
    width: 100%;
}

object {
    width: 100%;
    height: 100%;
}

object[type='application/pdf'] {
    min-height: 20rem;
    // makes sure to get browsers' native controls for the PDF
}

object[type='text/plain'] {
    border-radius: 0.25rem;
    padding-right: $size-of-buttons;

    overflow-y: auto;
}

@mixin plain-text-in-fullscreen {
    background-color: rgb(var(--color-gray-darker));

    object[type='text/plain'] {
        max-width: 50rem;
        max-height: calc(100% - 2rem);
    }
}

:host(:fullscreen) {
    @include plain-text-in-fullscreen;
}
:host(:-webkit-full-screen) {
    // this is repetition of the previous block,
    // but needed for Safari to work.
    // Cannot write SCSS rules for `:host` using commas for some reason.
    // e.g.: `:host(:fullscreen), :host(:-webkit-full-screen)`.
    // So you have to repeat it sadly.
    @include plain-text-in-fullscreen;
}

@import './partial-styles/ui-controls.scss';
