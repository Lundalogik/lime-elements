/**
* @prop --info-tile-border-radius: defines the radius of corners of the info-tile. Defaults to `1rem`
* @prop --info-tile-icon-color: defines the fill color of the info-tile icon. Defaults to `--contrast-1000`
* @prop --info-tile-text-color: defines the color of the info-tile label. Defaults to `--contrast-1100`
* @prop --info-tile-background-color: defines the backgrounds color of the info-tile icon. Defaults to `--contrast-100`
* @prop --info-tile-badge-text-color: Text color of the notification badge. Defaults to `--color-white`
* @prop --info-tile-badge-background-color: Background color of the notification badge. Defaults to `--color-red-default`
* @prop --info-tile-progress-fill-color: Determines the color of the progressed section. Defaults to `--lime-primary-color`.
* @prop --info-tile-progress-background-color: Determines the background color of the central section of the progress bar. Defaults to `--info-tile-background-color`.
* @prop --info-tile-progress-suffix-color: Determines the color of the progress prefix. Defaults to `--contrast-1000`.
 * @prop --info-tile-progress-text-color: Determines the color of the progress value. Defaults to `--info-tile-text-color`.
 * @prop --info-tile-progress-prefix-color: Determines the color of the progress suffix. Defaults to `--contrast-1000`.
*/

@use '../../style/mixins';

:host(limel-info-tile) {
    --badge-text-color: var(
        --info-tile-badge-text-color,
        rgb(var(--color-white))
    );
    --badge-background-color: var(
        --info-tile-badge-background-color,
        rgb(var(--color-red-default))
    );

    --circular-progress-text-color: var(
        --info-tile-progress-text-color,
        var(--info-tile-text-color)
    );
    --circular-progress-suffix-color: var(--info-tile-progress-suffix-color);
    --circular-progress-prefix-color: var(--info-tile-progress-prefix-color);
    --circular-progress-track-color: rgb(var(--contrast-800), 0.3);
    --circular-progress-fill-color: var(--info-tile-progress-fill-color);
    --circular-progress-background-color: var(
        --info-tile-progress-background-color,
        var(--info-tile-background-color)
    );

    --label-min-size: 0.75rem;
    --label-preferred-size: 6cqw;
    --label-max-size: 1rem;

    --value-min-size: 1rem;
    --value-preferred-size: 20cqw;
    --value-max-size: 4rem;

    --suffix-prefix-min-size: 0.75rem;
    --suffix-prefix-preferred-size: 8cqw;
    --suffix-prefix-max-size: 1.5rem;

    --icon-min-size: 2rem;
    --icon-preferred-size: 60cqh;
    --icon-max-size: calc(100cqw - 0.5rem);

    isolation: isolate;
    container-type: size;
    position: relative;
    display: flex;

    width: 100%;
    height: 100%;

    * {
        box-sizing: border-box;
    }
}

:host(limel-info-tile[disabled]) {
    a {
        opacity: 0.5;
        cursor: not-allowed;
    }
}

a {
    all: unset;
    overflow: hidden;

    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;

    height: 100%;
    width: 100%;
    flex-grow: 1;

    padding: 0.25rem 1rem 0.5rem 1rem;
    border-radius: var(--info-tile-border-radius, 1rem);
    background-color: var(
        --info-tile-background-color,
        var(--lime-elevated-surface-background-color)
    );

    &.is-clickable {
        @include mixins.is-elevated-clickable(
            $background-color:
                var(
                    --info-tile-background-color,
                    var(--lime-elevated-surface-background-color)
                ),
            $background-color--hovered:
                var(
                    --info-tile-background-color,
                    var(--lime-elevated-surface-background-color)
                )
        );
        @include mixins.visualize-keyboard-focus;
        cursor: pointer;
    }
}

.icon {
    position: absolute;
    top: 0.5rem;
    right: 0.75rem;
    padding: 0.25rem;

    aspect-ratio: 1/1;

    color: var(--info-tile-icon-color, rgb(var(--contrast-1000)));

    border-radius: 0;
    height: clamp(
        var(--icon-min-size),
        var(--icon-preferred-size),
        var(--icon-max-size)
    );

    @supports not (container-type: size) {
        height: min(20%, 5rem);
    }

    .has-circular-progress & {
        top: unset;
        bottom: 0.5rem;
        --icon-min-size: 1.5rem;
        --icon-preferred-size: 20cqh;
    }
}

.progress {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;

    --circular-progress-size: min(
        var(--icon-preferred-size),
        var(--icon-max-size)
    );
    @supports not (container-type: size) {
        --circular-progress-size: initial;
    }
}

.label {
    z-index: 1;
    color: var(--info-tile-text-color, rgb(var(--contrast-1100)));

    line-height: 1.2;
    font-size: clamp(
        var(--label-min-size),
        var(--label-preferred-size),
        var(--label-max-size)
    );
    @supports not (container-type: size) {
        font-size: 0.875rem;
    }
}

limel-badge {
    position: absolute;
    top: -0.5rem;
    right: -0.5rem;
}

limel-linear-progress {
    --lime-primary-color: var(--info-tile-text-color);
    position: absolute;
    inset: auto 0 0 0;
    border-radius: 1rem;
    overflow: hidden;
}

.value-group {
    position: relative;
    z-index: 1;
    display: flex;
    flex-direction: column;
    color: var(--info-tile-text-color, rgb(var(--contrast-1100)));
}

.value-and-suffix,
.label {
    text-shadow: 0 0 0.5rem
            var(--info-tile-background-color, rgb(var(--contrast-100))),
        0 0 0.25rem var(--info-tile-background-color, rgb(var(--contrast-100)));
}

.value-and-suffix {
    display: flex;
}

.prefix,
.suffix {
    font-size: clamp(
        var(--suffix-prefix-min-size),
        var(--suffix-prefix-preferred-size),
        var(--suffix-prefix-max-size)
    );
    opacity: 0.7;

    @supports not (container-type: size) {
        font-size: 0.75rem;
    }
}

.prefix {
    align-self: flex-start;
    line-height: normal;
    transform: translateY(40%);
}

.value {
    transition: opacity 0.2s ease,
        transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.95);
    transform-origin: left;
    transform: translate3d(0, 0, 0) scale(1);

    @include mixins.truncate-text;
    font-weight: bold;
    line-height: normal;

    font-size: clamp(
        var(--value-min-size),
        var(--value-preferred-size),
        var(--value-max-size)
    );
    @supports not (container-type: size) {
        font-size: 1.5rem;
    }

    :host(limel-info-tile[loading]) & {
        opacity: 0.3;
        transform: translate3d(0, 0, 0) scale(0.9);
    }
}

.suffix {
    transform: translateY(10%);
}

$xs: 8rem; //128px:
$s: 18.75rem; //300px
$m: 40.5rem; //648px
$l: 62.5rem; //1000px

@container (width < #{$xs}) {
    .progress {
        top: 0.25rem;
        right: 0.25rem;
    }
    a {
        padding: 0.375rem;
        gap: 0.125rem;
    }
}

@container (width < #{$s}) {
    .progress {
        top: 0.5rem;
        right: 0.5rem;
    }
    .icon {
        top: 0.25rem;
        right: 0.5rem;
        .has-circular-progress & {
            right: 0.25rem;
            bottom: 0.25rem;
        }
    }
}

@container (width < #{$m}) {
    .value {
        &.ch-1,
        &.ch-2,
        &.ch-3,
        &.ch-4 {
            --value-preferred-size: 20cqw;
        }
        &.ch-5 {
            --value-preferred-size: 18cqw;
        }
        &.ch-6 {
            --value-preferred-size: 17cqw;
        }
        &.ch-7 {
            --value-preferred-size: 16cqw;
        }
        &.ch-8 {
            --value-preferred-size: 15cqw;
        }
        &.ch-9 {
            --value-preferred-size: 14cqw;
        }
        --value-preferred-size: 13cqw;
    }
}

@container (height > #{$xs}) {
    a {
        padding-top: 0.75rem;
        padding-bottom: 1rem;
    }
}

@container (height < #{$xs}) and (width > #{$xs}) {
    .value {
        --value-preferred-size: 32cqh !important;
    }
    .suffix,
    .prefix {
        --suffix-prefix-preferred-size: 16cqh !important;
    }
}

@container (height > #{$s}) {
    .progress,
    .icon {
        position: relative;
        top: unset;
        right: unset;
    }
    a {
        align-items: center;
        justify-content: center;
    }
    .label {
        text-align: center;
        // -webkit-line-clamp: 3;
    }
    .has-circular-progress {
        .icon {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            --icon-max-size: 3rem;
        }
    }
}
