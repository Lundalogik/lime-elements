@use '../../style/internal/z-index';
@use '../../style/functions';
@use '../../style/internal/shared_input-select-picker';
@use '../../style/mixins';

@use '@material/chips/deprecated/mdc-chips';

.mdc-chip {
    @include mixins.is-flat-inset-clickable($background-color: transparent);
    max-width: 100%;
    min-width: functions.pxToRem(32);
    padding: 0 functions.pxToRem(1);
    display: inline-grid;
    grid-auto-flow: column;
    margin: functions.pxToRem(2) !important;
    font-size: functions.pxToRem(14);

    &:not(:last-child) {
        &:after {
            content: '';
            display: block;

            height: functions.pxToRem(16);
            width: functions.pxToRem(2);
            border-radius: functions.pxToRem(4);
            background-color: var(
                --button-group-text-color,
                rgb(var(--contrast-1200))
            );
            opacity: 0.1;

            position: absolute;
            right: functions.pxToRem(-3);
            top: 0;
            bottom: 0;
            margin: auto;
        }
    }

    label {
        cursor: pointer;
        transition: color 0.2s ease;
    }

    input[type='radio'] {
        width: 0;
        position: absolute;
        opacity: 0; // This removes some visual defects on iOS and Firefox, created by "user agent styles"

        &:focus-visible {
            + label {
                &:after {
                    // visualizes keyboard navigation on Chrome & Firefox
                    // only when non-pointer input is being used,
                    // e.g. tabbed into using keyboard
                    content: '';
                    display: block;
                    position: absolute;
                    top: 0;
                    right: 0;
                    bottom: 0;
                    left: 0;
                    border-radius: functions.pxToRem(60);
                    box-shadow: var(--shadow-depth-8-focused);
                    z-index: z-index.$button-group-radio-button-keyboard-focused;
                }
            }
        }
    }

    span[role='gridcell'] {
        min-width: 0; // This is needed to force mdc-chip__text (which is inside this span) to truncate

        &:focus-within {
            // Cannot use `:focus-visible` here, since it is the radio button
            // which gets focused, which is inside this elementâ€¦
            // and we are removing or hiding the visual appearance of the button
            outline: none;
            color: var(--mdc-theme-primary);
        }

        &:only-child {
            .mdc-chip__text {
                padding-left: functions.pxToRem(12);
            }
        }

        &:first-child {
            .mdc-chip__text {
                padding-left: functions.pxToRem(12);
            }
        }
    }

    &.mdc-chip--selected {
        background-color: var(--mdc-theme-surface);
        box-shadow: var(--button-shadow-inset);

        &:active {
            box-shadow: var(--button-shadow-inset-pressed);
        }
    }
}

.mdc-chip__text {
    font-size: functions.pxToRem(13);
    overflow: hidden;
    text-overflow: ellipsis;
    display: block;
    padding: 0 functions.pxToRem(12) 0 functions.pxToRem(4);
}

.mdc-chip-set {
    align-items: center;
    border-radius: functions.pxToRem(60);
    background-color: rgb(var(--contrast-400));
    padding: 0;

    width: max-content;
    max-width: 100%;

    flex-wrap: nowrap; // Not sure about this. It'll put items on one row, but also can look bad on action bars. Kia

    &.disabled {
        @include shared_input-select-picker.looks-disabled;
    }
}
