/**
 * @prop --snackbar-top: Snackbar has `position: fixed;` and uses `--snackbar-top`, which defaults to `auto` for its `top` property. See the examples in the documentations for further info.
 * @prop --snackbar-right: Snackbar has `position: fixed;` and uses `--snackbar-right`, which defaults to `0` for its `right` property. See the examples in the documentations for further info.
 * @prop --snackbar-bottom: Snackbar has `position: fixed;` and uses `--snackbar-bottom`, which defaults to `0` for its `bottom` property. See the examples in the documentations for further info.
 * @prop --snackbar-left: Snackbar has `position: fixed;` and uses `--snackbar-left`, which defaults to `0` for its `left` property. See the examples in the documentations for further info.
 */

@use '../../style/internal/lime-theme';

@use '@material/snackbar/mdc-snackbar';

.mdc-snackbar {
    top: var(--snackbar-top, auto);
    right: var(--snackbar-right, 0);
    bottom: var(--snackbar-bottom, 0);
    left: var(--snackbar-left, 0);
}

.mdc-snackbar__surface {
    min-width: unset;
    max-width: 42rem;
    background-color: rgb(var(--contrast-1400));
    box-shadow: var(--shadow-depth-8), var(--shadow-depth-16);
    gap: 0.75rem;
}

.mdc-snackbar__label {
    color: rgb(var(--contrast-100));
}

.mdc-snackbar__actions {
    gap: 0.5rem;
}

.mdc-snackbar__actions {
    --lime-elevated-surface-background-color: rgb(
        var(--contrast-1300)
    ); // background color of the buttons
    limel-icon-button.mdc-snackbar__dismiss {
        transform: scale(0.8);
        margin: 0;
        padding: 0;
    }
}

.dismiss {
    --mdc-theme-on-surface: rgb(var(--contrast-100)); // color of the X icon
    --icon-background-color: var(--lime-elevated-surface-background-color);
    --fill-color: var(--mdc-theme-primary);
    --track-color: rgb(var(--contrast-800), 0.2);
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    svg {
        position: absolute;
        transform: rotate(90deg);
        fill: transparent;
        stroke-dasharray: 100;
        stroke-linecap: round;

        .mdc-snackbar--open & {
            animation: timeout var(--snackbar-timeout) linear forwards;
        }
    }
}

@keyframes timeout {
    0% {
        stroke-width: 4;
        stroke-dashoffset: 0;
        opacity: 1;
    }
    100% {
        stroke-width: 1;
        stroke-dashoffset: -100;
        opacity: 0.7;
    }
}
