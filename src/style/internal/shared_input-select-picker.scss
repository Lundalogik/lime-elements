@use '../functions';

@use '../../style/internal/lime-theme';

@use '@material/textfield';

// Visual styles that unify the look & feel and behavior of
// components such as input fields, select dropdowns and pickers

$lime-text-field-outline-color: rgba(var(--contrast-700), 0.65);
$lime-text-field-outline-color--hovered: rgba(var(--contrast-700), 1);
$lime-text-field-outline-color--focused: var(--mdc-theme-primary);

$background-color-normal: rgba(var(--contrast-200), 0.5);
$background-color-hovered: rgba(var(--contrast-200), 1);
$background-color-focused: rgba(var(--contrast-100), 0.8);
$background-color-disabled: transparent;

$label-color: rgba(var(--contrast-1200), 1);
$label-color-disabled: rgba(var(--contrast-1200), 0.5);
$input-text-color: rgba(var(--contrast-1400), 1);
$input-text-color-disabled: rgba(var(--contrast-1400), 0.5);
$helper-text-color: $label-color;

$height-of-mdc-text-field: 3.5rem; //This is written directly in rem, beucase the vaiable used to calculate things elsewhere
$height-of-mdc-helper-text-block: 0.9375rem;

$mdc-chip-background-color: rgb(var(--contrast-100));

$height-of-helper-text-pseudo-before: 0.75rem; // There is strange a pseudo before in MD's helper texts, which sets their distance to the element on top of it. Originally in MD, this value is 1rem. In Lime Elements, we need to make it less due to our layout needs.
$cropped-label-hack--font-size: 0.875rem; //14px

@mixin looks-disabled() {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.4;
}

@mixin looks-like-input-label() {
    font-family: Roboto, sans-serif;
    line-height: functions.pxToRem(28);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;

    font-size: functions.pxToRem(14);
    font-weight: 400;
    letter-spacing: 0.009375em;
    color: $label-color;
}

@mixin looks-like-input-value() {
    font-family: Roboto, sans-serif;
    line-height: functions.pxToRem(28);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;

    color: $input-text-color;
    font-size: functions.pxToRem(14);
    font-weight: 400;
    letter-spacing: 0.009375em;
}

@mixin cropped-label-hack {
    // Some font size applied to `label--float-above` causes the labels to get cut off
    // when an empty field gets focused
    .mdc-text-field--outlined.mdc-text-field--with-leading-icon.mdc-notched-outline--upgraded,
    .mdc-text-field--outlined.mdc-text-field--with-leading-icon
        .mdc-notched-outline--upgraded,
    .mdc-text-field--outlined.mdc-text-field--textarea.mdc-notched-outline--upgraded,
    .mdc-text-field--outlined.mdc-text-field--textarea
        .mdc-notched-outline--upgraded,
    .mdc-text-field--outlined.mdc-notched-outline--upgraded,
    .mdc-text-field--outlined .mdc-notched-outline--upgraded {
        .mdc-floating-label--float-above {
            //font-size: 1rem; This is what we get from MD now, which causes the miscalculations
            font-size: $cropped-label-hack--font-size;
            // of course this is `14px` and the other one is `16px`.
            // Unfortunately MD scales the floating label down, by applying a
            // `transform` & `scale(0.75)` which is probably why they had to increase
            // the font-size, to make it more readable.
            // This is why I don't like this hack.
        }
    }
}

@mixin looks-like-helper-line {
    padding-right: 1rem;
    padding-left: 1rem;
    flex-basis: 100%; // works like a line-break. NOTE: parent must have `flex-wrap: wrap;` /Kia
    width: 100%;
}

@mixin looks-like-helper-text {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 0.6875rem;
    font-weight: 400;
    letter-spacing: 0.0333333333em;
    text-decoration: inherit;
    text-transform: inherit;
    display: block;
    margin-top: 0;
    line-height: normal;
    margin: 0;
    transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
}

@mixin helper-text-color {
    .mdc-text-field:not(.mdc-text-field--disabled) {
        .mdc-text-field-character-counter,
        + .mdc-text-field-helper-line .mdc-text-field-character-counter,
        + .mdc-text-field-helper-line .mdc-text-field-helper-text {
            color: $helper-text-color;
        }
    }
}

@mixin input-field-placeholder {
    &::placeholder {
        color: rgb(var(--contrast-900)) !important;
    }
}

@mixin looks-like-helper-text-pseudo-before {
    height: $height-of-helper-text-pseudo-before;
    display: inline-block;
    width: 0;
    content: '';
    vertical-align: 0;
}

@mixin floating-label-overrides {
    .mdc-text-field {
        &:not(.mdc-text-field--disabled) {
            .mdc-floating-label {
                color: $label-color;
            }
            .mdc-text-field__input {
                color: $input-text-color;
            }
        }
        &.mdc-text-field--disabled {
            .mdc-floating-label {
                color: $label-color-disabled;
            }
            .mdc-text-field__input {
                color: $input-text-color-disabled;
            }
        }
    }
}

@mixin outlined-style-overrides {
    .mdc-text-field.mdc-text-field--outlined {
        transition: background-color 0.2s ease;
        border-radius: functions.pxToRem(4);

        .mdc-notched-outline__leading,
        .mdc-notched-outline__notch,
        .mdc-notched-outline__trailing {
            transition: border-color 0.2s ease;
        }

        &:not(.mdc-text-field--disabled) {
            background-color: $background-color-normal;

            &:hover {
                background-color: $background-color-hovered;
            }
        }

        &.mdc-text-field--focused {
            background-color: $background-color-focused;
        }

        &.mdc-text-field--disabled {
            background-color: $background-color-disabled;
        }

        &:not(.mdc-text-field--disabled):not(.mdc-text-field--invalid):not(
                .force-invalid
            ) {
            .mdc-notched-outline__leading,
            .mdc-notched-outline__notch,
            .mdc-notched-outline__trailing {
                border-color: $lime-text-field-outline-color;
            }

            &:not(.mdc-text-field--focused):not(.mdc-text-field--invalid):not(
                    .force-invalid
                ) {
                &:hover .mdc-notched-outline {
                    .mdc-notched-outline__leading,
                    .mdc-notched-outline__notch,
                    .mdc-notched-outline__trailing {
                        border-color: $lime-text-field-outline-color--hovered;
                    }
                }
            }

            &.mdc-text-field--focused {
                .mdc-notched-outline__leading,
                .mdc-notched-outline__notch,
                .mdc-notched-outline__trailing {
                    border-color: $lime-text-field-outline-color--focused;
                }
            }
        }
    }

    .mdc-text-field,
    .mdc-text-field.mdc-text-field--focused {
        .mdc-notched-outline__leading,
        .mdc-notched-outline__notch,
        .mdc-notched-outline__trailing {
            border-width: 1px;
        }
    }

    .mdc-text-field.mdc-text-field--focused.mdc-text-field--outlined {
        .mdc-notched-outline--notched {
            .mdc-notched-outline__notch {
                padding-top: 0;
            }
        }
    }

    .mdc-text-field__icon {
        flex-shrink: 0;
    }
}

@mixin leading-icon {
    .mdc-text-field__icon {
        width: functions.pxToRem(24);
        height: functions.pxToRem(24);
    }
}

@mixin trailing-icon {
    .mdc-text-field--with-trailing-icon {
        .mdc-text-field__icon--trailing {
            transition: background-color 0.2s ease, box-shadow 0.3s ease;
            border-radius: 50%;
            padding: functions.pxToRem(8);

            &:focus {
                outline: none;
            }

            &:focus-visible {
                box-shadow: 0 0 0 functions.pxToRem(2) var(--mdc-theme-primary) !important; // has to be `!important` since we're using `box-shadow` insted of `outline` which is also used in `hover` mode
            }
        }
        &:hover {
            .mdc-text-field__icon--trailing {
                box-shadow: var(--button-shadow-normal);
                background-color: rgba(var(--contrast-100), 0.4);

                &:hover {
                    background-color: rgb(var(--contrast-100));
                    box-shadow: var(--button-shadow-hovered);
                }

                &:active {
                    box-shadow: var(--button-shadow-pressed);
                }
            }
        }

        &.mdc-text-field--disabled,
        &.mdc-text-field--invalid {
            // `mdc-text-field--invalid` displays a (!) icon, which we don't want it to appear interactive
            &:hover {
                .mdc-text-field__icon--trailing {
                    box-shadow: none;
                    background-color: transparent;

                    &:hover {
                        background-color: transparent;
                        box-shadow: none;
                    }

                    &:active {
                        box-shadow: none;
                    }
                }
            }
        }
        &.mdc-text-field--invalid {
            i.mdc-text-field__icon.mdc-text-field__icon--trailing {
                limel-icon {
                    color: var(--lime-error-text-color);
                }
            }
        }
    }
}

@mixin readonly-overrides {
    .mdc-text-field.mdc-text-field--disabled.lime-text-field--readonly {
        .mdc-text-field__input {
            background-color: transparent;
            color: $input-text-color;
        }

        .lime-looks-like-input-value {
            color: $input-text-color;
            opacity: 1;
        }

        .mdc-floating-label {
            color: $label-color;
        }

        .mdc-notched-outline__leading,
        .mdc-notched-outline__notch,
        .mdc-notched-outline__trailing {
            border-color: transparent;
        }

        &.mdc-text-field--invalid {
            & + .mdc-text-field-helper-line {
                .mdc-text-field-helper-text--validation-msg {
                    color: var(--lime-error-text-color);
                }
            }
            .mdc-text-field__icon--trailing {
                color: var(--lime-error-text-color);
            }
        }

        &.mdc-text-field--with-trailing-icon {
            input.mdc-text-field__input {
                pointer-events: none; // otherwise trailing icon links cannot be clicked
            }

            .mdc-text-field__icon--trailing {
                width: calc(100% - 1rem);
                position: absolute;
                left: 0;

                display: flex;
                justify-content: flex-end;
                align-items: center;

                pointer-events: auto;
                color: $label-color;
                border-radius: 0.25rem;

                limel-icon {
                    width: 1.5rem;
                    margin-right: 0.5rem;
                }
            }

            &:hover .mdc-text-field__icon--trailing {
                &:hover {
                    box-shadow: var(--button-shadow-hovered);
                }

                &:active {
                    box-shadow: var(--button-shadow-pressed);
                }
            }
        }
    }
}

@mixin disabled-overrides {
    .mdc-text-field--disabled {
        background-color: transparent;
    }
}
