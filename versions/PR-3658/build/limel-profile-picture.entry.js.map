{"version":3,"names":["profilePictureCss","ProfilePicture","this","removeButtonId","createRandomString","helperTextId","handleNewFiles","async","event","stopPropagation","disabled","file","_a","detail","isTypeAccepted","accept","filesRejected","emit","revokeObjectUrl","out","resize","fileContent","File","processed","resizeImage","Object","assign","fit","_b","imageFit","filename","name","size","contentType","type","_c","href","objectUrl","URL","createObjectURL","change","handleRejectedFiles","handleClear","value","undefined","getTranslation","key","translate","get","language","disconnectedCallback","handleValueChange","render","hostClassNames","hasValue","readonly","h","Host","class","renderAvatar","helperText","onFilesSelected","onFilesRejected","renderBrowseButton","renderClearButton","renderSpinner","label","required","invalid","loading","src","getImageSrc","alt","style","renderIcon","icon","getIconName","color","backgroundColor","id","onClick","elementId","revokeObjectURL"],"sources":["./src/components/profile-picture/profile-picture.scss?tag=limel-profile-picture&encapsulation=shadow","./src/components/profile-picture/profile-picture.tsx"],"sourcesContent":["@use '../../style/mixins';\n\n/**\n* @prop --profile-picture-border-radius: Border radius of the profile picture. Defaults to `100vw` to render a circular shape.\n*/\n\n:host {\n    position: relative;\n\n    display: inline-flex;\n    min-width: 1.5rem;\n    min-height: 1.5rem;\n\n    border-radius: var(--profile-picture-border-radius, 100vw);\n    background-color: rgb(var(--contrast-400));\n}\n\n* {\n    box-sizing: border-box;\n}\n\nlimel-file-dropzone,\nlimel-file-input,\nbutton.avatar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: 100%;\n    height: 100%;\n}\n\nbutton {\n    all: unset;\n    display: block;\n    @include mixins.visualize-keyboard-focus();\n\n    &.avatar {\n        overflow: hidden;\n        border-radius: var(--profile-picture-border-radius, 100vw);\n\n        :host(:not([disabled]):not([disabled='true'])) & {\n            @include mixins.is-flat-clickable();\n        }\n\n        :host([invalid]:not([invalid='false'])) & {\n            box-shadow: var(--shadow-error-state);\n        }\n    }\n\n    &.remove {\n        @include mixins.clear-all-button();\n        position: absolute;\n        top: 0;\n        left: 0;\n        opacity: 0;\n\n        :host(:hover) &,\n        :host(:focus) &,\n        :host(:focus-visible) &,\n        :host(:focus-within) &,\n        :host(:active) & {\n            animation: show 0.4s ease-in-out forwards;\n        }\n    }\n}\n\n@keyframes show {\n    0% {\n        transform: scale(0.9);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n// :host(limel-profile-picture[disabled]:not([disabled='false'])) {}\n// :host(limel-profile-picture[readonly]:not([readonly='false'])) {}\n\nbutton.avatar,\nimg,\nlimel-icon {\n    border-radius: var(--profile-picture-border-radius, 100vw);\n}\n\nlimel-icon {\n    width: calc(100% - 1rem);\n    min-width: 1rem;\n    max-width: 4rem;\n    color: var(--limel-theme-text-secondary-on-background-color);\n    margin: auto;\n}\n\nimg {\n    object-fit: var(--limel-profile-picture-object-fit);\n    width: 100%;\n    height: 100%;\n}\n\nlimel-spinner {\n    position: absolute;\n    inset: 0;\n    margin: auto;\n}\n","import {\n    Component,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { FileInfo } from '../../global/shared-types/file.types';\nimport { isTypeAccepted } from '../../util/files';\nimport { Icon } from '../../global/shared-types/icon.types';\nimport { getIconName } from '../icon/get-icon-props';\nimport translate from '../../global/translations';\nimport { Languages } from '../date-picker/date.types';\nimport { createRandomString } from '../../util/random-string';\nimport { resizeImage, ResizeOptions } from '../../util/image-resize';\n\n/**\n * This component displays a profile picture, while allowing the user\n * to change it via a file input or drag-and-drop.\n *\n * It supports client-side image resizing and conversion,\n * as well as a simple lazy-loading mechanism.\n *\n * @exampleComponent limel-example-profile-picture-basic\n * @exampleComponent limel-example-profile-picture-icon\n * @exampleComponent limel-example-profile-picture-with-value\n * @exampleComponent limel-example-profile-picture-loading\n * @exampleComponent limel-example-profile-picture-image-fit\n * @exampleComponent limel-example-profile-picture-composite\n * @exampleComponent limel-example-profile-picture-resize-contain\n * @exampleComponent limel-example-profile-picture-resize-cover\n * @exampleComponent limel-example-profile-picture-resize-fallback\n * @exampleComponent limel-example-profile-picture-styling\n * @beta\n */\n@Component({\n    tag: 'limel-profile-picture',\n    shadow: true,\n    styleUrl: 'profile-picture.scss',\n})\nexport class ProfilePicture {\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components.\n     */\n    @Prop({ reflect: true })\n    public language: Languages = 'en';\n\n    /**\n     * Accessible label for the the browse button.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Placeholder icon of the component, displayed when no image is present.\n     */\n    @Prop()\n    public icon: string | Icon = 'user';\n\n    /**\n     * Helper text shown on drag overlay.\n     */\n    @Prop()\n    public helperText?: string;\n\n    /**\n     * Disables user interaction.\n     * Prevents uploading new pictures or removing existing ones.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Readonly prevents changing the value but allows interaction like focus.\n     */\n    @Prop({ reflect: true })\n    public readonly = false;\n\n    /**\n     * Marks the control as required.\n     */\n    @Prop({ reflect: true })\n    public required = false;\n\n    /**\n     * Marks the control as invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * Current image to display. Either a URL string or a `FileInfo` with an href.\n     */\n    @Prop()\n    public value?: string | FileInfo;\n\n    /**\n     * How the image should fit within the container.\n     * - `cover` will fill the container and crop excess parts.\n     * - `contain` will scale the image to fit within the container without cropping.\n     */\n    @Prop({ reflect: true })\n    public imageFit: 'cover' | 'contain' = 'cover';\n\n    /**\n     * Accepted file types.\n     */\n    @Prop({ reflect: true })\n    public accept: string =\n        'image/jpeg,image/png,image/heic,.jpg,.jpeg,.png,.heic';\n\n    /**\n     * Optional client-side resize before emitting the file.\n     * If provided, the selected image will be resized on the client device.\n     * Note: HEIC may not decode in all browsers; when decoding fails, the original\n     * file will be emitted.\n     */\n    @Prop()\n    public resize?: ResizeOptions;\n\n    /**\n     * Set to `true` to put the component in the `loading` state,\n     * and render an indeterminate progress indicator inside.\n     * This does _not_ disable the interactivity of the component!\n     */\n    @Prop({ reflect: true })\n    public loading? = false;\n\n    /**\n     * Emitted when the picture changes (first FileInfo only).\n     */\n    @Event()\n    public change: EventEmitter<FileInfo | undefined>;\n\n    /**\n     * Emitted when a file is rejected by accept filter.\n     */\n    @Event()\n    public filesRejected: EventEmitter<FileInfo[]>;\n\n    @State()\n    private objectUrl?: string;\n\n    private removeButtonId = createRandomString();\n    private helperTextId = createRandomString();\n\n    public disconnectedCallback() {\n        this.revokeObjectUrl();\n    }\n\n    @Watch('value')\n    protected handleValueChange() {\n        // Clear previously created object URL when value changes\n        this.revokeObjectUrl();\n    }\n\n    public render() {\n        const hostClassNames = {\n            'has-value': this.hasValue,\n        };\n\n        if (this.readonly) {\n            return <Host class={hostClassNames}>{this.renderAvatar()}</Host>;\n        }\n\n        return (\n            <Host class={hostClassNames}>\n                <limel-file-dropzone\n                    aria-describedby={\n                        this.helperText ? this.helperTextId : undefined\n                    }\n                    disabled={this.disabled}\n                    accept={this.accept}\n                    onFilesSelected={this.handleNewFiles}\n                    onFilesRejected={this.handleRejectedFiles}\n                >\n                    <limel-file-input\n                        accept={this.accept}\n                        disabled={this.disabled}\n                    >\n                        {this.renderBrowseButton()}\n                    </limel-file-input>\n                </limel-file-dropzone>\n                {this.renderClearButton()}\n                {this.renderSpinner()}\n            </Host>\n        );\n    }\n\n    private get hasValue(): boolean {\n        if (typeof this.value === 'string') {\n            return !!this.value;\n        }\n\n        if (this.value && (this.value.href || this.value.fileContent)) {\n            return true;\n        }\n\n        return !!this.objectUrl;\n    }\n\n    private renderBrowseButton() {\n        return (\n            <button\n                type=\"button\"\n                class=\"avatar\"\n                disabled={this.disabled}\n                aria-label={this.label}\n                aria-required={this.required ? true : undefined}\n                aria-invalid={this.invalid ? true : undefined}\n                aria-busy={this.loading ? 'true' : 'false'}\n                aria-live=\"polite\"\n            >\n                {this.renderAvatar()}\n            </button>\n        );\n    }\n\n    private renderAvatar() {\n        const src = this.getImageSrc();\n\n        if (src) {\n            return (\n                <img\n                    src={src}\n                    alt=\"\"\n                    style={{\n                        '--limel-profile-picture-object-fit': this.imageFit,\n                    }}\n                    loading=\"lazy\"\n                />\n            );\n        }\n\n        return this.renderIcon();\n    }\n\n    private renderIcon() {\n        const icon = getIconName(this.icon);\n\n        return (\n            <limel-icon\n                name={icon}\n                style={{\n                    color: `${(this.icon as Icon)?.color}`,\n                    'background-color': `${\n                        (this.icon as Icon)?.backgroundColor\n                    }`,\n                }}\n            />\n        );\n    }\n\n    private renderClearButton() {\n        if (!this.hasValue || this.disabled) {\n            return;\n        }\n\n        return [\n            <button\n                class=\"remove\"\n                id={this.removeButtonId}\n                onClick={this.handleClear}\n            />,\n            <limel-tooltip\n                label={this.getTranslation('profile-picture.remove')}\n                elementId={this.removeButtonId}\n            />,\n        ];\n    }\n\n    private renderSpinner() {\n        if (!this.loading) {\n            return;\n        }\n\n        return <limel-spinner />;\n    }\n\n    private handleNewFiles = async (event: CustomEvent<FileInfo[]>) => {\n        event.stopPropagation();\n        if (this.disabled) {\n            return;\n        }\n\n        const file = event.detail?.[0];\n        if (!file) {\n            return;\n        }\n\n        if (!isTypeAccepted(file, this.accept)) {\n            this.filesRejected.emit([file]);\n            return;\n        }\n\n        this.revokeObjectUrl();\n\n        let out = file;\n\n        // Optional client-side resize\n        if (this.resize && file.fileContent instanceof File) {\n            try {\n                const processed = await resizeImage(file.fileContent, {\n                    ...this.resize,\n                    fit: this.resize.fit ?? this.imageFit,\n                });\n                out = {\n                    ...file,\n                    filename: processed.name,\n                    size: processed.size,\n                    contentType: processed.type,\n                    fileContent: processed,\n                };\n            } catch {\n                // Fall back to original file if resize fails\n                out = file;\n            }\n        }\n\n        // Create an object URL for immediate preview if no href present\n        if (!out.href && out.fileContent instanceof File) {\n            this.objectUrl = URL.createObjectURL(out.fileContent);\n        }\n\n        this.change.emit(out);\n    };\n\n    private handleRejectedFiles = (event: CustomEvent<FileInfo[]>) => {\n        event.stopPropagation();\n        this.filesRejected.emit(event.detail);\n    };\n\n    private getImageSrc(): string | undefined {\n        if (!this.value) {\n            return this.objectUrl; // Could be set from last selection before parent consumes\n        }\n\n        if (typeof this.value === 'string') {\n            return this.value;\n        }\n\n        if (this.value.href) {\n            return this.value.href;\n        }\n\n        if (this.value.fileContent instanceof File) {\n            if (!this.objectUrl) {\n                this.objectUrl = URL.createObjectURL(this.value.fileContent);\n            }\n\n            return this.objectUrl;\n        }\n\n        return undefined;\n    }\n\n    private revokeObjectUrl() {\n        if (this.objectUrl) {\n            URL.revokeObjectURL(this.objectUrl);\n            this.objectUrl = undefined;\n        }\n    }\n\n    private handleClear = (event: Event) => {\n        event.stopPropagation();\n        this.value = undefined;\n        this.change.emit(undefined);\n    };\n\n    private getTranslation = (key: string) => {\n        return translate.get(key, this.language);\n    };\n}\n"],"mappings":"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"}