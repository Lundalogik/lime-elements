{"version":3,"names":["profilePictureCss","ProfilePicture","this","removeButtonId","createRandomString","browseButtonId","renderHelperText","helperText","h","elementId","label","handleNewFiles","async","event","stopPropagation","disabled","file","_a","detail","isTypeAccepted","accept","filesRejected","emit","revokeObjectUrl","imageError","out","resize","fileContent","File","processed","resizeImage","Object","assign","fit","_b","imageFit","filename","name","size","contentType","type","_c","href","objectUrl","URL","createObjectURL","change","handleRejectedFiles","handleClear","value","undefined","onImageError","openPopover","isErrorMessagePopoverOpen","onPopoverClose","getTranslation","key","translate","get","language","disconnectedCallback","handleValueChange","currentValue","render","hostClassNames","readonly","Host","class","renderAvatar","onFilesSelected","onFilesRejected","required","invalid","renderBrowseButton","renderClearButton","renderSpinner","renderErrorMessage","hasValue","id","loading","src","getImageSrc","alt","style","onError","renderIcon","icon","getIconName","color","backgroundColor","onClick","getUnsupportedPreviewContext","hasNoSrc","hasLocalFile","isResizeConfigured","shouldShowErrorMessage","errorIcon","errorMessageStyles","maxWidth","borderRadius","open","onClose","slot","elevated","heading","revokeObjectURL"],"sources":["./src/components/profile-picture/profile-picture.scss?tag=limel-profile-picture&encapsulation=shadow","./src/components/profile-picture/profile-picture.tsx"],"sourcesContent":["@use '../../style/mixins';\n\n/**\n* @prop --profile-picture-border-radius: Border radius of the profile picture. Defaults to `100vw` to render a circular shape.\n*/\n\n:host(limel-profile-picture) {\n    position: relative;\n\n    display: inline-flex;\n    min-width: 1.5rem;\n    min-height: 1.5rem;\n\n    border-radius: var(--profile-picture-border-radius, 100vw);\n    background-color: rgb(var(--contrast-400));\n}\n\n* {\n    box-sizing: border-box;\n}\n\nlimel-file-dropzone,\nlimel-file-input,\nbutton.avatar {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: 100%;\n    height: 100%;\n}\n\nbutton {\n    all: unset;\n    display: block;\n    @include mixins.visualize-keyboard-focus();\n\n    &.avatar {\n        overflow: hidden;\n        border-radius: var(--profile-picture-border-radius, 100vw);\n\n        :host(:not([disabled]):not([disabled='true'])) & {\n            @include mixins.is-flat-clickable();\n        }\n\n        :host([invalid]:not([invalid='false'])) & {\n            box-shadow: var(--shadow-error-state);\n        }\n    }\n\n    &.remove {\n        @include mixins.clear-all-button();\n        position: absolute;\n        top: 0;\n        left: 0;\n        opacity: 0;\n\n        :host(:hover) &,\n        :host(:focus) &,\n        :host(:focus-visible) &,\n        :host(:focus-within) &,\n        :host(:active) & {\n            animation: show 0.4s ease-in-out forwards;\n        }\n    }\n}\n\n@keyframes show {\n    0% {\n        transform: scale(0.9);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\nbutton.avatar,\nimg,\nlimel-icon {\n    border-radius: var(--profile-picture-border-radius, 100vw);\n}\n\nlimel-icon {\n    width: calc(100% - 1rem);\n    min-width: 1rem;\n    max-width: 4rem;\n    color: var(--limel-theme-text-secondary-on-background-color);\n    margin: auto;\n}\n\nimg {\n    object-fit: var(--limel-profile-picture-object-fit);\n    width: 100%;\n    height: 100%;\n\n    :host(.has-image-error) & {\n        border: 1px dashed rgb(var(--contrast-600));\n        background: url(\"data:image/svg+xml;charset=utf-8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' style='fill-rule:evenodd;'><path fill='rgba(186,186,192,0.16)' d='M0 0h4v4H0zM4 4h4v4H4z'/></svg>\");\n        background-size: 0.5rem;\n    }\n}\n\nlimel-spinner {\n    position: absolute;\n    inset: 0;\n    margin: auto;\n}\n\nlimel-popover {\n    position: absolute;\n    inset: auto 0 0 auto;\n    display: block;\n    width: 2.25rem;\n    height: 2.25rem;\n}\n","import {\n    Component,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { FileInfo } from '../../global/shared-types/file.types';\nimport { isTypeAccepted } from '../../util/files';\nimport { Icon } from '../../global/shared-types/icon.types';\nimport { getIconName } from '../icon/get-icon-props';\nimport translate from '../../global/translations';\nimport { Languages } from '../date-picker/date.types';\nimport { createRandomString } from '../../util/random-string';\nimport { resizeImage, ResizeOptions } from '../../util/image-resize';\n\n/**\n * This component displays a profile picture, while allowing the user\n * to change it via a file input or drag-and-drop.\n *\n * It supports client-side image resizing and conversion,\n * as well as a simple lazy-loading mechanism.\n *\n * @exampleComponent limel-example-profile-picture-basic\n * @exampleComponent limel-example-profile-picture-helper-text\n * @exampleComponent limel-example-profile-picture-icon\n * @exampleComponent limel-example-profile-picture-with-value\n * @exampleComponent limel-example-profile-picture-loading\n * @exampleComponent limel-example-profile-picture-image-fit\n * @exampleComponent limel-example-profile-picture-composite\n * @exampleComponent limel-example-profile-picture-resize-contain\n * @exampleComponent limel-example-profile-picture-resize-cover\n * @exampleComponent limel-example-profile-picture-resize-fallback\n * @exampleComponent limel-example-profile-picture-styling\n * @beta\n */\n@Component({\n    tag: 'limel-profile-picture',\n    shadow: true,\n    styleUrl: 'profile-picture.scss',\n})\nexport class ProfilePicture {\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components.\n     */\n    @Prop({ reflect: true })\n    public language: Languages = 'en';\n\n    /**\n     * Accessible label for the the browse button.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Placeholder icon of the component, displayed when no image is present.\n     */\n    @Prop()\n    public icon: string | Icon = 'user';\n\n    /**\n     * Helper text shown as a tooltip on hover or focus.\n     */\n    @Prop()\n    public helperText?: string;\n\n    /**\n     * Disables user interaction.\n     * Prevents uploading new pictures or removing existing ones.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Readonly prevents changing the value but allows interaction like focus.\n     */\n    @Prop({ reflect: true })\n    public readonly = false;\n\n    /**\n     * Marks the control as required.\n     */\n    @Prop({ reflect: true })\n    public required = false;\n\n    /**\n     * Marks the control as invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * Set to `true` to put the component in the `loading` state,\n     * and render an indeterminate progress indicator inside.\n     * This does _not_ disable the interactivity of the component!\n     */\n    @Prop({ reflect: true })\n    public loading = false;\n\n    /**\n     * Current image to display. Either a URL string or a `FileInfo` with an href.\n     */\n    @Prop()\n    public value?: string | FileInfo;\n\n    /**\n     * How the image should fit within the container.\n     * - `cover` will fill the container and crop excess parts.\n     * - `contain` will scale the image to fit within the container without cropping.\n     */\n    @Prop({ reflect: true })\n    public imageFit: 'cover' | 'contain' = 'cover';\n\n    /**\n     * A comma-separated list of accepted file types.\n     */\n    @Prop({ reflect: true })\n    public accept: string =\n        'image/jpeg,image/png,image/heic,.jpg,.jpeg,.png,.heic';\n\n    /**\n     * Optional client-side resize before emitting the file.\n     * If provided, the selected image will be resized on the client device.\n     * :::note\n     * HEIC may not decode in all browsers; when decoding fails, the original\n     * file will be emitted. See the examples for more info.\n     * :::\n     */\n    @Prop()\n    public resize?: ResizeOptions;\n\n    /**\n     * Emitted when the picture changes (first FileInfo only).\n     */\n    @Event()\n    public change: EventEmitter<FileInfo | undefined>;\n\n    /**\n     * Emitted when a file is rejected by accept filter.\n     */\n    @Event()\n    public filesRejected: EventEmitter<FileInfo[]>;\n\n    @State()\n    private objectUrl?: string;\n\n    @State()\n    private imageError = false;\n\n    @State()\n    private isErrorMessagePopoverOpen = false;\n\n    private removeButtonId = createRandomString();\n    private browseButtonId = createRandomString();\n\n    public disconnectedCallback() {\n        this.revokeObjectUrl();\n    }\n\n    @Watch('value')\n    protected handleValueChange() {\n        // Clear previously created object URL when value changes\n        this.revokeObjectUrl();\n        this.imageError = false;\n\n        // If a new File without href is provided, create an object URL for preview\n        const currentValue = this.value;\n        if (\n            currentValue &&\n            typeof currentValue !== 'string' &&\n            !currentValue.href &&\n            currentValue.fileContent instanceof File\n        ) {\n            this.objectUrl = URL.createObjectURL(currentValue.fileContent);\n        }\n    }\n\n    public render() {\n        const hostClassNames = {\n            'has-image-error': this.imageError,\n        };\n\n        if (this.readonly) {\n            return <Host class={hostClassNames}>{this.renderAvatar()}</Host>;\n        }\n\n        return (\n            <Host class={hostClassNames}>\n                <limel-file-dropzone\n                    disabled={this.disabled}\n                    accept={this.accept}\n                    onFilesSelected={this.handleNewFiles}\n                    onFilesRejected={this.handleRejectedFiles}\n                >\n                    <limel-file-input\n                        accept={this.accept}\n                        disabled={this.disabled}\n                        aria-required={this.required ? 'true' : undefined}\n                        aria-invalid={this.invalid ? 'true' : undefined}\n                    >\n                        {this.renderBrowseButton()}\n                    </limel-file-input>\n                </limel-file-dropzone>\n                {this.renderClearButton()}\n                {this.renderSpinner()}\n                {this.renderErrorMessage()}\n                {this.renderHelperText()}\n            </Host>\n        );\n    }\n\n    private get hasValue(): boolean {\n        if (typeof this.value === 'string') {\n            return !!this.value;\n        }\n\n        if (this.value && (this.value.href || this.value.fileContent)) {\n            return true;\n        }\n\n        return !!this.objectUrl;\n    }\n\n    private renderBrowseButton() {\n        return (\n            <button\n                id={this.browseButtonId}\n                type=\"button\"\n                class=\"avatar\"\n                disabled={this.disabled}\n                aria-label={this.label}\n                aria-busy={this.loading ? 'true' : 'false'}\n                aria-live=\"polite\"\n            >\n                {this.renderAvatar()}\n            </button>\n        );\n    }\n\n    private renderAvatar() {\n        const src = this.getImageSrc();\n\n        if (src) {\n            return (\n                <img\n                    src={src}\n                    alt=\"\"\n                    style={{\n                        '--limel-profile-picture-object-fit': this.imageFit,\n                    }}\n                    loading=\"lazy\"\n                    onError={this.onImageError}\n                />\n            );\n        }\n\n        return this.renderIcon();\n    }\n\n    private renderIcon() {\n        const icon = getIconName(this.icon);\n\n        return (\n            <limel-icon\n                name={icon}\n                style={{\n                    color: `${(this.icon as Icon)?.color}`,\n                    'background-color': `${\n                        (this.icon as Icon)?.backgroundColor\n                    }`,\n                }}\n            />\n        );\n    }\n\n    private renderClearButton() {\n        if (!this.hasValue || this.disabled) {\n            return;\n        }\n\n        return [\n            <button\n                class=\"remove\"\n                type=\"button\"\n                id={this.removeButtonId}\n                onClick={this.handleClear}\n            />,\n            <limel-tooltip\n                label={this.getTranslation('profile-picture.remove')}\n                elementId={this.removeButtonId}\n            />,\n        ];\n    }\n\n    private renderSpinner() {\n        if (!this.loading) {\n            return;\n        }\n\n        return <limel-spinner />;\n    }\n\n    private renderHelperText = () => {\n        if (!this.helperText) {\n            return;\n        }\n\n        return (\n            <limel-tooltip\n                elementId={this.browseButtonId}\n                label={this.helperText}\n            />\n        );\n    };\n\n    // Collects derived flags used for deciding whether to show the unsupported preview message\n    private getUnsupportedPreviewContext() {\n        const currentValue = this.value;\n        const hasNoSrc = !this.getImageSrc();\n        const hasLocalFile = !!(\n            currentValue &&\n            typeof currentValue !== 'string' &&\n            currentValue.fileContent instanceof File &&\n            !currentValue.href\n        );\n        const isResizeConfigured = !!this.resize;\n\n        return { hasNoSrc, hasLocalFile, isResizeConfigured };\n    }\n\n    private shouldShowErrorMessage(): boolean {\n        const { hasNoSrc, hasLocalFile, isResizeConfigured } =\n            this.getUnsupportedPreviewContext();\n\n        return (\n            (hasNoSrc || this.imageError) && hasLocalFile && isResizeConfigured\n        );\n    }\n\n    // Shows a non-intrusive note when there is a File without href and no object URL, which\n    // can happen if the browser failed to decode the source (e.g., HEIC in Chromium).\n    private renderErrorMessage() {\n        if (!this.shouldShowErrorMessage()) {\n            return;\n        }\n\n        const errorIcon = {\n            name: 'error',\n            color: 'rgb(var(--color-orange-dark))',\n        };\n        const errorMessageStyles = {\n            maxWidth: '20rem',\n            borderRadius: '0.75rem',\n        };\n        return (\n            <limel-popover\n                open={this.isErrorMessagePopoverOpen}\n                onClick={this.openPopover}\n                onClose={this.onPopoverClose}\n            >\n                <limel-icon-button\n                    slot=\"trigger\"\n                    elevated={true}\n                    icon={errorIcon}\n                    aria-live=\"polite\"\n                    label={this.getTranslation(\n                        'profile-picture.unsupported-preview.title'\n                    )}\n                />\n                <limel-callout\n                    type=\"warning\"\n                    style={errorMessageStyles}\n                    heading={this.getTranslation(\n                        'profile-picture.unsupported-preview.title'\n                    )}\n                >\n                    {this.getTranslation(\n                        'profile-picture.unsupported-preview.description'\n                    )}\n                </limel-callout>\n            </limel-popover>\n        );\n    }\n\n    private handleNewFiles = async (event: CustomEvent<FileInfo[]>) => {\n        event.stopPropagation();\n        if (this.disabled) {\n            return;\n        }\n\n        const file = event.detail?.[0];\n        if (!file) {\n            return;\n        }\n\n        if (!isTypeAccepted(file, this.accept)) {\n            this.filesRejected.emit([file]);\n            return;\n        }\n\n        this.revokeObjectUrl();\n        this.imageError = false;\n\n        let out = file;\n\n        // Optional client-side resize\n        if (this.resize && file.fileContent instanceof File) {\n            try {\n                const processed = await resizeImage(file.fileContent, {\n                    ...this.resize,\n                    fit: this.resize.fit ?? this.imageFit,\n                });\n                out = {\n                    ...file,\n                    filename: processed.name,\n                    size: processed.size,\n                    contentType: processed.type,\n                    fileContent: processed,\n                };\n            } catch {\n                // Fall back to original file if resize fails\n                out = file;\n            }\n        }\n        // Create an object URL for immediate preview if no href present\n        if (!out.href && out.fileContent instanceof File) {\n            this.objectUrl = URL.createObjectURL(out.fileContent);\n        }\n        this.change.emit(out);\n    };\n\n    private handleRejectedFiles = (event: CustomEvent<FileInfo[]>) => {\n        event.stopPropagation();\n        this.filesRejected.emit(event.detail);\n    };\n\n    private getImageSrc(): string | undefined {\n        if (!this.value) {\n            return this.objectUrl; // Could be set from last selection before parent consumes\n        }\n\n        if (typeof this.value === 'string') {\n            return this.value;\n        }\n\n        if (this.value.href) {\n            return this.value.href;\n        }\n\n        if (this.value.fileContent instanceof File) {\n            return this.objectUrl;\n        }\n\n        return undefined;\n    }\n\n    private revokeObjectUrl() {\n        if (this.objectUrl) {\n            URL.revokeObjectURL(this.objectUrl);\n            this.objectUrl = undefined;\n        }\n    }\n\n    private handleClear = (event: Event) => {\n        event.stopPropagation();\n        this.value = undefined;\n        this.change.emit(undefined);\n    };\n\n    private onImageError = () => {\n        this.imageError = true;\n    };\n\n    private openPopover = (event: MouseEvent) => {\n        event.stopPropagation();\n        this.isErrorMessagePopoverOpen = true;\n    };\n\n    private onPopoverClose = (event: CustomEvent) => {\n        event.stopPropagation();\n        this.isErrorMessagePopoverOpen = false;\n    };\n\n    private getTranslation = (key: string) => {\n        return translate.get(key, this.language);\n    };\n}\n"],"mappings":"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"}