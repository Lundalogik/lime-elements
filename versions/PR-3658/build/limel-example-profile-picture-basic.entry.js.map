{"version":3,"names":["profilePictureBasicCss","ProfilePictureExample","this","handleChange","event","value","detail","console","log","undefined","render","h","Host","label","onChange"],"sources":["./src/components/profile-picture/examples/profile-picture-basic.scss?tag=limel-example-profile-picture-basic&encapsulation=shadow","./src/components/profile-picture/examples/profile-picture-basic.tsx"],"sourcesContent":["limel-profile-picture {\n    width: 8rem;\n    height: 8rem;\n}\n","import { FileInfo } from '@limetech/lime-elements';\nimport { Component, h, Host, State } from '@stencil/core';\n\n/**\n * Basic profile picture\n *\n * This component can be both used as a placeholder for an avatar,\n * and in the same time act as an interactive element that enables\n * users to upload a new profile picture.\n *\n * :::note\n * You must add a proper `width` and `height` to the component.\n * :::\n */\n@Component({\n    tag: 'limel-example-profile-picture-basic',\n    shadow: true,\n    styleUrl: 'profile-picture-basic.scss',\n})\nexport class ProfilePictureExample {\n    @State()\n    private value?: FileInfo | string = undefined;\n\n    public render() {\n        return (\n            <Host>\n                <limel-profile-picture\n                    label=\"Profile picture\"\n                    value={this.value}\n                    onChange={this.handleChange}\n                />\n                <limel-example-value value={this.value} />\n            </Host>\n        );\n    }\n\n    private handleChange = (event: CustomEvent<FileInfo>) => {\n        this.value = event.detail;\n        console.log('onChange', this.value);\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAAyB,gD,MCmBlBC,EAAqB,M,yBAiBtBC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,OACnBC,QAAQC,IAAI,WAAYN,KAAKG,MAAM,E,WAjBHI,S,CAE7BC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,yBACIE,MAAM,kBACNR,MAAOH,KAAKG,MACZS,SAAUZ,KAAKC,eAEnBQ,EAAA,uBAAqBN,MAAOH,KAAKG,Q"}