{"version":3,"names":["profilePictureBasicCss","ProfilePictureResizeContainExample","this","options","width","height","fit","type","handleChange","event","value","detail","undefined","render","h","Host","label","resize","imageFit","onChange"],"sources":["./src/components/profile-picture/examples/profile-picture-basic.scss?tag=limel-example-profile-picture-resize-contain&encapsulation=shadow","./src/components/profile-picture/examples/profile-picture-resize-contain.tsx"],"sourcesContent":["limel-profile-picture {\n    width: 8rem;\n    height: 8rem;\n}\n","import { FileInfo, type ResizeOptions } from '@limetech/lime-elements';\nimport { Component, h, Host, State } from '@stencil/core';\n\n/**\n * Resize on select: 512×512 PNG using contain (no crop)\n *\n * By default, when a user select a picture to upload, the component will the original\n * file as selected, preserving its original filesize, format, aspect ratio and proportions.\n * The `imageFit` in the default mode only affects the visual preview (cover/contain) of the\n * selected image, not the actual file itself.\n *\n * However, this might be problematic for very large images, as it can lead to slow\n * uploads and high memory usage.\n *\n * To support such scenarios, this component has a built-in client-side (in browser)\n * resizing. By configuring the `resize` prop, you can instruct the\n * component to resize the selected image, before uploading it.\n *\n * The configuration showcased in this example works like this:\n * - converts the selected image to a 512×512 PNG\n * - preserves the entire image within the specified square;\n * - and retains transparent background if the source file has transparency\n */\n@Component({\n    tag: 'limel-example-profile-picture-resize-contain',\n    shadow: true,\n    styleUrl: 'profile-picture-basic.scss',\n})\nexport class ProfilePictureResizeContainExample {\n    @State()\n    private value?: FileInfo | string = undefined;\n\n    private options: ResizeOptions = {\n        width: 512,\n        height: 512,\n        fit: 'contain',\n        type: 'image/png',\n    };\n\n    public render() {\n        return (\n            <Host>\n                <limel-profile-picture\n                    label=\"Profile picture (contain)\"\n                    value={this.value}\n                    resize={this.options}\n                    imageFit=\"contain\"\n                    onChange={this.handleChange}\n                />\n                <limel-example-value value={this.value} />\n            </Host>\n        );\n    }\n\n    private handleChange = (event: CustomEvent<FileInfo | undefined>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAAyB,gD,MC4BlBC,EAAkC,M,yBAInCC,KAAAC,QAAyB,CAC7BC,MAAO,IACPC,OAAQ,IACRC,IAAK,UACLC,KAAM,aAkBFL,KAAAM,aAAgBC,IACpBP,KAAKQ,MAAQD,EAAME,MAAM,E,WAzBOC,S,CAS7BC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,yBACIE,MAAM,4BACNN,MAAOR,KAAKQ,MACZO,OAAQf,KAAKC,QACbe,SAAS,UACTC,SAAUjB,KAAKM,eAEnBM,EAAA,uBAAqBJ,MAAOR,KAAKQ,Q"}