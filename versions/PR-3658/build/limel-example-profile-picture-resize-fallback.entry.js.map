{"version":3,"names":["profilePictureBasicCss","ProfilePictureResizeFallbackExample","this","options","width","height","fit","type","handleChange","event","before","value","detail","gotJpeg","_b","_a","filename","toLowerCase","call","endsWith","_d","_c","note","undefined","render","h","label","resize","onChange"],"sources":["./src/components/profile-picture/examples/profile-picture-basic.scss?tag=limel-example-profile-picture-resize-fallback&encapsulation=shadow","./src/components/profile-picture/examples/profile-picture-resize-fallback.tsx"],"sourcesContent":["limel-profile-picture {\n    width: 8rem;\n    height: 8rem;\n}\n","import { FileInfo, type ResizeOptions } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * Resize with graceful fallback for unsupported formats\n *\n * Demonstrates a user message strategy when client-side decode fails (e.g.,\n * HEIC in non-WebKit browsers). The component itself will emit the original\n * file when resize fails; here we pair it with a message.\n */\n@Component({\n    tag: 'limel-example-profile-picture-resize-fallback',\n    shadow: true,\n    styleUrl: 'profile-picture-basic.scss',\n})\nexport class ProfilePictureResizeFallbackExample {\n    @State()\n    private value?: FileInfo | string = undefined;\n\n    @State()\n    private note?: string;\n\n    private options: ResizeOptions = {\n        width: 400,\n        height: 400,\n        fit: 'cover',\n        type: 'image/jpeg',\n    };\n\n    public render() {\n        return [\n            <limel-profile-picture\n                label=\"Profile picture\"\n                value={this.value}\n                resize={this.options}\n                onChange={this.handleChange}\n            />,\n            this.note && <p>{this.note}</p>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    private handleChange = (event: CustomEvent<FileInfo | undefined>) => {\n        const before = this.value;\n        this.value = event.detail;\n        // Heuristic message: if the emitted file didn't change type/name as expected,\n        // inform users that conversion may not have happened client-side.\n        if (\n            before &&\n            typeof before !== 'string' &&\n            this.value &&\n            typeof this.value !== 'string'\n        ) {\n            const gotJpeg =\n                this.value.filename?.toLowerCase?.().endsWith('.jpg') ||\n                this.value.filename?.toLowerCase?.().endsWith('.jpeg');\n            if (!gotJpeg && this.options.type === 'image/jpeg') {\n                this.note =\n                    'Preview shown. Client-side conversion may have been skipped due to unsupported format in this browser. The original file will be uploaded.';\n            } else {\n                this.note = undefined;\n            }\n        }\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAyB,gD,MCelBC,EAAmC,M,yBAOpCC,KAAAC,QAAyB,CAC7BC,MAAO,IACPC,OAAQ,IACRC,IAAK,QACLC,KAAM,cAgBFL,KAAAM,aAAgBC,I,YACpB,MAAMC,EAASR,KAAKS,MACpBT,KAAKS,MAAQF,EAAMG,OAGnB,GACIF,UACOA,IAAW,UAClBR,KAAKS,cACET,KAAKS,QAAU,SACxB,CACE,MAAME,IACFC,GAAAC,EAAAb,KAAKS,MAAMK,YAAQ,MAAAD,SAAA,SAAAA,EAAEE,eAAW,MAAAH,SAAA,SAAAA,EAAAI,KAAAH,GAAKI,SAAS,YAC9CC,GAAAC,EAAAnB,KAAKS,MAAMK,YAAQ,MAAAK,SAAA,SAAAA,EAAEJ,eAAW,MAAAG,SAAA,SAAAA,EAAAF,KAAAG,GAAKF,SAAS,UAClD,IAAKN,GAAWX,KAAKC,QAAQI,OAAS,aAAc,CAChDL,KAAKoB,KACD,4I,KACD,CACHpB,KAAKoB,KAAOC,S,eA3CYA,U,oBAY7BC,SACH,MAAO,CACHC,EAAA,yBACIC,MAAM,kBACNf,MAAOT,KAAKS,MACZgB,OAAQzB,KAAKC,QACbyB,SAAU1B,KAAKM,eAEnBN,KAAKoB,MAAQG,EAAA,SAAIvB,KAAKoB,MACtBG,EAAA,uBAAqBd,MAAOT,KAAKS,Q"}