{"version":3,"names":["chartExamplesCss","ChartTypeLineExample","this","orientations","text","value","handleOrientationChange","event","orientation","detail","handleMaxValueChange","maxValue","render","defaultMaxValue","h","Host","class","type","items","chartItems","label","getSelectedOrientation","options","onChange","find","option"],"sources":["./src/components/chart/examples/chart-examples.scss?tag=limel-example-chart-type-line&encapsulation=shadow","./src/components/chart/examples/chart-type-line.tsx"],"sourcesContent":["@import './chart-resizable-container';\n","import { Component, h, Host, State } from '@stencil/core';\nimport { LimelSelectCustomEvent, Option } from '@limetech/lime-elements';\nimport { chartItems } from './chart-items-area';\n\n/**\n * Line chart\n * A line chart connects data points with a continuous line,\n * often used for displaying trends over intervals.\n *\n * It's good for:\n * - Showing trends over time in a simple, readable format.\n * - Highlighting increases, decreases, or patterns in a dataset.\n *\n * :::tip\n * **Use:**\n * - For tracking data changes over time, especially with multiple data points.\n * - When visualizing time-series data to show overall trends.\n *\n * **Avoid:**\n * - For large fluctuations, which may make data misinterpretations likely.\n * - When individual point comparison is critical (consider a bar or dot chart).\n * :::\n *\n * @sourceFile chart-items-area.ts\n */\n@Component({\n    tag: 'limel-example-chart-type-line',\n    shadow: true,\n    styleUrl: 'chart-examples.scss',\n})\nexport class ChartTypeLineExample {\n    @State()\n    private maxValue = 100;\n\n    @State()\n    private orientation: 'landscape' | 'portrait' = 'landscape';\n\n    private orientations: Option[] = [\n        { text: 'landscape', value: 'landscape' },\n        { text: 'portrait', value: 'portrait' },\n    ];\n\n    public render() {\n        const defaultMaxValue = `${this.maxValue}`;\n\n        return (\n            <Host class=\"large\">\n                <h4>Subscriptions per month</h4>\n                <limel-chart\n                    type=\"line\"\n                    items={chartItems}\n                    orientation={this.orientation}\n                    maxValue={this.maxValue}\n                />\n                <limel-example-controls>\n                    <limel-select\n                        label=\"orientation\"\n                        value={this.getSelectedOrientation()}\n                        options={this.orientations}\n                        onChange={this.handleOrientationChange}\n                    />\n                    <limel-input-field\n                        type=\"number\"\n                        label=\"maxValue\"\n                        value={defaultMaxValue}\n                        onChange={this.handleMaxValueChange}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private getSelectedOrientation() {\n        return this.orientations.find(\n            (option) => option.value === this.orientation\n        );\n    }\n\n    private handleOrientationChange = (\n        event: LimelSelectCustomEvent<Option<string>>\n    ) => {\n        this.orientation = event.detail.value as 'landscape' | 'portrait';\n    };\n\n    private handleMaxValueChange = (event) => {\n        this.maxValue = +event.detail;\n    };\n}\n"],"mappings":"yGAAA,MAAMA,EAAmB,qvB,MC8BZC,EAAoB,M,yBAOrBC,KAAAC,aAAyB,CAC7B,CAAEC,KAAM,YAAaC,MAAO,aAC5B,CAAED,KAAM,WAAYC,MAAO,aAuCvBH,KAAAI,wBACJC,IAEAL,KAAKM,YAAcD,EAAME,OAAOJ,KAAiC,EAG7DH,KAAAQ,qBAAwBH,IAC5BL,KAAKS,UAAYJ,EAAME,MAAM,E,cArDd,I,iBAG6B,W,CAOzCG,SACH,MAAMC,EAAkB,GAAGX,KAAKS,WAEhC,OACIG,EAACC,EAAI,CAACC,MAAM,SACRF,EAAA,qCACAA,EAAA,eACIG,KAAK,OACLC,MAAOC,EACPX,YAAaN,KAAKM,YAClBG,SAAUT,KAAKS,WAEnBG,EAAA,8BACIA,EAAA,gBACIM,MAAM,cACNf,MAAOH,KAAKmB,yBACZC,QAASpB,KAAKC,aACdoB,SAAUrB,KAAKI,0BAEnBQ,EAAA,qBACIG,KAAK,SACLG,MAAM,WACNf,MAAOQ,EACPU,SAAUrB,KAAKQ,wB,CAO3BW,yBACJ,OAAOnB,KAAKC,aAAaqB,MACpBC,GAAWA,EAAOpB,QAAUH,KAAKM,a"}