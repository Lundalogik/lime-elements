{"version":3,"names":["chartItems","text","value","formattedValue","color","clickable","chartExamplesCss","ChartClickableItemsExample","this","handleInteract","event","stopPropagation","lastInteractedWith","detail","render","h","Host","items","maxValue","onInteract","label"],"sources":["./src/components/chart/examples/chart-items-clickable.ts","./src/components/chart/examples/chart-examples.scss?tag=limel-example-chart-clickable-items&encapsulation=shadow","./src/components/chart/examples/chart-clickable-items.tsx"],"sourcesContent":["import { ChartItem } from '@limetech/lime-elements';\nexport const chartItems: ChartItem[] = [\n    {\n        text: 'Applications',\n        value: 40,\n        formattedValue: '40 gb',\n        color: 'rgb(var(--color-brown-dark))',\n        clickable: true,\n    },\n    {\n        text: 'Application cache',\n        value: 18,\n        formattedValue: '18 gb',\n        color: 'rgb(var(--color-brown-default))',\n        clickable: true,\n    },\n    {\n        text: 'Temporary files',\n        value: 23,\n        formattedValue: '23 gb',\n        color: 'rgb(var(--color-cyan-default))',\n        clickable: true,\n    },\n    {\n        text: 'OS data',\n        value: 16,\n        formattedValue: '16 gb',\n        color: 'rgb(var(--color-yellow-default))',\n        clickable: true,\n    },\n];\n","@import './chart-resizable-container';\n","import { Component, h, Host, State } from '@stencil/core';\nimport { chartItems } from './chart-items-clickable';\nimport { ChartItem } from '@limetech/lime-elements';\n\n/**\n * With clickable items\n *\n * When `clickable` is set to `true`, the item will become interactive.\n *\n * This provides visual and accessible feedback when the hovered, or focused,\n * and also results in emitting an event when clicked.\n *\n * :::note\n * Items in Doughnut and Pie charts support `clickable` property as well.\n *\n * However—due to technical reasons—, the only way to interact with their items\n * is using the keyboard (by tabbing on them and pressing the <kbd>Enter</kbd> or\n * <kbd>Space</kbd> keys.\n * :::\n *\n * @sourceFile chart-items-clickable.ts\n */\n@Component({\n    tag: 'limel-example-chart-clickable-items',\n    shadow: true,\n    styleUrl: 'chart-examples.scss',\n})\nexport class ChartClickableItemsExample {\n    @State()\n    private lastInteractedWith: ChartItem;\n\n    public render() {\n        return (\n            <Host>\n                <limel-chart\n                    items={chartItems}\n                    maxValue={128}\n                    onInteract={this.handleInteract}\n                />\n                <limel-example-value\n                    label=\"Clicked item\"\n                    value={this.lastInteractedWith}\n                />\n            </Host>\n        );\n    }\n\n    private readonly handleInteract = (event: CustomEvent<ChartItem>) => {\n        event.stopPropagation();\n        this.lastInteractedWith = event.detail;\n    };\n}\n"],"mappings":"sDACO,MAAMA,EAA0B,CACnC,CACIC,KAAM,eACNC,MAAO,GACPC,eAAgB,QAChBC,MAAO,+BACPC,UAAW,MAEf,CACIJ,KAAM,oBACNC,MAAO,GACPC,eAAgB,QAChBC,MAAO,kCACPC,UAAW,MAEf,CACIJ,KAAM,kBACNC,MAAO,GACPC,eAAgB,QAChBC,MAAO,iCACPC,UAAW,MAEf,CACIJ,KAAM,UACNC,MAAO,GACPC,eAAgB,QAChBC,MAAO,mCACPC,UAAW,OC5BnB,MAAMC,EAAmB,64B,MC2BZC,EAA0B,M,yBAoBlBC,KAAAC,eAAkBC,IAC/BA,EAAMC,kBACNH,KAAKI,mBAAqBF,EAAMG,MAAM,E,kCAlBnCC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,eACIE,MAAOjB,EACPkB,SAAU,IACVC,WAAYX,KAAKC,iBAErBM,EAAA,uBACIK,MAAM,eACNlB,MAAOM,KAAKI,qB"}