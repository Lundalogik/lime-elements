{"version":3,"names":["menuBasicSecondaryTextCss","MenuBasicExample","this","items","text","separator","secondaryText","handleSelect","event","lastSelectedItem","detail","render","h","onSelect","label","slot","value"],"sources":["./src/components/menu/examples/menu-basic-secondary-text.scss?tag=limel-example-menu-secondary-text&encapsulation=shadow","./src/components/menu/examples/menu-basic-secondary-text.tsx"],"sourcesContent":[":host {\n    --menu-surface-width: min(\n        calc(100vw - 4rem),\n        20rem\n    ); // The `min()` function selects the smallest value from a list of comma-separated expressions.\n}\n","import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * With `secondaryText`\n *\n * Menu items can display secondary text as well. By default, the secondary text\n * will be displayed in two lines, and then get truncated.\n *\n * :::important\n * Keep in mind that a menu's drop-down surface will stretch as much as its default\n * maximum width values allow. However, if this default maximum width does not suit\n * your use case, you can override it using the `--menu-surface-width` variable.\n *\n * But do not forget that menus should still behave responsively, thus assigning a fixed value\n * should be avoided. To make the width responsive, try using the `min()` function.\n * This function selects the smallest value from a list of comma-separated expressions\n * which are placed within the parentheses.\n *\n * For example, `--menu-surface-width: min(90vw, 40rem);` will output\n * `width: min(90wv, 40rem);` which will tell the browser to render the menu\n * content in a grid that's allowed to take up 90% of the viewport's width (`90vw`)\n * up to a maximum of `40rem`.\n * :::\n */\n@Component({\n    tag: 'limel-example-menu-secondary-text',\n    shadow: true,\n    styleUrl: 'menu-basic-secondary-text.scss',\n})\nexport class MenuBasicExample {\n    @State()\n    private lastSelectedItem: string;\n\n    private items: Array<MenuItem | ListSeparator> = [\n        {\n            text: 'This item only has one line of primary text',\n        },\n        { separator: true },\n        {\n            text: 'Very long primary texts like this one can truncate based on what you specify for `--menu-surface-width`.',\n            secondaryText: 'This is a short secondary text.',\n        },\n        {\n            text: 'This item only has one line of primary text',\n            secondaryText:\n                'The length of secondary text exceeds maximum allowed number of lines, which is two. This happens because `--menu-surface-width` specified here is not so large. Thus the lines will truncate.',\n        },\n    ];\n\n    public render() {\n        return [\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-button label=\"Menu\" slot=\"trigger\" />\n            </limel-menu>,\n            <limel-example-value\n                label=\"Last selected item\"\n                value={this.lastSelectedItem}\n            />,\n        ];\n    }\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.lastSelectedItem = event.detail.text;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA4B,gF,MCkCrBC,EAAgB,M,yBAIjBC,KAAAC,MAAyC,CAC7C,CACIC,KAAM,+CAEV,CAAEC,UAAW,MACb,CACID,KAAM,2GACNE,cAAe,mCAEnB,CACIF,KAAM,8CACNE,cACI,kMAgBJJ,KAAAK,aAAgBC,IACpBN,KAAKO,iBAAmBD,EAAME,OAAON,IAAI,E,gCAbtCO,SACH,MAAO,CACHC,EAAA,cAAYT,MAAOD,KAAKC,MAAOU,SAAUX,KAAKK,cAC1CK,EAAA,gBAAcE,MAAM,OAAOC,KAAK,aAEpCH,EAAA,uBACIE,MAAM,qBACNE,MAAOd,KAAKO,mB"}