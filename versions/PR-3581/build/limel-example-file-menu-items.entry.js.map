{"version":3,"names":["FileMenuItemsExample","this","handleChange","event","value","detail","console","log","handleMenuItemSelected","stopPropagation","selectedMenuItem","menuItem","menuItems","map","item","Object","assign","selected","filename","id","text","icon","render","h","label","onChange","onMenuItemSelected"],"sources":["./src/components/file/examples/file-menu-items.tsx"],"sourcesContent":["import {\n    FileInfo,\n    ListSeparator,\n    MenuItem,\n    MenuItemEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n/**\n * Custom menu items\n *\n * By providing custom menu items, you can add additional actions to the file\n *\n */\n@Component({\n    tag: 'limel-example-file-menu-items',\n    shadow: true,\n})\nexport class FileMenuItemsExample {\n    @State()\n    private value: FileInfo = { filename: 'deal.pdf', id: 123 };\n\n    @State()\n    private selectedMenuItem: MenuItem | ListSeparator;\n\n    @State()\n    private menuItems: Array<MenuItem | ListSeparator> = [\n        {\n            text: 'Download',\n            icon: 'download',\n            value: 1,\n            selected: false,\n        },\n        {\n            text: 'Share',\n            icon: 'share',\n            value: 2,\n            selected: false,\n        },\n    ];\n\n    public render() {\n        return [\n            <limel-file\n                label=\"Attach a file\"\n                value={this.value}\n                menuItems={this.menuItems}\n                onChange={this.handleChange}\n                onMenuItemSelected={this.handleMenuItemSelected}\n            />,\n            <limel-example-value value={this.menuItems} />,\n        ];\n    }\n\n    private handleChange = (event: CustomEvent<FileInfo>) => {\n        this.value = event.detail;\n        console.log('onChange', this.value);\n    };\n\n    private handleMenuItemSelected = (event: CustomEvent<MenuItemEvent>) => {\n        event.stopPropagation();\n        this.selectedMenuItem = event.detail.menuItem;\n\n        this.menuItems = this.menuItems.map((item) => {\n            if ('separator' in item) {\n                // If the item is a separator, we don't want to change its state\n                return item;\n            }\n\n            return {\n                ...item,\n                selected:\n                    item.value === event.detail.menuItem.value ? true : false,\n            };\n        });\n        console.log('onMenuItemSelected', event.detail.menuItem);\n    };\n}\n"],"mappings":"qDAiBaA,EAAoB,M,yBAoCrBC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,OACnBC,QAAQC,IAAI,WAAYN,KAAKG,MAAM,EAG/BH,KAAAO,uBAA0BL,IAC9BA,EAAMM,kBACNR,KAAKS,iBAAmBP,EAAME,OAAOM,SAErCV,KAAKW,UAAYX,KAAKW,UAAUC,KAAKC,IACjC,GAAI,cAAeA,EAAM,CAErB,OAAOA,C,CAGX,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPG,SACIH,EAAKV,QAAUD,EAAME,OAAOM,SAASP,MAAQ,KAAO,OAAK,IAGrEE,QAAQC,IAAI,qBAAsBJ,EAAME,OAAOM,SAAS,E,WAvDlC,CAAEO,SAAU,WAAYC,GAAI,K,+CAMD,CACjD,CACIC,KAAM,WACNC,KAAM,WACNjB,MAAO,EACPa,SAAU,OAEd,CACIG,KAAM,QACNC,KAAM,QACNjB,MAAO,EACPa,SAAU,O,CAIXK,SACH,MAAO,CACHC,EAAA,cACIC,MAAM,gBACNpB,MAAOH,KAAKG,MACZQ,UAAWX,KAAKW,UAChBa,SAAUxB,KAAKC,aACfwB,mBAAoBzB,KAAKO,yBAE7Be,EAAA,uBAAqBnB,MAAOH,KAAKW,Y"}