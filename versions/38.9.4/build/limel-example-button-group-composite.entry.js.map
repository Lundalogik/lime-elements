{"version":3,"names":["ButtonCompositeExample","this","handleChange","event","eventPrinter","writeEvent","changedButton","detail","props","Object","assign","value","map","button","selected","id","handleFormChange","disabled","title","icon","render","h","onChange","renderForm","ref","el","style","schema"],"sources":["./src/components/button-group/examples/button-group-composite.tsx"],"sourcesContent":["import { Component, h, Prop, State } from '@stencil/core';\nimport {\n    Button,\n    FormSchema,\n    LimelButtonGroupCustomEvent,\n} from '@limetech/lime-elements';\n\n/**\n * Composite\n *\n * A place to try different combinations of states.\n */\n@Component({\n    tag: 'limel-example-button-group-composite',\n    shadow: true,\n})\nexport class ButtonCompositeExample {\n    @Prop()\n    public schema: FormSchema;\n\n    @State()\n    private props = {\n        disabled: false,\n        value: [\n            {\n                id: '1',\n                title: 'Clear sky',\n                icon: 'sun',\n            },\n            {\n                id: '2',\n                title: 'Partly cloudy',\n                icon: 'partly_cloudy_day',\n            },\n            {\n                id: '3',\n                title: 'Rain showers',\n                icon: 'rain',\n            },\n            {\n                id: '4',\n                title: 'Thunderstorms',\n                icon: 'cloudshot',\n            },\n            {\n                id: '5',\n                title: 'Snow showers',\n                icon: 'snowflake',\n            },\n        ] as Button[],\n    };\n\n    private eventPrinter: HTMLLimelExampleEventPrinterElement;\n\n    public render() {\n        return [\n            <limel-button-group {...this.props} onChange={this.handleChange} />,\n            this.renderForm(),\n            <limel-example-event-printer\n                ref={(el) => (this.eventPrinter = el)}\n            />,\n        ];\n    }\n\n    private renderForm() {\n        return (\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-form\n                    schema={this.schema}\n                    value={this.props}\n                    onChange={this.handleFormChange}\n                />\n            </limel-example-controls>\n        );\n    }\n\n    private handleChange = (event: LimelButtonGroupCustomEvent<Button>) => {\n        this.eventPrinter.writeEvent(event);\n        const changedButton = event.detail;\n\n        this.props = {\n            ...this.props,\n            value: this.props.value.map((button) => {\n                return {\n                    ...button,\n                    selected: button.id === changedButton.id,\n                };\n            }),\n        };\n    };\n\n    private handleFormChange = (event: CustomEvent) => {\n        this.props = { ...event.detail };\n    };\n}\n"],"mappings":"qDAgBaA,EAAsB,M,yBA8DvBC,KAAAC,aAAgBC,IACpBF,KAAKG,aAAaC,WAAWF,GAC7B,MAAMG,EAAgBH,EAAMI,OAE5BN,KAAKO,MAAKC,OAAAC,OAAAD,OAAAC,OAAA,GACHT,KAAKO,OAAK,CACbG,MAAOV,KAAKO,MAAMG,MAAMC,KAAKC,GACzBJ,OAAAC,OAAAD,OAAAC,OAAA,GACOG,GAAM,CACTC,SAAUD,EAAOE,KAAOT,EAAcS,QAGjD,EAGGd,KAAAe,iBAAoBb,IACxBF,KAAKO,MAAKC,OAAAC,OAAA,GAAQP,EAAMI,OAAQ,E,iCAzEpB,CACZU,SAAU,MACVN,MAAO,CACH,CACII,GAAI,IACJG,MAAO,YACPC,KAAM,OAEV,CACIJ,GAAI,IACJG,MAAO,gBACPC,KAAM,qBAEV,CACIJ,GAAI,IACJG,MAAO,eACPC,KAAM,QAEV,CACIJ,GAAI,IACJG,MAAO,gBACPC,KAAM,aAEV,CACIJ,GAAI,IACJG,MAAO,eACPC,KAAM,c,CAOXC,SACH,MAAO,CACHC,EAAA,qBAAAZ,OAAAC,OAAA,GAAwBT,KAAKO,MAAK,CAAEc,SAAUrB,KAAKC,gBACnDD,KAAKsB,aACLF,EAAA,+BACIG,IAAMC,GAAQxB,KAAKG,aAAeqB,I,CAKtCF,aACJ,OACIF,EAAA,0BACIK,MAAO,CAAE,mCAAoC,aAE7CL,EAAA,cACIM,OAAQ1B,KAAK0B,OACbhB,MAAOV,KAAKO,MACZc,SAAUrB,KAAKe,mB"}