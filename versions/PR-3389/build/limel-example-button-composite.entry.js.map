{"version":3,"names":["ButtonCompositeExample","this","handleEvent","event","eventPrinter","writeEvent","handleChange","props","detail","label","primary","outlined","icon","disabled","loading","componentWillLoad","schema","Object","assign","lime","layout","type","render","h","onClick","renderForm","ref","el","style","value","onChange"],"sources":["./src/components/button/examples/button-composite.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\nimport { Component, h, Prop, State } from '@stencil/core';\n\n/**\n * Composite\n *\n * A place to try different combinations of states.\n */\n@Component({\n    tag: 'limel-example-button-composite',\n    shadow: true,\n})\nexport class ButtonCompositeExample {\n    @Prop()\n    public schema: FormSchema;\n\n    @State()\n    private props = {\n        label: 'My button',\n        primary: true,\n        outlined: false,\n        icon: 'dog',\n        disabled: false,\n        loading: false,\n    };\n\n    private eventPrinter: HTMLLimelExampleEventPrinterElement;\n\n    public componentWillLoad() {\n        this.schema = {\n            ...this.schema,\n            lime: {\n                layout: {\n                    type: 'grid',\n                },\n            },\n        };\n    }\n\n    public render() {\n        return [\n            <limel-button {...this.props} onClick={this.handleEvent} />,\n            this.renderForm(),\n            <limel-example-event-printer\n                ref={(el) => (this.eventPrinter = el)}\n            />,\n        ];\n    }\n\n    private handleEvent = (event: Event) => {\n        this.eventPrinter.writeEvent(event);\n    };\n\n    private renderForm() {\n        return (\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-form\n                    schema={this.schema}\n                    value={this.props}\n                    onChange={this.handleChange}\n                />\n            </limel-example-controls>\n        );\n    }\n\n    private handleChange = (event: CustomEvent) => {\n        this.props = event.detail;\n    };\n}\n"],"mappings":"qDAYaA,EAAsB,M,yBAqCvBC,KAAAC,YAAeC,IACnBF,KAAKG,aAAaC,WAAWF,EAAM,EAiB/BF,KAAAK,aAAgBH,IACpBF,KAAKM,MAAQJ,EAAMK,MAAM,E,iCAnDb,CACZC,MAAO,YACPC,QAAS,KACTC,SAAU,MACVC,KAAM,MACNC,SAAU,MACVC,QAAS,M,CAKNC,oBACHd,KAAKe,OAAMC,OAAAC,OAAAD,OAAAC,OAAA,GACJjB,KAAKe,QAAM,CACdG,KAAM,CACFC,OAAQ,CACJC,KAAM,U,CAMfC,SACH,MAAO,CACHC,EAAA,eAAAN,OAAAC,OAAA,GAAkBjB,KAAKM,MAAK,CAAEiB,QAASvB,KAAKC,eAC5CD,KAAKwB,aACLF,EAAA,+BACIG,IAAMC,GAAQ1B,KAAKG,aAAeuB,I,CAStCF,aACJ,OACIF,EAAA,0BACIK,MAAO,CAAE,mCAAoC,aAE7CL,EAAA,cACIP,OAAQf,KAAKe,OACba,MAAO5B,KAAKM,MACZuB,SAAU7B,KAAKK,e"}