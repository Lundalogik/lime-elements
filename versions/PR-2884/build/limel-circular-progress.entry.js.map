{"version":3,"names":["circularProgressCss","PERCENT","CircularProgress","this","renderPrefix","prefix","h","class","render","classList","displayPercentageColors","currentPercentage","value","maxValue","Math","round","role","style","abbreviate","suffix"],"sources":["./src/components/circular-progress/circular-progress.scss?tag=limel-circular-progress&encapsulation=shadow","./src/components/circular-progress/circular-progress.tsx"],"sourcesContent":["@use '../../style/functions';\n@use '../../style/mixins';\n@use '../../style/internal/lime-theme';\n\n/**\n * @prop --circular-progress-size: Determines the visual size of the visualization. This does not override the `size` property if it is specified.\n * @prop --circular-progress-track-color: Determines the color of the circular track. Defaults to `--contrast-400`.\n * @prop --circular-progress-suffix-color: Determines the color of the prefix. Defaults to `--contrast-1000`.\n * @prop --circular-progress-text-color: Determines the color of the value. Defaults to `--contrast-1200`.\n * @prop --circular-progress-prefix-color: Determines the color of the suffix. Defaults to `--contrast-1000`.\n * @prop --circular-progress-fill-color: Determines the color of the progressed section. Defaults to `--lime-primary-color`.\n * @prop --circular-progress-background-color: Determines the background color of the central section. Defaults to `--contrast-100`.\n */\n\n:host {\n    display: block;\n    box-sizing: border-box;\n    isolation: isolate;\n}\n\n:host([size='x-small']) {\n    --circular-progress-size: 1.5rem;\n    font-weight: bold;\n\n    .value {\n        letter-spacing: functions.pxToRem(-1);\n    }\n}\n\n:host([size='small']) {\n    --circular-progress-size: 2rem;\n    font-weight: bold;\n\n    .value {\n        letter-spacing: functions.pxToRem(-0.5);\n    }\n}\n\n:host([size='medium']) {\n    --circular-progress-size: 3rem;\n}\n\n:host([size='large']) {\n    --circular-progress-size: 4rem;\n}\n\n:host([size='x-large']) {\n    --circular-progress-size: 5rem;\n}\n\n.lime-circular-progress {\n    --size: var(--circular-progress-size, 3rem);\n    --fill-color: var(--circular-progress-fill-color, var(--mdc-theme-primary));\n    --track-color: var(\n        --circular-progress-track-color,\n        rgb(var(--contrast-400))\n    );\n    position: relative;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: var(--size);\n    height: var(--size);\n    border-radius: 50%;\n\n    line-height: normal;\n\n    box-shadow: 0 0 0 0.125rem rgb(var(--contrast-100), 0.7);\n    background: conic-gradient(\n        var(--fill-color) 0% var(--percentage),\n        var(--track-color) var(--percentage) 100%\n    );\n\n    &:before {\n        $size-of-middle-circle: calc(\n            var(--size) * 0.75 + 0.25rem\n        ); // this calculation ensures that the middle circle is responsive and always perfectly centered\n\n        content: '';\n        position: absolute;\n        width: $size-of-middle-circle;\n        height: $size-of-middle-circle;\n        border-radius: 50%;\n        background-color: var(\n            --circular-progress-background-color,\n            rgb(var(--contrast-100))\n        );\n        box-shadow: var(--button-shadow-pressed);\n    }\n}\n\n.prefix {\n    font-size: clamp(0.5rem, calc(var(--size) * 0.16), 2.25rem);\n    @include mixins.truncate-text();\n    text-align: center;\n    color: var(--circular-progress-prefix-color, rgb(var(--contrast-1000)));\n\n    width: 45%;\n    top: 20%;\n    position: absolute;\n}\n\n.value {\n    display: flex;\n    font-size: clamp(0.5rem, calc(var(--size) * 0.25), 4rem);\n    color: var(--circular-progress-text-color, rgb(var(--contrast-1200)));\n    z-index: 1;\n    cursor: default;\n}\n\n.suffix {\n    font-size: clamp(0.5rem, calc(var(--size) * 0.18), 2.5rem);\n    color: var(--circular-progress-suffix-color, rgb(var(--contrast-1000)));\n    padding-top: 4%;\n}\n\n@import './partial-styles/_percentage-colors';\n","import { Component, h, Prop } from '@stencil/core';\nimport { CircularProgressSize } from '../circular-progress/circular-progress.types';\nimport { abbreviate } from '../badge/format';\n\nconst PERCENT = 100;\n\n/**\n * The circular progress component can be used to visualize the curent state of\n * a progress in a scale; for example percentage of completion of a task.\n *\n * Its compact UI makes the component suitable when there is not enough screen\n * space available to visualise such information.\n *\n * This component allows you to define your scale, from `0` to a desired\n * `maxValue`; and also lets you chose a proper `suffix` for your scale.\n *\n * :::note\n * The component will round up the value when it is displayed, and only shows\n * one decimal digit.\n * It also abbreviates large numbers. For example 1234 will be displayed as 1.2k.\n * Of course such numbers, if bigger than `maxValue` will be visualized as a\n * full progress.\n * :::\n *\n * @exampleComponent limel-example-circular-progress\n * @exampleComponent limel-example-circular-progress-sizes\n * @exampleComponent limel-example-circular-progress-props\n * @exampleComponent limel-example-circular-progress-css-variables\n * @exampleComponent limel-example-circular-progress-percentage-colors\n */\n@Component({\n    tag: 'limel-circular-progress',\n    shadow: true,\n    styleUrl: 'circular-progress.scss',\n})\nexport class CircularProgress {\n    /**\n     * The value of the progress bar.\n     */\n    @Prop()\n    public value: number = 0;\n\n    /**\n     * The maximum value within the scale that the progress bar should visualize. Defaults to `100`.\n     */\n    @Prop()\n    public maxValue: number = PERCENT;\n\n    /**\n     * The prefix which is displayed before the `value`, must be a few characters characters long.\n     */\n    @Prop({ reflect: true })\n    public prefix?: string = null;\n\n    /**\n     * The suffix which is displayed after the `value`, must be one or two characters long. Defaults to `%`\n     */\n    @Prop()\n    public suffix: string = '%';\n\n    /**\n     * When set to `true`, makes the filled section showing the percentage colorful. Colors change with intervals of 10%.\n     */\n    @Prop()\n    public displayPercentageColors: boolean = false;\n\n    /**\n     * Determines the visual size of the visualization from a preset size. This property can override the `--circular-progress-size` variable if it is specified.\n     */\n    @Prop({ reflect: true })\n    public size: CircularProgressSize;\n\n    public render() {\n        const classList = {\n            'lime-circular-progress': true,\n            'displays-percentage-colors': this.displayPercentageColors,\n        };\n\n        const currentPercentage = (this.value * PERCENT) / this.maxValue + '%';\n        const value = Math.round(this.value * 10) / 10; // eslint-disable-line no-magic-numbers\n\n        return (\n            <div\n                role=\"progressbar\"\n                class={classList}\n                aria-label=\"%\"\n                aria-valuemin=\"0\"\n                aria-valuemax={this.maxValue}\n                aria-valuenow={this.value}\n                style={{ '--percentage': currentPercentage }}\n            >\n                {this.renderPrefix()}\n                <span class=\"value\">\n                    {abbreviate(value)}\n                    <span class=\"suffix\">{this.suffix}</span>\n                </span>\n            </div>\n        );\n    }\n    private renderPrefix = () => {\n        if (this.prefix) {\n            return <span class=\"prefix\">{this.prefix}</span>;\n        }\n    };\n}\n"],"mappings":"0HAAA,MAAMA,EAAsB,wsfCI5B,MAAMC,EAAU,I,MA+BHC,EAAgB,M,yBAgEjBC,KAAAC,aAAe,KACnB,GAAID,KAAKE,OAAQ,CACb,OAAOC,EAAA,QAAMC,MAAM,UAAUJ,KAAKE,O,cA7DnB,E,cAMGJ,E,YAMD,K,YAMD,I,6BAMkB,M,oBAQnCO,SACH,MAAMC,EAAY,CACd,yBAA0B,KAC1B,6BAA8BN,KAAKO,yBAGvC,MAAMC,EAAqBR,KAAKS,MAAQX,EAAWE,KAAKU,SAAW,IACnE,MAAMD,EAAQE,KAAKC,MAAMZ,KAAKS,MAAQ,IAAM,GAE5C,OACIN,EAAA,OACIU,KAAK,cACLT,MAAOE,EAAS,aACL,IAAG,gBACA,IAAG,gBACFN,KAAKU,SAAQ,gBACbV,KAAKS,MACpBK,MAAO,CAAE,eAAgBN,IAExBR,KAAKC,eACNE,EAAA,QAAMC,MAAM,SACPW,EAAWN,GACZN,EAAA,QAAMC,MAAM,UAAUJ,KAAKgB,S"}