{"version":3,"names":["limeAiAvatarCss","LimeAiAvatar","render","h","Host","role","this","renderCircle","class","className","viewBox","xmlns","cx","cy","r","fill","stroke"],"sources":["./src/components/lime-ai-avatar/lime-ai-avatar.scss?tag=limel-lime-ai-avatar&encapsulation=shadow","./src/components/lime-ai-avatar/lime-ai-avatar.tsx"],"sourcesContent":["/**\n* @prop --ai-avatar-animation-play-state: Set it to `running` to start the animation.\n*/\n:host(limel-lime-ai-avatar) {\n    display: flex;\n    justify-content: center;\n    align-self: center;\n    position: relative;\n    isolation: isolate;\n\n    aspect-ratio: 1;\n    max-width: 10rem;\n    max-height: 8rem;\n    min-width: 1.75rem;\n    min-height: 1.75rem;\n\n    border-radius: 0.5rem;\n}\n\n* {\n    box-sizing: border-box;\n}\n\n:host(limel-lime-ai-avatar[is-thinking]:not([is-thinking='false'])) {\n    --ai-avatar-animation-play-state: running;\n    --lime-ai-avatar-orbitals-opacity: 1;\n    --lime-ai-avatar-orbitals-animation-play-state: running;\n}\n\n.core,\n.orbitals {\n    mix-blend-mode: overlay;\n    isolation: isolate;\n\n    position: absolute;\n    z-index: 10;\n    inset: 0;\n    margin: auto;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    aspect-ratio: 1;\n    width: clamp(0.5rem, 20%, 3.5rem);\n\n    border-radius: 50%;\n}\n\n.core {\n    animation: breathe 3s ease infinite;\n    animation-play-state: var(--ai-avatar-animation-play-state, paused);\n    background-color: rgb(var(--color-glaucous-lighter));\n    box-shadow: var(--shadow-depth-8);\n}\n\n.orbitals {\n    animation: rotate 5s linear infinite;\n    animation-play-state: var(--ai-avatar-animation-play-state, paused);\n\n    transition: opacity 0.2s ease;\n    opacity: var(--lime-ai-avatar-orbitals-opacity, 0);\n\n    &:after,\n    &:before {\n        animation-play-state: var(\n            --lime-ai-avatar-orbitals-animation-play-state,\n            paused\n        );\n        content: '';\n        display: block;\n        position: absolute;\n        inset: 0;\n        margin: auto;\n\n        width: clamp(0.125rem, 50%, 0.75rem);\n        aspect-ratio: 1;\n        border-radius: 50%;\n        background-color: rgb(var(--color-glaucous-lighter));\n    }\n    &:before {\n        animation: orbit 1s linear infinite;\n        opacity: 0.6;\n        transform-origin: -220% 0;\n        margin-right: -70%;\n    }\n    &:after {\n        animation: orbit 2s linear infinite;\n        opacity: 0.8;\n        scale: 0.7;\n        transform-origin: 0% -250%;\n        margin-bottom: -70%;\n    }\n}\n\n@keyframes orbit {\n    0% {\n        transform: rotateZ(0deg) translate3d(0, 0, 0);\n    }\n    100% {\n        transform: rotateZ(360deg) translate3d(0, 0, 0);\n    }\n}\n\n@keyframes breathe {\n    1%,\n    100% {\n        transform: scale(1);\n    }\n    50% {\n        transform: scale(0.7);\n    }\n}\n\n@keyframes rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\nsvg {\n    position: absolute;\n    margin: auto;\n    mix-blend-mode: screen;\n\n    animation-iteration-count: infinite;\n    animation-play-state: var(--ai-avatar-animation-play-state, paused);\n}\n\n.red {\n    rotate: 20deg;\n    color: rgb(var(--color-red-default));\n    animation-name: rotate, scale-circle-one;\n    animation-duration: 5s;\n}\n\n.green {\n    rotate: 36deg;\n    color: rgb(var(--color-green-default));\n    animation-name: rotate, scale-circle-two;\n    animation-duration: 5.5s;\n}\n\n.blue {\n    rotate: 100deg;\n    color: rgb(var(--color-blue-default));\n    animation-name: rotate, scale-circle-three;\n    animation-duration: 4.5s;\n}\n\n.orange {\n    rotate: 165deg;\n    color: rgb(var(--color-orange-default));\n    animation-name: rotate, scale-circle-four;\n    animation-duration: 6.5s;\n}\n\n@keyframes scale-circle-one {\n    0%,\n    100% {\n        transform: scaleX(1) scaleY(0.8);\n    }\n    25%,\n    75% {\n        transform: scaleX(0.8) scaleY(0.9);\n    }\n    50% {\n        transform: scaleX(1) scaleY(0.7);\n    }\n}\n\n@keyframes scale-circle-two {\n    0%,\n    100% {\n        transform: scaleX(0.8) scaleY(1);\n    }\n    25%,\n    75% {\n        transform: scaleX(0.9) scaleY(0.75);\n    }\n    50% {\n        transform: scaleX(0.72) scaleY(1);\n    }\n}\n\n@keyframes scale-circle-three {\n    0%,\n    100% {\n        transform: scaleX(0.9) scaleY(0.8);\n    }\n    50% {\n        transform: scaleX(0.75) scaleY(0.9);\n    }\n}\n\n@keyframes scale-circle-four {\n    0%,\n    100% {\n        transform: scaleX(0.8) scaleY(0.95);\n    }\n    25%,\n    75% {\n        transform: scaleX(0.95) scaleY(0.75);\n    }\n    50% {\n        transform: scaleX(0.75) scaleY(0.95);\n    }\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * This component displays an avatar, representing Lime AI assistants.\n * :::warning\n * This is a private component used internally in the Lime's various applications,\n * which is the reason for having it in Lime Elements â€”to ease the distribution\n * of the component across all our apps.\n *\n * 3rd party developers are not allowed use this component directly.\n * :::\n *\n * @private\n * @exampleComponent limel-example-lime-ai-avatar-basic\n * @exampleComponent limel-example-lime-ai-avatar-colors\n */\n@Component({\n    tag: 'limel-lime-ai-avatar',\n    shadow: true,\n    styleUrl: 'lime-ai-avatar.scss',\n})\nexport class LimeAiAvatar {\n    /**\n     * Set to `true` to trigger animations that indicate that the AI is\n     * \"thinking\" or processing something.\n     */\n    @Prop({ reflect: true })\n    public isThinking = false;\n\n    public render() {\n        return (\n            <Host role=\"img\" aria-label=\"Lime AI Avatar\">\n                {this.renderCircle('red')}\n                {this.renderCircle('green')}\n                {this.renderCircle('blue')}\n                {this.renderCircle('orange')}\n                <div class=\"core\" />\n                <div class=\"orbitals\" />\n            </Host>\n        );\n    }\n\n    private renderCircle(className: string) {\n        return (\n            <svg\n                class={className}\n                viewBox=\"0 0 100 100\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <circle\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"40\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"6\"\n                />\n            </svg>\n        );\n    }\n}\n"],"mappings":"sDAAA,MAAMA,EAAkB,k/F,MCqBXC,EAAY,M,yCAMD,K,CAEbC,SACH,OACIC,EAACC,EAAI,CAACC,KAAK,MAAK,aAAY,kBACvBC,KAAKC,aAAa,OAClBD,KAAKC,aAAa,SAClBD,KAAKC,aAAa,QAClBD,KAAKC,aAAa,UACnBJ,EAAA,OAAKK,MAAM,SACXL,EAAA,OAAKK,MAAM,a,CAKfD,aAAaE,GACjB,OACIN,EAAA,OACIK,MAAOC,EACPC,QAAQ,cACRC,MAAM,8BAENR,EAAA,UACIS,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,KAAK,OACLC,OAAO,eAAc,eACR,M"}