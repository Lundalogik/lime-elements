{"version":3,"names":["aiAvatarCss","AIAvatar","this","tooltipId","createRandomString","render","h","slot","id","class","renderTooltip","label","elementId"],"sources":["./src/components/ai-icon/ai-avatar.scss?tag=limel-ai-avatar&encapsulation=shadow","./src/components/ai-icon/ai-avatar.tsx"],"sourcesContent":["@use '../../style/mixins';\n\n* {\n    box-sizing: border-box;\n}\n\ndiv[slot='trigger'] {\n    position: relative;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\nbutton#ai-assistant {\n    all: unset;\n    @include mixins.is-elevated-clickable(\n        $background-color: transparent,\n        $background-color--hovered: transparent\n    );\n    @include mixins.visualize-keyboard-focus;\n\n    width: 2.25rem;\n    height: 2.25rem;\n    border-radius: 50%;\n}\n\n.ring {\n    pointer-events: none;\n    position: absolute;\n    margin: auto;\n\n    width: 1.7rem;\n    height: 1.7rem;\n    border: 0.2rem solid;\n    border-radius: 50%;\n    mix-blend-mode: screen;\n\n    animation-timing-function: linear;\n    animation-duration: 6s;\n    animation-iteration-count: infinite;\n    animation-play-state: paused;\n\n    div[slot='trigger']:hover &,\n    div[slot='trigger']:focus-within & {\n        animation-play-state: running;\n    }\n\n    &.red {\n        rotate: 74deg;\n        border-color: #d50f1c;\n        animation-name: animate-red;\n    }\n    &.green {\n        border-color: #009927;\n        animation-name: animate-green;\n    }\n    &.blue {\n        rotate: 100deg;\n        border-color: #3569e1;\n        animation-name: animate-blue;\n    }\n    &.yellow {\n        border-color: #edb40f;\n        animation-name: animate-yellow;\n    }\n}\n\n@keyframes animate-red {\n    0% {\n        transform: rotate(0deg) scaleX(1) scaleY(0.7);\n    }\n    25% {\n        transform: rotate(90deg) scaleX(0.7) scaleY(0.9);\n    }\n    50% {\n        transform: rotate(180deg) scaleX(1) scaleY(0.6);\n    }\n    75% {\n        transform: rotate(270deg) scaleX(0.7) scaleY(0.9);\n    }\n    100% {\n        transform: rotate(360deg) scaleX(1) scaleY(0.7);\n    }\n}\n\n@keyframes animate-green {\n    0% {\n        transform: rotate(31deg) scaleX(0.6) scaleY(1);\n    }\n    25% {\n        transform: rotate(121deg) scaleX(0.9) scaleY(0.7);\n    }\n    50% {\n        transform: rotate(211deg) scaleX(0.6) scaleY(1);\n    }\n    75% {\n        transform: rotate(301deg) scaleX(0.9) scaleY(0.7);\n    }\n    100% {\n        transform: rotate(391deg) scaleX(0.6) scaleY(1);\n    }\n}\n\n@keyframes animate-blue {\n    0% {\n        transform: rotate(413deg) scaleX(0.9) scaleY(0.7);\n    }\n    50% {\n        transform: rotate(233deg) scaleX(0.7) scaleY(0.9);\n    }\n    100% {\n        transform: rotate(53deg) scaleX(0.9) scaleY(0.7);\n    }\n}\n\n@keyframes animate-yellow {\n    0% {\n        transform: rotate(472deg) scaleX(0.7) scaleY(0.95);\n    }\n    25% {\n        transform: rotate(382deg) scaleX(0.95) scaleY(0.7);\n    }\n    50% {\n        transform: rotate(292deg) scaleX(0.7) scaleY(0.95);\n    }\n    75% {\n        transform: rotate(202deg) scaleX(0.95) scaleY(0.7);\n    }\n    100% {\n        transform: rotate(112deg) scaleX(0.7) scaleY(0.95);\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\nimport { createRandomString } from '../../util/random-string';\n\n/**\n * @exampleComponent limel-example-ai-avatar-basic\n */\n@Component({\n    tag: 'limel-ai-avatar',\n    shadow: { delegatesFocus: true },\n    styleUrl: 'ai-avatar.scss',\n})\nexport class AIAvatar {\n    private tooltipId = createRandomString();\n\n    /**\n     * The text to show to screenreaders and other assistive tech.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    @Prop({ reflect: true })\n    public static: false;\n\n    public render() {\n        return [\n            <div slot=\"trigger\">\n                <button id=\"ai-assistant\" />\n                <div class=\"ring red\" />\n                <div class=\"ring green\" />\n                <div class=\"ring blue\" />\n                <div class=\"ring yellow\" />\n            </div>,\n            this.renderTooltip(this.tooltipId),\n        ];\n    }\n    private renderTooltip(tooltipId) {\n        if (this.label) {\n            return <limel-tooltip elementId={tooltipId} label={this.label} />;\n        }\n    }\n}\n"],"mappings":"+FAAA,MAAMA,EAAc,8hG,MCYPC,EAAQ,M,yBACTC,KAAAC,UAAYC,I,2CAWbC,SACH,MAAO,CACHC,EAAA,OAAKC,KAAK,WACND,EAAA,UAAQE,GAAG,iBACXF,EAAA,OAAKG,MAAM,aACXH,EAAA,OAAKG,MAAM,eACXH,EAAA,OAAKG,MAAM,cACXH,EAAA,OAAKG,MAAM,iBAEfP,KAAKQ,cAAcR,KAAKC,W,CAGxBO,cAAcP,GAClB,GAAID,KAAKS,MAAO,CACZ,OAAOL,EAAA,iBAAeM,UAAWT,EAAWQ,MAAOT,KAAKS,O"}