{"version":3,"names":["limeAiAvatarBasicCss","LimeAiAvatarColorsExample","this","handleColorChange","event","backgroundColor","detail","setIsThinking","stopPropagation","isThinking","render","h","Host","class","style","borderRadius","checked","label","onChange","helperText","value"],"sources":["./src/components/lime-ai-avatar/examples/lime-ai-avatar-basic.scss?tag=limel-example-lime-ai-avatar-colors&encapsulation=shadow","./src/components/lime-ai-avatar/examples/lime-ai-avatar-colors.tsx"],"sourcesContent":[":host {\n    --example-controls-max-columns-width: 100%;\n}\n\n.avatar-container {\n    transition: background-color 0.3s ease;\n\n    display: block;\n    position: relative;\n    resize: horizontal;\n    overflow: auto;\n\n    box-sizing: border-box;\n\n    min-width: 3rem;\n    max-width: 100%;\n\n    min-height: 2rem;\n    height: auto;\n    max-height: 20rem;\n\n    padding: 1rem 0.25rem 3rem 0.25rem;\n    border: 0.125rem dashed rgb(var(--contrast-500));\n\n    border-radius: 0.5rem;\n\n    &:after {\n        content: 'Resize me â¤µ';\n        font-size: 0.75rem;\n        position: absolute;\n        right: 0.25rem;\n        bottom: 0.25rem;\n    }\n}\n\nlimel-lime-ai-avatar {\n    margin: auto;\n    background-color: rgb(var(--color-glaucous-default));\n\n    &:hover {\n        --ai-avatar-animation-play-state: running;\n    }\n}\n","import { Component, h, Host, State } from '@stencil/core';\n\n/**\n * With background colors\n * To render better, the AI avatar needs to be placed on a colored background.\n */\n@Component({\n    tag: 'limel-example-lime-ai-avatar-colors',\n    shadow: true,\n    styleUrl: 'lime-ai-avatar-basic.scss',\n})\nexport class LimeAiAvatarColorsExample {\n    @State()\n    private isThinking = false;\n\n    @State()\n    private backgroundColor = 'rgb(var(--color-blue-default))';\n\n    public render() {\n        return (\n            <Host>\n                <div class=\"avatar-container\">\n                    <limel-lime-ai-avatar\n                        style={{\n                            backgroundColor: this.backgroundColor,\n                            borderRadius: '50%',\n                        }}\n                        isThinking={this.isThinking}\n                    />\n                </div>\n                <limel-example-controls>\n                    <limel-checkbox\n                        checked={this.isThinking}\n                        label=\"Is thinking\"\n                        onChange={this.setIsThinking}\n                    />\n                    <limel-color-picker-palette\n                        label=\"Background Color\"\n                        helperText=\"Select a background color for the AI avatar\"\n                        value={this.backgroundColor}\n                        onChange={this.handleColorChange}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private readonly handleColorChange = (event: CustomEvent<string>) => {\n        this.backgroundColor = event.detail;\n    };\n\n    private readonly setIsThinking = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.isThinking = event.detail;\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAAuB,4oB,MCWhBC,EAAyB,M,yBAoCjBC,KAAAC,kBAAqBC,IAClCF,KAAKG,gBAAkBD,EAAME,MAAM,EAGtBJ,KAAAK,cAAiBH,IAC9BA,EAAMI,kBACNN,KAAKO,WAAaL,EAAME,MAAM,E,gBAxCb,M,qBAGK,gC,CAEnBI,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,OAAKE,MAAM,oBACPF,EAAA,wBACIG,MAAO,CACHT,gBAAiBH,KAAKG,gBACtBU,aAAc,OAElBN,WAAYP,KAAKO,cAGzBE,EAAA,8BACIA,EAAA,kBACIK,QAASd,KAAKO,WACdQ,MAAM,cACNC,SAAUhB,KAAKK,gBAEnBI,EAAA,8BACIM,MAAM,mBACNE,WAAW,8CACXC,MAAOlB,KAAKG,gBACZa,SAAUhB,KAAKC,qB"}