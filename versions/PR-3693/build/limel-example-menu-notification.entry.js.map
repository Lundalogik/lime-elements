{"version":3,"names":["MenuNotificationExample","constructor","hostRef","this","items","text","icon","badge","separator","handleSelect","event","console","log","detail","render","h","onSelect","slot","label","elevated"],"sources":["./src/components/menu/examples/menu-notification.tsx"],"sourcesContent":["import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h } from '@stencil/core';\n\n/**\n * With notification\n *\n * It is possible to display a notification badge on each individual\n * list item inside the menu's dropdown.\n *\n * These notification badges are supposed to inform the user that\n * there is something in the menu item that requires their attention.\n *\n * This is typically done by displaying a number, which summarizes\n * the quantity of the items that require user's attention.\n * However, if a number is not meaningful, it is possible to send an\n * empty string (`badge: ''`), which will display a circle on the\n * list item.\n *\n * Since list items in the menu are hidden away, users would not\n * realize that there is something inside the menu which requires their\n * attention. Which is why the trigger automatically displays a\n * notification badge on its top-right corner,\n * when the menu contains badges.\n *\n * By default, the badge is red and its text is white.\n * This is to attract users' attention. However, this is possible to override using\n * [provided style variables](/#/component/limel-menu/styles/).\n *\n * :::warning\n * - Do not negatively exploit this possibility and spam users' attention.\n * Crowding the UI with too much noise _will_ negatively affect the user experience.\n * - Notification badges *must* be cleared as soon as the list item is clicked by the user!\n * :::\n */\n@Component({\n    tag: 'limel-example-menu-notification',\n    shadow: true,\n})\nexport class MenuNotificationExample {\n    private items: Array<MenuItem | ListSeparator> = [\n        { text: 'Profile', icon: 'cat_profile' },\n        { text: 'Settings', icon: 'horizontal_settings_mixer', badge: '' },\n        { text: 'Notifications', icon: 'bell', badge: 7 },\n        { separator: true },\n        { text: 'Log out' },\n    ];\n\n    public render() {\n        return (\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-icon-button\n                    slot=\"trigger\"\n                    icon=\"gender_neutral_user\"\n                    label=\"User Menu\"\n                    elevated={true}\n                />\n            </limel-menu>\n        );\n    }\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        console.log(event.detail.text);\n    };\n}\n"],"mappings":"qDA0CaA,EAAuB,MAJpCC,YAAAC,G,UAKYC,KAAAC,MAAyC,CAC7C,CAAEC,KAAM,UAAWC,KAAM,eACzB,CAAED,KAAM,WAAYC,KAAM,4BAA6BC,MAAO,IAC9D,CAAEF,KAAM,gBAAiBC,KAAM,OAAQC,MAAO,GAC9C,CAAEC,UAAW,MACb,CAAEH,KAAM,YAgBJF,KAAAM,aAAgBC,IACpBC,QAAQC,IAAIF,EAAMG,OAAOR,KAAK,C,CAd3BS,SACH,OACIC,EAAA,cAAYX,MAAOD,KAAKC,MAAOY,SAAUb,KAAKM,cAC1CM,EAAA,qBACIE,KAAK,UACLX,KAAK,sBACLY,MAAM,YACNC,SAAU,O"}