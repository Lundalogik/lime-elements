{"version":3,"names":["FRACTION","LinearProgressExample","this","handleChange","event","value","detail","render","h","label","type","min","max","suffix","toFixed","onChange"],"sources":["./src/components/linear-progress/examples/linear-progress.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\nconst FRACTION = 100;\n\n/**\n * Basic example\n * The component accepts a value between `0` and `1` and visualizes it on a scale.\n * In this example, value `0` stands for `0%` and `1` is `100%`,\n * and the `value` of the linear progress is controlled by an input field.\n */\n@Component({\n    shadow: true,\n    tag: 'limel-example-linear-progress',\n})\nexport class LinearProgressExample {\n    @State()\n    private value = 0.7;\n\n    public render() {\n        return [\n            <limel-input-field\n                label=\"Value\"\n                type=\"number\"\n                min={0}\n                max={100}\n                suffix=\"%\"\n                value={(this.value * FRACTION).toFixed(0)}\n                onChange={this.handleChange}\n            />,\n            <p>\n                <limel-linear-progress value={this.value} />\n            </p>,\n        ];\n    }\n\n    private handleChange = (event) => {\n        this.value = +event.detail / FRACTION;\n    };\n}\n"],"mappings":"+CAEA,MAAMA,EAAW,I,MAYJC,EAAqB,M,yBAqBtBC,KAAAC,aAAgBC,IACpBF,KAAKG,OAASD,EAAME,OAASN,CAAQ,E,WApBzB,E,CAETO,SACH,MAAO,CACHC,EAAA,qBACIC,MAAM,QACNC,KAAK,SACLC,IAAK,EACLC,IAAK,IACLC,OAAO,IACPR,OAAQH,KAAKG,MAAQL,GAAUc,QAAQ,GACvCC,SAAUb,KAAKC,eAEnBK,EAAA,SACIA,EAAA,yBAAuBH,MAAOH,KAAKG,S"}