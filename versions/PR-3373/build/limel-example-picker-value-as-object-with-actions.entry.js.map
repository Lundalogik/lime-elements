{"version":3,"names":["ACTIONS","text","secondaryText","icon","value","PickerValueAsObjectWithActionsExample","this","allItems","AUTHORS","search","query","Promise","resolve","filteredItems","filter","item","searchText","toLowerCase","includes","onChange","event","selectedItems","detail","map","itemActions","find","action","Object","prototype","hasOwnProperty","call","id","assign","actions","onInteract","console","log","onMenuItemSelected","stopPropagation","render","h","Host","label","searchLabel","multiple","searcher"],"sources":["./src/components/picker/examples/picker-value-as-object-with-actions.tsx"],"sourcesContent":["import {\n    LimelChipCustomEvent,\n    LimelPickerCustomEvent,\n    ListItem,\n    MenuItem,\n} from '@limetech/lime-elements';\nimport { Component, h, Host, State } from '@stencil/core';\nimport { AUTHORS } from './authors';\n\nconst ACTIONS = [\n    {\n        '1': [\n            {\n                text: 'Email',\n                secondaryText: 'erick.remarque@lime.tech',\n                icon: 'email_sign',\n                value: 1,\n            },\n            {\n                text: 'Direct phone',\n                secondaryText: '+46 987 654 321',\n                icon: 'phone',\n                value: 2,\n            },\n        ],\n    },\n    {\n        '2': [\n            {\n                text: 'Email',\n                secondaryText: 'ernest.hemingway@lime.tech',\n                icon: 'email_sign',\n                value: 1,\n            },\n        ],\n    },\n];\n\n/**\n * Picker with `value` as an object, containing items with menus\n * While chips inside the picker can be clicked on, resulting in\n * an action, they can also have an ellipsis menu which will provide the end users with\n * additional actions.\n *\n * When a menu item is selected from the ellipsis menu, the `onMenuItemSelected` event\n * will be emitted, reflecting the `value` of the selected item.\n *\n * :::note\n * When a chip has `removable={true}` and when there are menu items, the \"remove button\" on the\n * chip will be automatically added as the last item in the ellipsis menu.\n *\n * Clicking the remove button will emit the same `onRemove` event.\n * :::\n */\n@Component({\n    tag: 'limel-example-picker-value-as-object-with-actions',\n    shadow: true,\n})\nexport class PickerValueAsObjectWithActionsExample {\n    @State()\n    private selectedItems: Array<ListItem<{ id: string; limetype: string }>> =\n        [];\n\n    private allItems: Array<ListItem<{ id: string; limetype: string }>> =\n        AUTHORS;\n\n    public render() {\n        return (\n            <Host onMenuItemSelected={this.onMenuItemSelected}>\n                <limel-picker\n                    label=\"Favorite authors\"\n                    value={this.selectedItems}\n                    searchLabel={'Find your favorite authors'}\n                    multiple={true}\n                    searcher={this.search}\n                    onChange={this.onChange}\n                    onInteract={this.onInteract}\n                />\n                <limel-example-value value={this.selectedItems} />\n            </Host>\n        );\n    }\n\n    private search = (query: string): Promise<ListItem[]> => {\n        return new Promise((resolve) => {\n            if (query === '') {\n                resolve([]);\n            }\n\n            const filteredItems = this.allItems.filter((item) => {\n                const searchText =\n                    item.text.toLowerCase() +\n                    ' ' +\n                    item.secondaryText.toLowerCase();\n\n                return searchText.includes(query.toLowerCase());\n            });\n            resolve(filteredItems);\n        });\n    };\n\n    private onChange = (\n        event: LimelPickerCustomEvent<\n            Array<\n                ListItem<{\n                    id: string;\n                    limetype: string;\n                }>\n            >\n        >,\n    ) => {\n        this.selectedItems = [...event.detail].map((item) => {\n            const itemActions = ACTIONS.find((action) =>\n                Object.prototype.hasOwnProperty.call(action, item.value.id),\n            );\n\n            return {\n                ...item,\n                actions: itemActions?.[item.value.id],\n            };\n        });\n    };\n\n    private onInteract = (\n        event: LimelPickerCustomEvent<\n            ListItem<{ id: string; limetype: string }>\n        >,\n    ) => {\n        console.log('Value interacted with:', event.detail);\n    };\n\n    private onMenuItemSelected = (event: LimelChipCustomEvent<MenuItem>) => {\n        event.stopPropagation();\n        console.log('Selected action:', event.detail);\n    };\n}\n"],"mappings":"gGASA,MAAMA,EAAU,CACZ,CACI,EAAK,CACD,CACIC,KAAM,QACNC,cAAe,2BACfC,KAAM,aACNC,MAAO,GAEX,CACIH,KAAM,eACNC,cAAe,kBACfC,KAAM,QACNC,MAAO,KAInB,CACI,EAAK,CACD,CACIH,KAAM,QACNC,cAAe,6BACfC,KAAM,aACNC,MAAO,M,MA0BVC,EAAqC,M,yBAKtCC,KAAAC,SACJC,EAmBIF,KAAAG,OAAUC,GACP,IAAIC,SAASC,IAChB,GAAIF,IAAU,GAAI,CACdE,EAAQ,G,CAGZ,MAAMC,EAAgBP,KAAKC,SAASO,QAAQC,IACxC,MAAMC,EACFD,EAAKd,KAAKgB,cACV,IACAF,EAAKb,cAAce,cAEvB,OAAOD,EAAWE,SAASR,EAAMO,cAAc,IAEnDL,EAAQC,EAAc,IAItBP,KAAAa,SACJC,IASAd,KAAKe,cAAgB,IAAID,EAAME,QAAQC,KAAKR,IACxC,MAAMS,EAAcxB,EAAQyB,MAAMC,GAC9BC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQX,EAAKX,MAAM2B,MAG5D,OAAAJ,OAAAK,OAAAL,OAAAK,OAAA,GACOjB,GAAI,CACPkB,QAAST,IAAW,MAAXA,SAAW,SAAXA,EAAcT,EAAKX,MAAM2B,KAAG,GAE3C,EAGEzB,KAAA4B,WACJd,IAIAe,QAAQC,IAAI,yBAA0BhB,EAAME,OAAO,EAG/ChB,KAAA+B,mBAAsBjB,IAC1BA,EAAMkB,kBACNH,QAAQC,IAAI,mBAAoBhB,EAAME,OAAO,E,mBAxE7C,E,CAKGiB,SACH,OACIC,EAACC,EAAI,CAACJ,mBAAoB/B,KAAK+B,oBAC3BG,EAAA,gBACIE,MAAM,mBACNtC,MAAOE,KAAKe,cACZsB,YAAa,6BACbC,SAAU,KACVC,SAAUvC,KAAKG,OACfU,SAAUb,KAAKa,SACfe,WAAY5B,KAAK4B,aAErBM,EAAA,uBAAqBpC,MAAOE,KAAKe,gB"}