{"version":3,"names":["objectProto","Object","prototype","hasOwnProperty","assignValue","object","key","value","objValue","call","eq","undefined","baseAssignValue"],"sources":["./node_modules/lodash-es/_assignValue.js"],"sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n"],"mappings":"mFAIA,IAAIA,EAAcC,OAAOC,UAGzB,IAAIC,EAAiBH,EAAYG,eAYjC,SAASC,EAAYC,EAAQC,EAAKC,GAChC,IAAIC,EAAWH,EAAOC,GACtB,KAAMH,EAAeM,KAAKJ,EAAQC,IAAQI,EAAGF,EAAUD,KAClDA,IAAUI,aAAeL,KAAOD,GAAU,CAC7CO,EAAgBP,EAAQC,EAAKC,EACjC,CACA,Q"}