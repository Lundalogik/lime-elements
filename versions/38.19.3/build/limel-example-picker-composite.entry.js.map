{"version":3,"names":["PickerCompositeExample","this","allItems","text","value","availableItems","handleChange","event","props","Object","assign","detail","updateAvailableItems","filter","item","_b","_a","find","call","selectedItem","handleEvent","eventPrinter","writeEvent","handleFormChange","label","searchLabel","helperText","leadingIcon","emptyResultMessage","delimiter","required","disabled","readonly","loading","multiple","badgeIcons","componentWillLoad","schema","lime","layout","type","properties","actionPosition","actionScrollBehavior","actions","searcher","render","h","onChange","onInteract","renderForm","ref","el","style"],"sources":["./src/components/picker/examples/picker-composite.tsx"],"sourcesContent":["import { Component, h, Prop, State } from '@stencil/core';\nimport { FormSchema, ListItem } from '@limetech/lime-elements';\n\n/**\n * Composite\n *\n * A place to try different combinations of states.\n */\n@Component({\n    tag: 'limel-example-picker-composite',\n    shadow: true,\n})\nexport class PickerCompositeExample {\n    @Prop({ mutable: true })\n    public schema: FormSchema;\n\n    @State()\n    private props: {\n        value: ListItem<number | string> | Array<ListItem<number | string>>;\n        [key: string]: any;\n    } = {\n        label: 'My label',\n        searchLabel: 'My search label',\n        helperText: 'My helper text',\n        leadingIcon: 'search',\n        emptyResultMessage: 'No matches found',\n        delimiter: '',\n        value: [],\n        required: false,\n        disabled: false,\n        readonly: false,\n        loading: false,\n        multiple: true,\n        badgeIcons: true,\n    };\n\n    private eventPrinter: HTMLLimelExampleEventPrinterElement;\n\n    private allItems: Array<ListItem<number>> = [\n        { text: 'Admiral Swiggins', value: 1 },\n        { text: 'Ayla', value: 2 },\n        { text: 'Clunk', value: 3 },\n        { text: 'Coco', value: 4 },\n        { text: 'Derpl', value: 5 },\n        { text: 'Froggy G', value: 6 },\n        { text: 'Gnaw', value: 7 },\n        { text: 'Lonestar', value: 8 },\n        { text: 'Leon', value: 9 },\n        { text: 'Raelynn', value: 10 },\n        { text: 'Sk√∏lldir', value: 11 },\n        { text: 'Voltar', value: 12 },\n        { text: 'Yuri', value: 13 },\n    ];\n\n    private availableItems: Array<ListItem<number>> = [...this.allItems];\n\n    public componentWillLoad() {\n        const schema = {\n            ...this.schema,\n            lime: {\n                layout: {\n                    type: 'grid',\n                },\n            },\n        };\n        delete schema.properties.actionPosition;\n        delete schema.properties.actionScrollBehavior;\n        delete schema.properties.actions;\n        delete schema.properties.allItems;\n        delete schema.properties.searcher;\n        this.schema = schema;\n    }\n\n    public render() {\n        return [\n            <limel-picker\n                {...this.props}\n                allItems={this.availableItems}\n                onChange={this.handleChange}\n                onInteract={this.handleEvent}\n            />,\n            this.renderForm(),\n            <limel-example-event-printer\n                ref={(el) => (this.eventPrinter = el)}\n            />,\n        ];\n    }\n\n    private handleChange = (\n        event: CustomEvent<\n            ListItem<number | string> | Array<ListItem<number | string>>\n        >\n    ) => {\n        this.props = {\n            ...this.props,\n            value: event.detail as any,\n        };\n        this.updateAvailableItems();\n    };\n\n    private updateAvailableItems = () => {\n        this.availableItems = this.allItems.filter((item) => {\n            return !(this.props.value as any)?.find?.(\n                (selectedItem: ListItem<number | string>) => {\n                    return item.value === selectedItem.value;\n                }\n            );\n        });\n    };\n\n    private handleEvent = (event: CustomEvent) => {\n        this.eventPrinter.writeEvent(event);\n    };\n\n    private renderForm() {\n        return (\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-form\n                    schema={this.schema}\n                    value={this.props}\n                    onChange={this.handleFormChange}\n                />\n            </limel-example-controls>\n        );\n    }\n\n    private handleFormChange = (event: CustomEvent) => {\n        this.props = event.detail;\n    };\n}\n"],"mappings":"qDAYaA,EAAsB,M,yBA0BvBC,KAAAC,SAAoC,CACxC,CAAEC,KAAM,mBAAoBC,MAAO,GACnC,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,UAAWC,MAAO,IAC1B,CAAED,KAAM,WAAYC,MAAO,IAC3B,CAAED,KAAM,SAAUC,MAAO,IACzB,CAAED,KAAM,OAAQC,MAAO,KAGnBH,KAAAI,eAA0C,IAAIJ,KAAKC,UAkCnDD,KAAAK,aACJC,IAIAN,KAAKO,MAAKC,OAAAC,OAAAD,OAAAC,OAAA,GACHT,KAAKO,OAAK,CACbJ,MAAOG,EAAMI,SAEjBV,KAAKW,sBAAsB,EAGvBX,KAAAW,qBAAuB,KAC3BX,KAAKI,eAAiBJ,KAAKC,SAASW,QAAQC,I,QACxC,SAAQC,GAAAC,EAACf,KAAKO,MAAMJ,SAAa,MAAAY,SAAA,SAAAA,EAAEC,QAAI,MAAAF,SAAA,SAAAA,EAAAG,KAAAF,GAClCG,GACUL,EAAKV,QAAUe,EAAaf,QAE1C,GACH,EAGEH,KAAAmB,YAAeb,IACnBN,KAAKoB,aAAaC,WAAWf,EAAM,EAiB/BN,KAAAsB,iBAAoBhB,IACxBN,KAAKO,MAAQD,EAAMI,MAAM,E,iCA7GzB,CACAa,MAAO,WACPC,YAAa,kBACbC,WAAY,iBACZC,YAAa,SACbC,mBAAoB,mBACpBC,UAAW,GACXzB,MAAO,GACP0B,SAAU,MACVC,SAAU,MACVC,SAAU,MACVC,QAAS,MACTC,SAAU,KACVC,WAAY,K,CAuBTC,oBACH,MAAMC,EAAM5B,OAAAC,OAAAD,OAAAC,OAAA,GACLT,KAAKoC,QAAM,CACdC,KAAM,CACFC,OAAQ,CACJC,KAAM,kBAIXH,EAAOI,WAAWC,sBAClBL,EAAOI,WAAWE,4BAClBN,EAAOI,WAAWG,eAClBP,EAAOI,WAAWvC,gBAClBmC,EAAOI,WAAWI,SACzB5C,KAAKoC,OAASA,C,CAGXS,SACH,MAAO,CACHC,EAAA,eAAAtC,OAAAC,OAAA,GACQT,KAAKO,MAAK,CACdN,SAAUD,KAAKI,eACf2C,SAAU/C,KAAKK,aACf2C,WAAYhD,KAAKmB,eAErBnB,KAAKiD,aACLH,EAAA,+BACII,IAAMC,GAAQnD,KAAKoB,aAAe+B,I,CA+BtCF,aACJ,OACIH,EAAA,0BACIM,MAAO,CAAE,mCAAoC,aAE7CN,EAAA,cACIV,OAAQpC,KAAKoC,OACbjC,MAAOH,KAAKO,MACZwC,SAAU/C,KAAKsB,mB"}