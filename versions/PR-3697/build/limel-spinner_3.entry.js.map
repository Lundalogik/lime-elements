{"version":3,"names":["spinnerCss","Spinner","render","h","viewBox","xmlns","this","renderSpinner","limeBranded","class","cx","cy","r","id","d","getOwnerElement","startingPoint","element","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","DOCUMENT_NODE","getElementById","DEFAULT_DELAY_FOR_SHOWING","TooltipTimer","constructor","showCallback","hideCallback","delayForShowing","timerHandle","showAfterDelay","setTimeout","hide","clearTimeout","tooltipCss","DEFAULT_MAX_LENGTH","Tooltip","hostRef","showTooltip","tooltipTimer","hideTooltip","portalId","createRandomString","tooltipId","open","connectedCallback","ownerElement","elementId","host","setOwnerAriaLabel","addListeners","disconnectedCallback","removeListeners","tooltipZIndex","getComputedStyle","getPropertyValue","openDirection","visible","containerId","containerStyle","anchor","label","helperLabel","maxlength","role","_a","setAttribute","addEventListener","_b","_c","_d","removeEventListener","tooltipContentCss","TooltipContent","isLabelsTextLong","length","props","style","Object","assign"],"sources":["./src/components/spinner/spinner.scss?tag=limel-spinner&encapsulation=shadow","./src/components/spinner/spinner.tsx","./src/components/tooltip/get-owner-element.tsx","./src/components/tooltip/tooltip-timer.ts","./src/components/tooltip/tooltip.scss?tag=limel-tooltip&encapsulation=shadow","./src/components/tooltip/tooltip.tsx","./src/components/tooltip/tooltip-content.scss?tag=limel-tooltip-content&encapsulation=shadow","./src/components/tooltip/tooltip-content.tsx"],"sourcesContent":["@use 'sass:math';\n@use '../../style/functions';\n\n/**\n * @prop --spinner-color-1: 1st animated stroke color, defaults to `--lime-brand-color-lime-green`.\n * @prop --spinner-color-2: 2nd animated stroke color, defaults to `--lime-brand-color-ocean-teal`.\n * @prop --spinner-color-3: 3rd animated stroke color, defaults to `--lime-brand-color-aqua`.\n * @prop --spinner-color-4: 4th animated stroke color, defaults to `--lime-brand-color-bubble-gum`.\n * @prop --spinner-color-5: 5th animated stroke color, defaults to `--lime-brand-color-sunny-orange`.\n * @prop --spinner-color-6: 6th animated stroke color, defaults to `--lime-brand-color-lime-green`.\n * @prop --spinner-color-7: 7th animated stroke color, defaults to `--lime-brand-color-ocean-teal`.\n * @prop --spinner-color-8: 8th animated stroke color, defaults to `--lime-brand-color-aqua`.\n * @prop --spinner-color-9: 9th animated stroke color, defaults to `--lime-brand-color-bubble-gum`.\n * @prop --spinner-color-10: 10th animated stroke color, defaults to `--lime-brand-color-sunny-orange`.\n */\n\n$stroke-width-normal: 4;\n$stroke-width-thick: 10;\n$colors:\n    var(--spinner-color-1, rgb(var(--lime-brand-color-lime-green))),\n    var(--spinner-color-2, rgb(var(--lime-brand-color-ocean-teal))),\n    var(--spinner-color-3, rgb(var(--lime-brand-color-aqua))),\n    var(--spinner-color-4, rgb(var(--lime-brand-color-bubble-gum))),\n    var(--spinner-color-5, rgb(var(--lime-brand-color-sunny-orange))),\n    var(--spinner-color-6, rgb(var(--lime-brand-color-lime-green))),\n    var(--spinner-color-7, rgb(var(--lime-brand-color-ocean-teal))),\n    var(--spinner-color-8, rgb(var(--lime-brand-color-aqua))),\n    var(--spinner-color-9, rgb(var(--lime-brand-color-bubble-gum))),\n    var(--spinner-color-10, rgb(var(--contrast-700)));\n$dash: 63;\n$duration: length($colors) * 1s;\n$duration-alt: math.div($duration, length($colors));\n$keyframe: math.div(1, length($colors) * 2) * 100;\n\n:host(limel-spinner) {\n    display: block;\n}\n\n@keyframes spin {\n    50% {\n        transform: rotate(180deg);\n    }\n    100% {\n        transform: rotate(720deg);\n    }\n}\n\n@keyframes fade-in-the-spinner {\n    0% {\n        transform: scale(0.7);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n@keyframes animate-colored-circles {\n    #{$keyframe * 1%} {\n        stroke-dashoffset: 0;\n    }\n    #{$keyframe * 2%},\n    100% {\n        stroke-dashoffset: $dash;\n    }\n}\n\n:host([hidden]) {\n    display: none;\n}\n\n:host {\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    // size=mini is the default\n    height: functions.pxToRem(24);\n    width: functions.pxToRem(24);\n    transform: translate3d(0, 0, 0);\n    animation: fade-in-the-spinner 0.5s ease forwards;\n}\n\n:host([size='x-small']) {\n    height: functions.pxToRem(32);\n    width: functions.pxToRem(32);\n}\n\n:host([size='small']) {\n    height: functions.pxToRem(34);\n    width: functions.pxToRem(34);\n}\n\n:host([size='medium']) {\n    height: functions.pxToRem(44);\n    width: functions.pxToRem(44);\n}\n\n:host([size='large']) {\n    height: functions.pxToRem(64);\n    width: functions.pxToRem(64);\n}\n\n.spinner {\n    animation: spin $duration-alt linear infinite;\n    transform-origin: center;\n}\n\n.color {\n    animation: animate-colored-circles $duration linear infinite;\n    fill: none;\n    stroke-dasharray: $dash;\n    stroke-dashoffset: $dash;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n\n    @for $i from 1 through length($colors) {\n        &:nth-child(#{$i}) {\n            stroke: nth($colors, $i);\n\n            @if $i > 1 {\n                animation-delay: ($i - 1) * $duration-alt;\n            }\n        }\n    }\n}\n\n.outline {\n    stroke: rgba(var(--lime-brand-color-light-grey), 0.3);\n    fill: none;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n}\n","import { SpinnerSize } from './spinner.types';\nimport { Component, Prop, h } from '@stencil/core';\n\n/**\n * @exampleComponent limel-example-spinner\n * @exampleComponent limel-example-spinner-color\n * @exampleComponent limel-example-spinner-size\n */\n@Component({\n    tag: 'limel-spinner',\n    shadow: true,\n    styleUrl: 'spinner.scss',\n})\nexport class Spinner {\n    /**\n     * Determines the size of the spinner.\n     */\n    @Prop({ reflect: true })\n    public size: SpinnerSize = 'mini';\n\n    /**\n     * Gives the spinner the shape of Lime Technologies' logo\n     */\n    @Prop()\n    public limeBranded: boolean = false;\n\n    public render() {\n        return [\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                {this.renderSpinner()}\n            </svg>,\n        ];\n    }\n\n    private renderSpinner() {\n        if (!this.limeBranded) {\n            return (\n                <g>\n                    <circle class=\"outline\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    </g>\n                </g>\n            );\n        }\n\n        return (\n            <g>\n                <g clip-path=\"url(#mask)\">\n                    <circle class=\"outline thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    </g>\n                </g>\n                <clipPath id=\"mask\">\n                    <path d=\"M2.166 11.248C2.166 5.04 7.058 0 13.083 0 19.108 0 24 5.04 24 11.248c0 3.229-1.307 6.548-4.533 9.306-3.908 3.343-9.15 3.8-17.254 3.249-2.405-.164-2.753-.588-1.51-1.533C4.61 19.3 2.165 17.025 2.165 11.248zm3.124 9.834c5.563.227 9.416-.246 12.397-2.76 2.432-2.05 3.482-4.56 3.51-7.074.05-4.613-3.636-8.36-8.114-8.36-4.478 0-8.114 3.746-8.114 8.36 0 2.793.607 4.737.726 6.345.092 1.252.03 2.388-.405 3.49z\" />\n                </clipPath>\n            </g>\n        );\n    }\n}\n","/**\n *\n * @param id\n * @param startingPoint\n */\nexport function getOwnerElement(\n    id: string,\n    startingPoint: Node\n): HTMLElement | undefined {\n    let element: Node = startingPoint;\n\n    do {\n        element = element.parentNode;\n    } while (\n        element &&\n        element.nodeType !== Node.DOCUMENT_FRAGMENT_NODE &&\n        element.nodeType !== Node.DOCUMENT_NODE\n    );\n\n    return (element as ShadowRoot)?.getElementById(id);\n}\n","const DEFAULT_DELAY_FOR_SHOWING = 500;\n\nexport class TooltipTimer {\n    private timerHandle: number | null = null;\n    private showCallback: Function;\n    private hideCallback: Function;\n    private delayForShowing: number;\n\n    constructor(\n        showCallback: Function,\n        hideCallback: Function,\n        delayForShowing: number = DEFAULT_DELAY_FOR_SHOWING\n    ) {\n        this.showCallback = showCallback;\n        this.hideCallback = hideCallback;\n        this.delayForShowing = delayForShowing;\n    }\n\n    showAfterDelay(): void {\n        if (!this.timerHandle) {\n            this.timerHandle = setTimeout(\n                this.showCallback,\n                this.delayForShowing\n            );\n        }\n    }\n\n    hide(): void {\n        clearTimeout(this.timerHandle);\n        this.timerHandle = null;\n        this.hideCallback();\n    }\n}\n","/**\n * @prop --tooltip-z-index: z-index of the tooltip.\n */\n\n:host(limel-tooltip) {\n    // Absolutely positioning ensures that this invisible element\n    // does not occupy visible space in the UI.\n    // Without this, `limel-tooltip` could in many cases\n    // mess up the layout, where it is used.\n    // For example, inside a `grid` or `flex` section,\n    // every instance of the tooltip would take some space,\n    // creating gaps and empty holes.\n    position: absolute;\n    pointer-events: none;\n}\n","import { Component, h, Prop, Element, State } from '@stencil/core';\nimport { JSX } from 'react';\nimport { createRandomString } from '../../util/random-string';\nimport { OpenDirection } from '../menu/menu.types';\nimport { getOwnerElement } from './get-owner-element';\nimport { TooltipTimer } from './tooltip-timer';\n\nconst DEFAULT_MAX_LENGTH = 50;\n\n/**\n * A tooltip can be used to display a descriptive text for any element.\n * The displayed content must be a brief and supplemental string of text,\n * identifying the element or describing its function for the user,\n * helping them better understand unfamiliar objects that aren't described\n * directly in the UI.\n *\n * ## Interaction\n * The tooltip appears after a slight delay, when the element is hovered;\n * and disappears as soon as the cursor leaves the element.\n * Therefore, users cannot interact with the tip, but if the trigger element\n * itself is interactive, it will remain interactible even with a tooltip bound\n * to it.\n *\n * :::note\n * In order to display the tooltip, the tooltip element and its trigger element\n * must be within the same document or document fragment (the same shadowRoot).\n * Often, it's easiest to just place them next to each other like in the example\n * below, but if you need to, you can place them differently.\n *\n * ```html\n * <limel-button icon=\"search\" id=\"tooltip-example\" />\n * <limel-tooltip label=\"Search\" elementId=\"tooltip-example\" />\n * ```\n * :::\n *\n * ## Usage\n * - Keep in mind that tooltips can be distracting, and can be perceived as an interruption.\n * Use them only when they add significant value.\n * - A good tip is concise, helpful, and informative.\n * Don't explain the obvious or simply repeat what is already on the screen.\n * When used correctly, supplemental info of a tooltip helps to [declutter the UI](/#/DesignGuidelines/decluttering.md/).\n * - If the tip is essential to the primary tasks that the user is performing,\n * such as warnings or important notes, include the information directly in the\n * interface instead.\n * - When a component offers a helper text (e.g. [Input field](/#/component/limel-input-field/)),\n * use that, not a tooltip.\n * - Make sure to use the tooltip on an element that users naturally and\n * effortlessly recognize can be hovered.\n *\n * @exampleComponent limel-example-tooltip-basic\n * @exampleComponent limel-example-tooltip-max-character\n * @exampleComponent limel-example-tooltip-composite\n */\n@Component({\n    tag: 'limel-tooltip',\n    shadow: true,\n    styleUrl: 'tooltip.scss',\n})\nexport class Tooltip {\n    /**\n     * ID of the owner element that the tooltip should describe.\n     * Must be a child within the same document fragment as the tooltip element\n     * itself.\n     */\n    @Prop({ reflect: true })\n    public elementId!: string;\n\n    /**\n     * Short descriptive text of the owner element.\n     */\n    @Prop({ reflect: true })\n    public label!: string;\n\n    /**\n     * Additional helper text for the element.\n     * Example usage can be a keyboard shortcut to activate the function of the\n     * owner element.\n     */\n    @Prop({ reflect: true })\n    public helperLabel?: string;\n\n    /**\n     * The maximum amount of characters before rendering 'label' and\n     * 'helperLabel' in two rows.\n     */\n    @Prop({ reflect: true })\n    public maxlength?: number = DEFAULT_MAX_LENGTH;\n\n    /**\n     * Decides the tooltip's location in relation to its trigger.\n     */\n    @Prop({ reflect: true })\n    public openDirection: OpenDirection = 'top';\n\n    @Element()\n    private host: HTMLLimelTooltipElement;\n\n    @State()\n    private open: boolean;\n\n    private portalId: string;\n    private tooltipId: string;\n    private ownerElement: HTMLElement;\n    private tooltipTimer: TooltipTimer;\n\n    public constructor() {\n        this.portalId = createRandomString();\n        this.tooltipId = createRandomString();\n        this.tooltipTimer = new TooltipTimer(\n            () => (this.open = true),\n            () => (this.open = false)\n        );\n    }\n\n    public connectedCallback() {\n        this.ownerElement = getOwnerElement(this.elementId, this.host);\n        this.setOwnerAriaLabel();\n        this.addListeners();\n    }\n\n    public disconnectedCallback() {\n        this.removeListeners();\n    }\n\n    public render(): JSX.Element {\n        const tooltipZIndex = getComputedStyle(this.host).getPropertyValue(\n            '--tooltip-z-index'\n        );\n\n        return (\n            <div class=\"trigger-anchor\">\n                <limel-portal\n                    openDirection={this.openDirection}\n                    visible={this.open}\n                    containerId={this.portalId}\n                    containerStyle={{\n                        'z-index': tooltipZIndex,\n                        'pointer-events': 'none',\n                    }}\n                    anchor={this.ownerElement}\n                >\n                    <limel-tooltip-content\n                        label={this.label}\n                        helperLabel={this.helperLabel}\n                        maxlength={this.maxlength}\n                        role=\"tooltip\"\n                        aria-hidden={!this.open}\n                        id={this.tooltipId}\n                    />\n                </limel-portal>\n            </div>\n        );\n    }\n\n    private setOwnerAriaLabel() {\n        this.ownerElement?.setAttribute('aria-describedby', this.tooltipId);\n    }\n\n    private addListeners() {\n        this.ownerElement?.addEventListener('mouseover', this.showTooltip);\n        this.ownerElement?.addEventListener('mouseout', this.hideTooltip);\n        this.ownerElement?.addEventListener('focus', this.showTooltip);\n        this.ownerElement?.addEventListener('blur', this.hideTooltip);\n    }\n\n    private removeListeners() {\n        this.ownerElement?.removeEventListener('mouseover', this.showTooltip);\n        this.ownerElement?.removeEventListener('mouseout', this.hideTooltip);\n        this.ownerElement?.removeEventListener('focus', this.showTooltip);\n        this.ownerElement?.removeEventListener('blur', this.hideTooltip);\n    }\n\n    private showTooltip = () => {\n        this.tooltipTimer.showAfterDelay();\n    };\n\n    private hideTooltip = () => {\n        this.tooltipTimer.hide();\n    };\n}\n",":host(limel-tooltip-content) {\n    display: flex;\n\n    border-radius: 0.25rem;\n    padding: 0.25rem 0.5rem;\n    background-color: rgb(var(--contrast-1300));\n    box-shadow: var(--shadow-depth-16);\n}\n\ntext {\n    font-size: var(--limel-theme-default-font-size); // 14px\n    line-height: 1.25;\n    display: flex;\n    column-gap: 1rem;\n\n    &.has-column-layout {\n        display: table-cell;\n        width: fit-content;\n        max-width: min(var(--tooltip-max-width-of-text), 80vw);\n        .label {\n            padding-bottom: 0.5rem;\n        }\n        .helper-label {\n            padding-bottom: 0.25rem;\n        }\n    }\n}\n\n.label {\n    color: rgb(var(--contrast-200));\n}\n\n.helper-label {\n    color: rgb(var(--contrast-800));\n\n    &:empty {\n        display: none;\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n/**\n * This component is used internally by `limel-tooltip`.\n *\n * @private\n */\n@Component({\n    tag: 'limel-tooltip-content',\n    shadow: true,\n    styleUrl: 'tooltip-content.scss',\n})\nexport class TooltipContent {\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    label!: string;\n\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    helperLabel?: string;\n\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    maxlength?: number;\n\n    public render() {\n        let isLabelsTextLong = false;\n        if (this.helperLabel && this.maxlength) {\n            isLabelsTextLong =\n                this.label.length + this.helperLabel.length > this.maxlength;\n        }\n\n        const props: any = {};\n        if (this.maxlength) {\n            props.style = {\n                '--tooltip-max-width-of-text': `${this.maxlength}` + 'ch',\n            };\n        }\n\n        return [\n            <text class={{ 'has-column-layout': isLabelsTextLong }} {...props}>\n                <div class=\"label\">{this.label}</div>\n                <div class=\"helper-label\">{this.helperLabel}</div>\n            </text>,\n        ];\n    }\n}\n"],"mappings":"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"}