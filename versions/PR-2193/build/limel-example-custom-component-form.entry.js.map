{"version":3,"names":["schema","type","properties","name","title","description","value","hero","CustomComponentFormExample","this","handleFormChange","event","formData","detail","render","h","onChange","slot","helperText"],"sources":["./src/components/form/examples/custom-component-schema.ts","./src/components/form/examples/custom-component-form.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\n\nexport interface CustomComponentFormData {\n    name?: string;\n    value?: number;\n    hero?: number;\n}\n\nexport const schema: FormSchema<CustomComponentFormData> = {\n    type: 'object',\n    properties: {\n        name: {\n            type: 'string',\n            title: 'Name',\n            description: 'Name of the superhero deal',\n        },\n        value: {\n            type: 'integer',\n            title: 'Value',\n            description: 'Amount to pay to hero',\n        },\n        hero: {\n            type: 'integer',\n            title: 'Hero',\n        },\n    },\n};\n","import { Component, h, State } from '@stencil/core';\nimport { CustomComponentFormData, schema } from './custom-component-schema';\n\n/**\n * Custom form component\n *\n * You can specify a custom component to use for any property in your form. This\n * is done under the `lime` key in the schema, following the\n * [LimeSchemaOptions](#/type/LimeSchemaOptions/) specification, for example:\n *\n * ```ts\n * const schema = {\n *     type: 'object',\n *     properties: {\n *         hero: {\n *             type: 'integer',\n *             title: 'Hero',\n *             lime: {\n *                 component: {\n *                     name: 'my-useful-hero-picker',\n *                 },\n *             },\n *         },\n *     },\n * };\n * ```\n *\n * While you can, in principle, use any component in a form, your custom form\n * components should implement the [FormComponent](#/type/FormComponent/)\n * interface.\n *\n * @sourceFile custom-component-schema.ts\n * @sourceFile custom-component-picker.tsx\n */\n@Component({\n    tag: 'limel-example-custom-component-form',\n    shadow: true,\n})\nexport class CustomComponentFormExample {\n    @State()\n    private formData: CustomComponentFormData = {\n        name: 'My superhero deal',\n        value: 1_000_000,\n        hero: 1001,\n    };\n\n    public render() {\n        return [\n            <limel-form\n                onChange={this.handleFormChange}\n                value={this.formData}\n                schema={schema}\n            >\n                <limel-example-custom-picker\n                    slot=\"hero\"\n                    helperText=\"Pick your superhero!\"\n                />\n            </limel-form>,\n            <limel-example-value value={this.formData} />,\n        ];\n    }\n\n    private handleFormChange = (event) => {\n        this.formData = event.detail;\n    };\n}\n"],"mappings":"+CAQO,MAAMA,EAA8C,CACvDC,KAAM,SACNC,WAAY,CACRC,KAAM,CACFF,KAAM,SACNG,MAAO,OACPC,YAAa,8BAEjBC,MAAO,CACHL,KAAM,UACNG,MAAO,QACPC,YAAa,yBAEjBE,KAAM,CACFN,KAAM,UACNG,MAAO,U,MCeNI,EAA0B,M,yBAwB3BC,KAAAC,iBAAoBC,IACxBF,KAAKG,SAAWD,EAAME,MAAM,E,cAvBY,CACxCV,KAAM,oBACNG,MAAO,IACPC,KAAM,K,CAGHO,SACH,MAAO,CACHC,EAAA,cACIC,SAAUP,KAAKC,iBACfJ,MAAOG,KAAKG,SACZZ,OAAQA,GAERe,EAAA,+BACIE,KAAK,OACLC,WAAW,0BAGnBH,EAAA,uBAAqBT,MAAOG,KAAKG,W"}