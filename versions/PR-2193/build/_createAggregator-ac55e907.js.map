{"version":3,"names":["arrayAggregator","array","setter","iteratee","accumulator","index","length","value","createBaseFor","fromRight","object","keysFunc","iterable","Object","props","key","baseFor","baseForOwn","keys","createBaseEach","eachFunc","collection","isArrayLike","baseEach","baseAggregator","createAggregator","initializer","func","isArray","baseIteratee"],"sources":["./node_modules/lodash-es/_arrayAggregator.js","./node_modules/lodash-es/_createBaseFor.js","./node_modules/lodash-es/_baseFor.js","./node_modules/lodash-es/_baseForOwn.js","./node_modules/lodash-es/_createBaseEach.js","./node_modules/lodash-es/_baseEach.js","./node_modules/lodash-es/_baseAggregator.js","./node_modules/lodash-es/_createAggregator.js"],"sourcesContent":["/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n"],"mappings":"sLAUA,SAASA,EAAgBC,EAAOC,EAAQC,EAAUC,GAChD,IAAIC,GAAS,EACTC,EAASL,GAAS,KAAO,EAAIA,EAAMK,OAEvC,QAASD,EAAQC,EAAQ,CACvB,IAAIC,EAAQN,EAAMI,GAClBH,EAAOE,EAAaG,EAAOJ,EAASI,GAAQN,EAChD,CACE,OAAOG,CACT,CCZA,SAASI,EAAcC,GACrB,OAAO,SAASC,EAAQP,EAAUQ,GAChC,IAAIN,GAAS,EACTO,EAAWC,OAAOH,GAClBI,EAAQH,EAASD,GACjBJ,EAASQ,EAAMR,OAEnB,MAAOA,IAAU,CACf,IAAIS,EAAMD,EAAML,EAAYH,IAAWD,GACvC,GAAIF,EAASS,EAASG,GAAMA,EAAKH,KAAc,MAAO,CACpD,KACR,CACA,CACI,OAAOF,CACX,CACA,CCTA,IAAIM,EAAUR,ICFd,SAASS,EAAWP,EAAQP,GAC1B,OAAOO,GAAUM,EAAQN,EAAQP,EAAUe,EAC7C,CCHA,SAASC,EAAeC,EAAUX,GAChC,OAAO,SAASY,EAAYlB,GAC1B,GAAIkB,GAAc,KAAM,CACtB,OAAOA,CACb,CACI,IAAKC,EAAYD,GAAa,CAC5B,OAAOD,EAASC,EAAYlB,EAClC,CACI,IAAIG,EAASe,EAAWf,OACpBD,EAAQI,EAAYH,GAAU,EAC9BM,EAAWC,OAAOQ,GAEtB,MAAQZ,EAAYJ,MAAYA,EAAQC,EAAS,CAC/C,GAAIH,EAASS,EAASP,GAAQA,EAAOO,KAAc,MAAO,CACxD,KACR,CACA,CACI,OAAOS,CACX,CACA,CClBA,IAAIE,EAAWJ,EAAeF,GCE9B,SAASO,EAAeH,EAAYnB,EAAQC,EAAUC,GACpDmB,EAASF,GAAY,SAASd,EAAOQ,EAAKM,GACxCnB,EAAOE,EAAaG,EAAOJ,EAASI,GAAQc,EAChD,IACE,OAAOjB,CACT,CCLA,SAASqB,EAAiBvB,EAAQwB,GAChC,OAAO,SAASL,EAAYlB,GAC1B,IAAIwB,EAAOC,EAAQP,GAAcrB,EAAkBwB,EAC/CpB,EAAcsB,EAAcA,IAAgB,GAEhD,OAAOC,EAAKN,EAAYnB,EAAQ2B,EAAa1B,GAAcC,EAC/D,CACA,Q"}