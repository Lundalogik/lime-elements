{"version":3,"names":["tableSelectableRowsCss","TableExampleSelectableRows","constructor","hostRef","this","tableData","persons","defaultSelection","columns","title","field","horizontalAlign","onActivateRow","event","activeRow","detail","eventPrinter","writeEvent","onSelect","selection","updateAggregates","onSelectAll","selectAll","clearSelection","resetSelection","aggregates","getNameAggregate","getHeightAggregate","getAgeAggregate","getStaminaAggregate","selected","length","count","value","items","stamina","map","d","Number","parseInt","minStamina","Math","min","maxStamina","max","sumProperty","valueProvider","reduce","s","person","sum","p","age","avg","round","height","render","h","data","selectable","onActivate","pageSize","mode","totalRows","movableColumns","class","style","label","onClick","_a","ref","el"],"sources":["./src/components/table/examples/table-selectable-rows.scss?tag=limel-example-table-selectable-rows&encapsulation=shadow","./src/components/table/examples/table-selectable-rows.tsx"],"sourcesContent":["@use './table.scss';\n","import {\n    Column,\n    ColumnAggregate,\n    LimelTableCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\nimport { persons, Person } from './persons';\n\n/**\n * Selectable rows with updating aggregates\n *\n * @sourceFile persons.ts\n */\n@Component({\n    tag: 'limel-example-table-selectable-rows',\n    styleUrl: 'table-selectable-rows.scss',\n    shadow: true,\n})\nexport class TableExampleSelectableRows {\n    @State()\n    private activeRow: Person;\n    @State()\n    private selection: Person[];\n    @State()\n    private aggregates: ColumnAggregate[];\n\n    private tableData: Person[] = persons;\n    private defaultSelection = [persons[0], persons[2]];\n\n    private columns: Column[] = [\n        {\n            title: 'Name',\n            field: 'name',\n        },\n        {\n            title: 'Age',\n            field: 'age',\n            horizontalAlign: 'right',\n        },\n        { title: 'Kind', field: 'kind' },\n        {\n            title: 'Height',\n            field: 'height',\n            horizontalAlign: 'right',\n        },\n        { title: 'Stamina', field: 'stamina' },\n        { title: 'Place of Birth', field: 'placeOfBirth' },\n        { title: 'Sign', field: 'sign' },\n        { title: 'Date of Birth', field: 'dateOfBirth' },\n        { title: 'Role', field: 'role' },\n    ];\n\n    private eventPrinter: HTMLLimelExampleEventPrinterElement;\n\n    constructor() {\n        this.selection = [...this.defaultSelection];\n        this.updateAggregates();\n    }\n\n    public render() {\n        return [\n            <limel-table\n                data={this.tableData}\n                activeRow={this.activeRow}\n                selectable={true}\n                selection={this.selection}\n                aggregates={this.aggregates}\n                columns={this.columns}\n                onActivate={this.onActivateRow}\n                onSelect={this.onSelect}\n                onSelectAll={this.onSelectAll}\n                pageSize={5}\n                mode=\"local\"\n                totalRows={persons.length}\n                movableColumns={true}\n                class=\"has-interactive-rows\"\n            />,\n            <limel-example-controls\n                style={{ '--example-controls-max-columns-width': '10rem' }}\n            >\n                <limel-button label=\"Select all\" onClick={this.selectAll} />\n                <limel-button\n                    label=\"Clear selection\"\n                    onClick={this.clearSelection}\n                />\n                <limel-button label=\"Reset\" onClick={this.resetSelection} />\n            </limel-example-controls>,\n            <limel-example-value label=\"Active row\" value={this.activeRow} />,\n            <limel-example-value\n                label={`Selected rows: (${this.selection?.length || 0})`}\n                value={this.selection}\n            />,\n            <limel-example-event-printer\n                ref={(el) => (this.eventPrinter = el)}\n            />,\n        ];\n    }\n\n    private onActivateRow = (event: LimelTableCustomEvent<Person>) => {\n        this.activeRow = event.detail;\n        this.eventPrinter.writeEvent(event);\n    };\n\n    private onSelect = (event: LimelTableCustomEvent<Person[]>) => {\n        this.selection = event.detail;\n        this.updateAggregates();\n        this.eventPrinter.writeEvent(event);\n    };\n\n    private onSelectAll = (event: CustomEvent<boolean>) => {\n        this.eventPrinter.writeEvent(event);\n    };\n\n    private selectAll = () => {\n        this.selection = [...this.tableData];\n        this.updateAggregates();\n    };\n\n    private clearSelection = () => {\n        this.selection = [];\n        this.updateAggregates();\n    };\n\n    private resetSelection = () => {\n        this.selection = [...this.defaultSelection];\n        this.updateAggregates();\n    };\n\n    private updateAggregates = () => {\n        this.aggregates = [\n            this.getNameAggregate(),\n            this.getHeightAggregate(),\n            this.getAgeAggregate(),\n            this.getStaminaAggregate(),\n        ];\n    };\n\n    private getNameAggregate = () => {\n        const selected = this.selection.length;\n        const count = this.tableData.length;\n        const value = selected ? `Selected: ${selected}` : `Count: ${count}`;\n\n        return {\n            field: 'name',\n            value: value,\n        };\n    };\n\n    private getStaminaAggregate = () => {\n        const items = this.selection.length ? this.selection : this.tableData;\n        const stamina = items.map((d) => Number.parseInt(d.stamina, 10));\n        const minStamina = Math.min(...stamina);\n        const maxStamina = Math.max(...stamina);\n        let value = `${minStamina}%`;\n        if (minStamina !== maxStamina) {\n            value = `${minStamina}% - ${maxStamina}%`;\n        }\n\n        return {\n            field: 'stamina',\n            value: value,\n        };\n    };\n\n    private sumProperty = (\n        items: Person[],\n        valueProvider: (person: Person) => number,\n    ) => {\n        return items.reduce((s, person) => s + valueProvider(person), 0);\n    };\n\n    private getAgeAggregate = () => {\n        const items = this.selection.length ? this.selection : this.tableData;\n        const sum = this.sumProperty(items, (p) => p.age);\n        const avg = sum / items.length || 0;\n\n        return {\n            field: 'age',\n            value: `Avg: ${Math.round(avg * 100) / 100}`,\n        };\n    };\n\n    private getHeightAggregate = () => {\n        const items = this.selection.length ? this.selection : this.tableData;\n        const sum = this.sumProperty(items, (p) => p.height);\n\n        return {\n            field: 'height',\n            value: `${sum} cm`,\n        };\n    };\n}\n"],"mappings":"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"}