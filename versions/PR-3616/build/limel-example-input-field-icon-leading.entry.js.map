{"version":3,"names":["MIN_LENGTH","InputFieldIconLeadingExample","this","handleChange","event","value","detail","render","h","label","minlength","helperText","leadingIcon","onChange"],"sources":["./src/components/input-field/examples/input-field-icon-leading.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\nconst MIN_LENGTH = 6;\n\n/**\n * Input Field with Leading Icon\n *\n * A leading icon can be used to visually \"decorate\" the input field. The\n * purpose for adding a leading icon should be to help the user understand what\n * the field is for.\n *\n * In this example, we use a map icon in addition to the \"Address\" label, to\n * indicate that this field is meant for a physical address.\n *\n * The example has a minimum length just to show what an invalid field looks\n * like.\n */\n@Component({\n    tag: 'limel-example-input-field-icon-leading',\n    shadow: true,\n})\nexport class InputFieldIconLeadingExample {\n    @State()\n    private value;\n\n    public render() {\n        return (\n            <limel-input-field\n                label=\"Address\"\n                value={this.value}\n                minlength={MIN_LENGTH}\n                helperText={`Please enter at least ${MIN_LENGTH} characters!`}\n                leadingIcon=\"map_marker\"\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    private handleChange = (event) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"+CAEA,MAAMA,EAAa,E,MAmBNC,EAA4B,M,yBAiB7BC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,MAAM,E,qBAdtBC,SACH,OACIC,EAAA,qBACIC,MAAM,UACNJ,MAAOH,KAAKG,MACZK,UAAWV,EACXW,WAAY,yBAAyBX,gBACrCY,YAAY,aACZC,SAAUX,KAAKC,c"}