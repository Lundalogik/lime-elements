{"version":3,"names":["_a","_b","cssClasses","LIST_ITEM_ACTIVATED_CLASS","LIST_ITEM_CLASS","LIST_ITEM_DISABLED_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_TEXT_CLASS","LIST_ITEM_PRIMARY_TEXT_CLASS","ROOT","evolutionClassNameMap","deprecatedClassNameMap","strings","ACTION_EVENT","ARIA_CHECKED","ARIA_CHECKED_CHECKBOX_SELECTOR","ARIA_CHECKED_RADIO_SELECTOR","ARIA_CURRENT","ARIA_DISABLED","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_SELECTED","ARIA_INTERACTIVE_ROLES_SELECTOR","ARIA_MULTI_SELECTABLE_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHECKBOX_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","DEPRECATED_SELECTOR","FOCUSABLE_CHILD_ELEMENTS","RADIO_SELECTOR","SELECTED_ITEM_SELECTOR","numbers","UNSET_INDEX","TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS","evolutionAttribute","KEY","UNKNOWN","BACKSPACE","ENTER","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","DELETE","ESCAPE","TAB","normalizedKeys","Set","add","KEY_CODE","mappedKeyCodes","Map","set","navigationKeys","normalizeKey","evt","key","has","mappedKey","get","keyCode","ELEMENTS_KEY_ALLOWED_IN","preventDefaultEvent","target","tagName","toLowerCase","indexOf","preventDefault","initState","state","bufferClearTimeout","currentFirstChar","sortedIndexCursor","typeaheadBuffer","initSortedIndex","listItemCount","getPrimaryTextByItemIndex","sortedIndexByFirstChar","i","primaryText","trim","firstChar","push","text","index","forEach","values","sort","first","second","matchItem","opts","nextChar","focusItemAtIndex","focusedItemIndex","skipFocus","isItemAtIndexDisabled","clearTimeout","setTimeout","clearBuffer","length","matchFirstChar","matchAllChars","itemsMatchingFirstChar","newIndex","newCursorPosition","cursorPosition","startingItem","lastIndexOf","nextCursorPosition","currentItem","matches","isEnabled","isTypingInProgress","handleKeydown","event","isTargetListItem","isArrowLeft","isArrowUp","isArrowRight","isArrowDown","isHome","isEnd","isEnter","isSpace","ctrlKey","metaKey","isCharacterKey","matchItemOpts","typeaheadOnListItem","isNumberArray","selectedIndex","Array","MDCListFoundation","_super","__extends","adapter","_this","call","this","__assign","defaultAdapter","wrapFocus","isVertical","isSingleSelectionList","useActivatedClass","useSelectedAttr","ariaCurrentAttrValue","isCheckboxList","isRadioList","hasTypeahead","typeaheadState","typeahead.initState","Object","defineProperty","enumerable","configurable","addClassForElementIndex","undefined","getAttributeForElementIndex","getFocusedElementIndex","getListItemCount","hasCheckboxAtIndex","hasRadioAtIndex","isCheckboxCheckedAtIndex","isFocusInsideList","isRootFocused","listItemAtIndexHasClass","notifyAction","removeClassForElementIndex","setAttributeForElementIndex","setCheckedCheckboxOrRadioAtIndex","setTabIndexForListItemChildren","getPrimaryTextAtIndex","prototype","layout","maybeInitializeSingleSelection","typeaheadInitSortedIndex","getFocusedItemIndex","setWrapFocus","value","setVerticalOrientation","setSingleSelection","getSelectedIndexFromDOM","selectedItemIndex","hasActivatedClass","setUseActivatedClass","listItemsCount","hasSelectedClass","setHasTypeahead","isTypeaheadInProgress","typeahead.isTypingInProgress","useActivated","setUseSelectedAttribute","useSelected","getSelectedIndex","setSelectedIndex","forceUpdate","isIndexValid","setCheckboxAtIndex","setRadioAtIndex","setSingleSelectionAtIndex","handleFocusIn","listItemIndex","handleFocusOut","setTabindexToFirstSelectedOrFocusedItem","isRootListItem","isLetterA","focusLastElement","focusFirstElement","handleKeydownOpts","typeahead.handleKeydown","currentIndex","focusNextElement","focusPrevElement","toggleAll","isSelectableList","setSelectedIndexOnAction","handleClick","toggleCheckbox","count","nextIndex","prevIndex","lastIndex","focusInitialElement","initialIndex","getFirstSelectedOrFocusedItemIndex","setEnabled","itemIndex","selectedClassName","setAriaForSingleSelectionAtIndex","setTabindexAtIndex","isAriaCurrent","ariaAttribute","ariaAttributeValue","getSelectionAttribute","selectionAttribute","isChecked","targetIndex","Math","max","reduce","minIndex","min","Error","some","isIndexInRange","listSize","toggleCheckboxAtIndex","selectedIndexes","slice","filter","currentlySelectedIndexes","allIndexes","typeaheadMatchItem","startingIndex","typeahead.matchItem","typeahead.initSortedIndex","clearTypeaheadBuffer","typeahead.clearBuffer","MDCFoundation","MDCList","apply","arguments","foundation","from","root","querySelectorAll","classNameMap","attachTo","initialSyncWithDOM","isEvolutionEnabled","dataset","obj","className","handleClickEvent","bind","handleKeydownEvent","focusInEventListener","handleFocusInEvent","focusOutEventListener","handleFocusOutEvent","listen","initializeListType","ensureFocusable","destroy","unlisten","direction","getAttribute","vertical","itemSelector","childSelector","itemEls","el","setAttribute","focusableChildEls","getPrimaryText","item","querySelector","textContent","singleLineText","isInteractive","selection","listItem","listElements","checkboxListItems","radioSelectedListItem","preselectedItems","getDefaultFoundation","element","classList","focus","attr","document","activeElement","toggleEl","checked","contains","emit","remove","createEvent","initEvent","dispatchEvent","tabIndexValue","selector","initialFocusIndex","tabIndex","getListItemIndex","nearestParent","closest","MDCComponent"],"sources":["./node_modules/@material/list/constants.js","./node_modules/@material/dom/keyboard.js","./node_modules/@material/list/events.js","./node_modules/@material/list/typeahead.js","./node_modules/@material/list/foundation.js","./node_modules/@material/list/component.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar _a, _b;\nvar cssClasses = {\n    LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n    LIST_ITEM_CLASS: 'mdc-list-item',\n    LIST_ITEM_DISABLED_CLASS: 'mdc-list-item--disabled',\n    LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n    LIST_ITEM_TEXT_CLASS: 'mdc-list-item__text',\n    LIST_ITEM_PRIMARY_TEXT_CLASS: 'mdc-list-item__primary-text',\n    ROOT: 'mdc-list',\n};\nvar evolutionClassNameMap = (_a = {},\n    _a[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-list-item--activated',\n    _a[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-list-item',\n    _a[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-list-item--disabled',\n    _a[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-list-item--selected',\n    _a[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-list-item__primary-text',\n    _a[\"\" + cssClasses.ROOT] = 'mdc-list',\n    _a);\nvar deprecatedClassNameMap = (_b = {},\n    _b[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-deprecated-list-item--activated',\n    _b[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-deprecated-list-item',\n    _b[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-deprecated-list-item--disabled',\n    _b[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-deprecated-list-item--selected',\n    _b[\"\" + cssClasses.LIST_ITEM_TEXT_CLASS] = 'mdc-deprecated-list-item__text',\n    _b[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-deprecated-list-item__primary-text',\n    _b[\"\" + cssClasses.ROOT] = 'mdc-deprecated-list',\n    _b);\nvar strings = {\n    ACTION_EVENT: 'MDCList:action',\n    ARIA_CHECKED: 'aria-checked',\n    ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n    ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n    ARIA_CURRENT: 'aria-current',\n    ARIA_DISABLED: 'aria-disabled',\n    ARIA_ORIENTATION: 'aria-orientation',\n    ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n    ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n    ARIA_SELECTED: 'aria-selected',\n    ARIA_INTERACTIVE_ROLES_SELECTOR: '[role=\"listbox\"], [role=\"menu\"]',\n    ARIA_MULTI_SELECTABLE_SELECTOR: '[aria-multiselectable=\"true\"]',\n    CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n    CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a\\n  \",\n    DEPRECATED_SELECTOR: '.mdc-deprecated-list',\n    FOCUSABLE_CHILD_ELEMENTS: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"checkbox\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"checkbox\\\"]:not(:disabled)\\n  \",\n    RADIO_SELECTOR: 'input[type=\"radio\"]',\n    SELECTED_ITEM_SELECTOR: '[aria-selected=\"true\"], [aria-current=\"true\"]',\n};\nvar numbers = {\n    UNSET_INDEX: -1,\n    TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS: 300\n};\nvar evolutionAttribute = 'evolution';\nexport { strings, cssClasses, numbers, deprecatedClassNameMap, evolutionAttribute, evolutionClassNameMap };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * KEY provides normalized string values for keys.\n */\nexport var KEY = {\n    UNKNOWN: 'Unknown',\n    BACKSPACE: 'Backspace',\n    ENTER: 'Enter',\n    SPACEBAR: 'Spacebar',\n    PAGE_UP: 'PageUp',\n    PAGE_DOWN: 'PageDown',\n    END: 'End',\n    HOME: 'Home',\n    ARROW_LEFT: 'ArrowLeft',\n    ARROW_UP: 'ArrowUp',\n    ARROW_RIGHT: 'ArrowRight',\n    ARROW_DOWN: 'ArrowDown',\n    DELETE: 'Delete',\n    ESCAPE: 'Escape',\n    TAB: 'Tab',\n};\nvar normalizedKeys = new Set();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nnormalizedKeys.add(KEY.BACKSPACE);\nnormalizedKeys.add(KEY.ENTER);\nnormalizedKeys.add(KEY.SPACEBAR);\nnormalizedKeys.add(KEY.PAGE_UP);\nnormalizedKeys.add(KEY.PAGE_DOWN);\nnormalizedKeys.add(KEY.END);\nnormalizedKeys.add(KEY.HOME);\nnormalizedKeys.add(KEY.ARROW_LEFT);\nnormalizedKeys.add(KEY.ARROW_UP);\nnormalizedKeys.add(KEY.ARROW_RIGHT);\nnormalizedKeys.add(KEY.ARROW_DOWN);\nnormalizedKeys.add(KEY.DELETE);\nnormalizedKeys.add(KEY.ESCAPE);\nnormalizedKeys.add(KEY.TAB);\nvar KEY_CODE = {\n    BACKSPACE: 8,\n    ENTER: 13,\n    SPACEBAR: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    END: 35,\n    HOME: 36,\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    DELETE: 46,\n    ESCAPE: 27,\n    TAB: 9,\n};\nvar mappedKeyCodes = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nmappedKeyCodes.set(KEY_CODE.BACKSPACE, KEY.BACKSPACE);\nmappedKeyCodes.set(KEY_CODE.ENTER, KEY.ENTER);\nmappedKeyCodes.set(KEY_CODE.SPACEBAR, KEY.SPACEBAR);\nmappedKeyCodes.set(KEY_CODE.PAGE_UP, KEY.PAGE_UP);\nmappedKeyCodes.set(KEY_CODE.PAGE_DOWN, KEY.PAGE_DOWN);\nmappedKeyCodes.set(KEY_CODE.END, KEY.END);\nmappedKeyCodes.set(KEY_CODE.HOME, KEY.HOME);\nmappedKeyCodes.set(KEY_CODE.ARROW_LEFT, KEY.ARROW_LEFT);\nmappedKeyCodes.set(KEY_CODE.ARROW_UP, KEY.ARROW_UP);\nmappedKeyCodes.set(KEY_CODE.ARROW_RIGHT, KEY.ARROW_RIGHT);\nmappedKeyCodes.set(KEY_CODE.ARROW_DOWN, KEY.ARROW_DOWN);\nmappedKeyCodes.set(KEY_CODE.DELETE, KEY.DELETE);\nmappedKeyCodes.set(KEY_CODE.ESCAPE, KEY.ESCAPE);\nmappedKeyCodes.set(KEY_CODE.TAB, KEY.TAB);\nvar navigationKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this\n// by hand.\nnavigationKeys.add(KEY.PAGE_UP);\nnavigationKeys.add(KEY.PAGE_DOWN);\nnavigationKeys.add(KEY.END);\nnavigationKeys.add(KEY.HOME);\nnavigationKeys.add(KEY.ARROW_LEFT);\nnavigationKeys.add(KEY.ARROW_UP);\nnavigationKeys.add(KEY.ARROW_RIGHT);\nnavigationKeys.add(KEY.ARROW_DOWN);\n/**\n * normalizeKey returns the normalized string for a navigational action.\n */\nexport function normalizeKey(evt) {\n    var key = evt.key;\n    // If the event already has a normalized key, return it\n    if (normalizedKeys.has(key)) {\n        return key;\n    }\n    // tslint:disable-next-line:deprecation\n    var mappedKey = mappedKeyCodes.get(evt.keyCode);\n    if (mappedKey) {\n        return mappedKey;\n    }\n    return KEY.UNKNOWN;\n}\n/**\n * isNavigationEvent returns whether the event is a navigation event\n */\nexport function isNavigationEvent(evt) {\n    return navigationKeys.has(normalizeKey(evt));\n}\n//# sourceMappingURL=keyboard.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n/**\n * Ensures that preventDefault is only called if the containing element\n * doesn't consume the event, and it will cause an unintended scroll.\n *\n * @param evt keyboard event to be prevented.\n */\nexport var preventDefaultEvent = function (evt) {\n    var target = evt.target;\n    if (!target) {\n        return;\n    }\n    var tagName = (\"\" + target.tagName).toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n        evt.preventDefault();\n    }\n};\n//# sourceMappingURL=events.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { normalizeKey } from '@material/dom/keyboard';\nimport { numbers } from './constants';\nimport { preventDefaultEvent } from './events';\n/**\n * Initializes a state object for typeahead. Use the same reference for calls to\n * typeahead functions.\n *\n * @return The current state of the typeahead process. Each state reference\n *     represents a typeahead instance as the reference is typically mutated\n *     in-place.\n */\nexport function initState() {\n    var state = {\n        bufferClearTimeout: 0,\n        currentFirstChar: '',\n        sortedIndexCursor: 0,\n        typeaheadBuffer: '',\n    };\n    return state;\n}\n/**\n * Initializes typeahead state by indexing the current list items by primary\n * text into the sortedIndexByFirstChar data structure.\n *\n * @param listItemCount numer of items in the list\n * @param getPrimaryTextByItemIndex function that returns the primary text at a\n *     given index\n *\n * @return Map that maps the first character of the primary text to the full\n *     list text and it's index\n */\nexport function initSortedIndex(listItemCount, getPrimaryTextByItemIndex) {\n    var sortedIndexByFirstChar = new Map();\n    // Aggregate item text to index mapping\n    for (var i = 0; i < listItemCount; i++) {\n        var primaryText = getPrimaryTextByItemIndex(i).trim();\n        if (!primaryText) {\n            continue;\n        }\n        var firstChar = primaryText[0].toLowerCase();\n        if (!sortedIndexByFirstChar.has(firstChar)) {\n            sortedIndexByFirstChar.set(firstChar, []);\n        }\n        sortedIndexByFirstChar.get(firstChar).push({ text: primaryText.toLowerCase(), index: i });\n    }\n    // Sort the mapping\n    // TODO(b/157162694): Investigate replacing forEach with Map.values()\n    sortedIndexByFirstChar.forEach(function (values) {\n        values.sort(function (first, second) {\n            return first.index - second.index;\n        });\n    });\n    return sortedIndexByFirstChar;\n}\n/**\n * Given the next desired character from the user, it attempts to find the next\n * list option matching the buffer. Wraps around if at the end of options.\n *\n * @param opts Options and accessors\n *   - nextChar - the next character to match against items\n *   - sortedIndexByFirstChar - output of `initSortedIndex(...)`\n *   - focusedItemIndex - the index of the currently focused item\n *   - focusItemAtIndex - function that focuses a list item at given index\n *   - skipFocus - whether or not to focus the matched item\n *   - isItemAtIndexDisabled - function that determines whether an item at a\n *        given index is disabled\n * @param state The typeahead state instance. See `initState`.\n *\n * @return The index of the matched item, or -1 if no match.\n */\nexport function matchItem(opts, state) {\n    var nextChar = opts.nextChar, focusItemAtIndex = opts.focusItemAtIndex, sortedIndexByFirstChar = opts.sortedIndexByFirstChar, focusedItemIndex = opts.focusedItemIndex, skipFocus = opts.skipFocus, isItemAtIndexDisabled = opts.isItemAtIndexDisabled;\n    clearTimeout(state.bufferClearTimeout);\n    state.bufferClearTimeout = setTimeout(function () {\n        clearBuffer(state);\n    }, numbers.TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS);\n    state.typeaheadBuffer = state.typeaheadBuffer + nextChar;\n    var index;\n    if (state.typeaheadBuffer.length === 1) {\n        index = matchFirstChar(sortedIndexByFirstChar, focusedItemIndex, isItemAtIndexDisabled, state);\n    }\n    else {\n        index = matchAllChars(sortedIndexByFirstChar, isItemAtIndexDisabled, state);\n    }\n    if (index !== -1 && !skipFocus) {\n        focusItemAtIndex(index);\n    }\n    return index;\n}\n/**\n * Matches the user's single input character in the buffer to the\n * next option that begins with such character. Wraps around if at\n * end of options. Returns -1 if no match is found.\n */\nfunction matchFirstChar(sortedIndexByFirstChar, focusedItemIndex, isItemAtIndexDisabled, state) {\n    var firstChar = state.typeaheadBuffer[0];\n    var itemsMatchingFirstChar = sortedIndexByFirstChar.get(firstChar);\n    if (!itemsMatchingFirstChar) {\n        return -1;\n    }\n    // Has the same firstChar been recently matched?\n    // Also, did starting index remain the same between key presses?\n    // If both hold true, simply increment index.\n    if (firstChar === state.currentFirstChar &&\n        itemsMatchingFirstChar[state.sortedIndexCursor].index ===\n            focusedItemIndex) {\n        state.sortedIndexCursor =\n            (state.sortedIndexCursor + 1) % itemsMatchingFirstChar.length;\n        var newIndex = itemsMatchingFirstChar[state.sortedIndexCursor].index;\n        if (!isItemAtIndexDisabled(newIndex)) {\n            return newIndex;\n        }\n    }\n    // If we're here, it means one of the following happened:\n    // - either firstChar or startingIndex has changed, invalidating the\n    // cursor.\n    // - The next item of typeahead is disabled, so we have to look further.\n    state.currentFirstChar = firstChar;\n    var newCursorPosition = -1;\n    var cursorPosition;\n    // Find the first non-disabled item as a fallback.\n    for (cursorPosition = 0; cursorPosition < itemsMatchingFirstChar.length; cursorPosition++) {\n        if (!isItemAtIndexDisabled(itemsMatchingFirstChar[cursorPosition].index)) {\n            newCursorPosition = cursorPosition;\n            break;\n        }\n    }\n    // Advance cursor to first item matching the firstChar that is positioned\n    // after starting item. Cursor is unchanged from fallback if there's no\n    // such item.\n    for (; cursorPosition < itemsMatchingFirstChar.length; cursorPosition++) {\n        if (itemsMatchingFirstChar[cursorPosition].index > focusedItemIndex &&\n            !isItemAtIndexDisabled(itemsMatchingFirstChar[cursorPosition].index)) {\n            newCursorPosition = cursorPosition;\n            break;\n        }\n    }\n    if (newCursorPosition !== -1) {\n        state.sortedIndexCursor = newCursorPosition;\n        return itemsMatchingFirstChar[state.sortedIndexCursor].index;\n    }\n    return -1;\n}\n/**\n * Attempts to find the next item that matches all of the typeahead buffer.\n * Wraps around if at end of options. Returns -1 if no match is found.\n */\nfunction matchAllChars(sortedIndexByFirstChar, isItemAtIndexDisabled, state) {\n    var firstChar = state.typeaheadBuffer[0];\n    var itemsMatchingFirstChar = sortedIndexByFirstChar.get(firstChar);\n    if (!itemsMatchingFirstChar) {\n        return -1;\n    }\n    // Do nothing if text already matches\n    var startingItem = itemsMatchingFirstChar[state.sortedIndexCursor];\n    if (startingItem.text.lastIndexOf(state.typeaheadBuffer, 0) === 0 &&\n        !isItemAtIndexDisabled(startingItem.index)) {\n        return startingItem.index;\n    }\n    // Find next item that matches completely; if no match, we'll eventually\n    // loop around to same position\n    var cursorPosition = (state.sortedIndexCursor + 1) % itemsMatchingFirstChar.length;\n    var nextCursorPosition = -1;\n    while (cursorPosition !== state.sortedIndexCursor) {\n        var currentItem = itemsMatchingFirstChar[cursorPosition];\n        var matches = currentItem.text.lastIndexOf(state.typeaheadBuffer, 0) === 0;\n        var isEnabled = !isItemAtIndexDisabled(currentItem.index);\n        if (matches && isEnabled) {\n            nextCursorPosition = cursorPosition;\n            break;\n        }\n        cursorPosition = (cursorPosition + 1) % itemsMatchingFirstChar.length;\n    }\n    if (nextCursorPosition !== -1) {\n        state.sortedIndexCursor = nextCursorPosition;\n        return itemsMatchingFirstChar[state.sortedIndexCursor].index;\n    }\n    return -1;\n}\n/**\n * Whether or not the given typeahead instaance state is currently typing.\n *\n * @param state The typeahead state instance. See `initState`.\n */\nexport function isTypingInProgress(state) {\n    return state.typeaheadBuffer.length > 0;\n}\n/**\n * Clears the typeahaed buffer so that it resets item matching to the first\n * character.\n *\n * @param state The typeahead state instance. See `initState`.\n */\nexport function clearBuffer(state) {\n    state.typeaheadBuffer = '';\n}\n/**\n * Given a keydown event, it calculates whether or not to automatically focus a\n * list item depending on what was typed mimicing the typeahead functionality of\n * a standard <select> element that is open.\n *\n * @param opts Options and accessors\n *   - event - the KeyboardEvent to handle and parse\n *   - sortedIndexByFirstChar - output of `initSortedIndex(...)`\n *   - focusedItemIndex - the index of the currently focused item\n *   - focusItemAtIndex - function that focuses a list item at given index\n *   - isItemAtFocusedIndexDisabled - whether or not the currently focused item\n *      is disabled\n *   - isTargetListItem - whether or not the event target is a list item\n * @param state The typeahead state instance. See `initState`.\n *\n * @returns index of the item matched by the keydown. -1 if not matched.\n */\nexport function handleKeydown(opts, state) {\n    var event = opts.event, isTargetListItem = opts.isTargetListItem, focusedItemIndex = opts.focusedItemIndex, focusItemAtIndex = opts.focusItemAtIndex, sortedIndexByFirstChar = opts.sortedIndexByFirstChar, isItemAtIndexDisabled = opts.isItemAtIndexDisabled;\n    var isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n    var isArrowUp = normalizeKey(event) === 'ArrowUp';\n    var isArrowRight = normalizeKey(event) === 'ArrowRight';\n    var isArrowDown = normalizeKey(event) === 'ArrowDown';\n    var isHome = normalizeKey(event) === 'Home';\n    var isEnd = normalizeKey(event) === 'End';\n    var isEnter = normalizeKey(event) === 'Enter';\n    var isSpace = normalizeKey(event) === 'Spacebar';\n    if (event.ctrlKey || event.metaKey || isArrowLeft || isArrowUp ||\n        isArrowRight || isArrowDown || isHome || isEnd || isEnter) {\n        return -1;\n    }\n    var isCharacterKey = !isSpace && event.key.length === 1;\n    if (isCharacterKey) {\n        preventDefaultEvent(event);\n        var matchItemOpts = {\n            focusItemAtIndex: focusItemAtIndex,\n            focusedItemIndex: focusedItemIndex,\n            nextChar: event.key.toLowerCase(),\n            sortedIndexByFirstChar: sortedIndexByFirstChar,\n            skipFocus: false,\n            isItemAtIndexDisabled: isItemAtIndexDisabled,\n        };\n        return matchItem(matchItemOpts, state);\n    }\n    if (!isSpace) {\n        return -1;\n    }\n    if (isTargetListItem) {\n        preventDefaultEvent(event);\n    }\n    var typeaheadOnListItem = isTargetListItem && isTypingInProgress(state);\n    if (typeaheadOnListItem) {\n        var matchItemOpts = {\n            focusItemAtIndex: focusItemAtIndex,\n            focusedItemIndex: focusedItemIndex,\n            nextChar: ' ',\n            sortedIndexByFirstChar: sortedIndexByFirstChar,\n            skipFocus: false,\n            isItemAtIndexDisabled: isItemAtIndexDisabled,\n        };\n        // space participates in typeahead matching if in rapid typing mode\n        return matchItem(matchItemOpts, state);\n    }\n    return -1;\n}\n//# sourceMappingURL=typeahead.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { normalizeKey } from '@material/dom/keyboard';\nimport { cssClasses, numbers, strings } from './constants';\nimport { preventDefaultEvent } from './events';\nimport * as typeahead from './typeahead';\nfunction isNumberArray(selectedIndex) {\n    return selectedIndex instanceof Array;\n}\nvar MDCListFoundation = /** @class */ (function (_super) {\n    __extends(MDCListFoundation, _super);\n    function MDCListFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCListFoundation.defaultAdapter), adapter)) || this;\n        _this.wrapFocus = false;\n        _this.isVertical = true;\n        _this.isSingleSelectionList = false;\n        _this.selectedIndex = numbers.UNSET_INDEX;\n        _this.focusedItemIndex = numbers.UNSET_INDEX;\n        _this.useActivatedClass = false;\n        _this.useSelectedAttr = false;\n        _this.ariaCurrentAttrValue = null;\n        _this.isCheckboxList = false;\n        _this.isRadioList = false;\n        _this.hasTypeahead = false;\n        // Transiently holds current typeahead prefix from user.\n        _this.typeaheadState = typeahead.initState();\n        _this.sortedIndexByFirstChar = new Map();\n        return _this;\n    }\n    Object.defineProperty(MDCListFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClassForElementIndex: function () { return undefined; },\n                focusItemAtIndex: function () { return undefined; },\n                getAttributeForElementIndex: function () { return null; },\n                getFocusedElementIndex: function () { return 0; },\n                getListItemCount: function () { return 0; },\n                hasCheckboxAtIndex: function () { return false; },\n                hasRadioAtIndex: function () { return false; },\n                isCheckboxCheckedAtIndex: function () { return false; },\n                isFocusInsideList: function () { return false; },\n                isRootFocused: function () { return false; },\n                listItemAtIndexHasClass: function () { return false; },\n                notifyAction: function () { return undefined; },\n                removeClassForElementIndex: function () { return undefined; },\n                setAttributeForElementIndex: function () { return undefined; },\n                setCheckedCheckboxOrRadioAtIndex: function () { return undefined; },\n                setTabIndexForListItemChildren: function () { return undefined; },\n                getPrimaryTextAtIndex: function () { return ''; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCListFoundation.prototype.layout = function () {\n        if (this.adapter.getListItemCount() === 0) {\n            return;\n        }\n        // TODO(b/172274142): consider all items when determining the list's type.\n        if (this.adapter.hasCheckboxAtIndex(0)) {\n            this.isCheckboxList = true;\n        }\n        else if (this.adapter.hasRadioAtIndex(0)) {\n            this.isRadioList = true;\n        }\n        else {\n            this.maybeInitializeSingleSelection();\n        }\n        if (this.hasTypeahead) {\n            this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex();\n        }\n    };\n    /** Returns the index of the item that was last focused. */\n    MDCListFoundation.prototype.getFocusedItemIndex = function () {\n        return this.focusedItemIndex;\n    };\n    /** Toggles focus wrapping with keyboard navigation. */\n    MDCListFoundation.prototype.setWrapFocus = function (value) {\n        this.wrapFocus = value;\n    };\n    /**\n     * Toggles orientation direction for keyboard navigation (true for vertical,\n     * false for horizontal).\n     */\n    MDCListFoundation.prototype.setVerticalOrientation = function (value) {\n        this.isVertical = value;\n    };\n    /** Toggles single-selection behavior. */\n    MDCListFoundation.prototype.setSingleSelection = function (value) {\n        this.isSingleSelectionList = value;\n        if (value) {\n            this.maybeInitializeSingleSelection();\n            this.selectedIndex = this.getSelectedIndexFromDOM();\n        }\n    };\n    /**\n     * Automatically determines whether the list is single selection list. If so,\n     * initializes the internal state to match the selected item.\n     */\n    MDCListFoundation.prototype.maybeInitializeSingleSelection = function () {\n        var selectedItemIndex = this.getSelectedIndexFromDOM();\n        if (selectedItemIndex === numbers.UNSET_INDEX)\n            return;\n        var hasActivatedClass = this.adapter.listItemAtIndexHasClass(selectedItemIndex, cssClasses.LIST_ITEM_ACTIVATED_CLASS);\n        if (hasActivatedClass) {\n            this.setUseActivatedClass(true);\n        }\n        this.isSingleSelectionList = true;\n        this.selectedIndex = selectedItemIndex;\n    };\n    /** @return Index of the first selected item based on the DOM state. */\n    MDCListFoundation.prototype.getSelectedIndexFromDOM = function () {\n        var selectedIndex = numbers.UNSET_INDEX;\n        var listItemsCount = this.adapter.getListItemCount();\n        for (var i = 0; i < listItemsCount; i++) {\n            var hasSelectedClass = this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_SELECTED_CLASS);\n            var hasActivatedClass = this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_ACTIVATED_CLASS);\n            if (!(hasSelectedClass || hasActivatedClass)) {\n                continue;\n            }\n            selectedIndex = i;\n            break;\n        }\n        return selectedIndex;\n    };\n    /**\n     * Sets whether typeahead is enabled on the list.\n     * @param hasTypeahead Whether typeahead is enabled.\n     */\n    MDCListFoundation.prototype.setHasTypeahead = function (hasTypeahead) {\n        this.hasTypeahead = hasTypeahead;\n        if (hasTypeahead) {\n            this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex();\n        }\n    };\n    /**\n     * @return Whether typeahead is currently matching a user-specified prefix.\n     */\n    MDCListFoundation.prototype.isTypeaheadInProgress = function () {\n        return this.hasTypeahead &&\n            typeahead.isTypingInProgress(this.typeaheadState);\n    };\n    /** Toggle use of the \"activated\" CSS class. */\n    MDCListFoundation.prototype.setUseActivatedClass = function (useActivated) {\n        this.useActivatedClass = useActivated;\n    };\n    /**\n     * Toggles use of the selected attribute (true for aria-selected, false for\n     * aria-checked).\n     */\n    MDCListFoundation.prototype.setUseSelectedAttribute = function (useSelected) {\n        this.useSelectedAttr = useSelected;\n    };\n    MDCListFoundation.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    MDCListFoundation.prototype.setSelectedIndex = function (index, _a) {\n        var _b = _a === void 0 ? {} : _a, forceUpdate = _b.forceUpdate;\n        if (!this.isIndexValid(index)) {\n            return;\n        }\n        if (this.isCheckboxList) {\n            this.setCheckboxAtIndex(index);\n        }\n        else if (this.isRadioList) {\n            this.setRadioAtIndex(index);\n        }\n        else {\n            this.setSingleSelectionAtIndex(index, { forceUpdate: forceUpdate });\n        }\n    };\n    /**\n     * Focus in handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusIn = function (listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.focusedItemIndex = listItemIndex;\n            this.adapter.setAttributeForElementIndex(listItemIndex, 'tabindex', '0');\n            this.adapter.setTabIndexForListItemChildren(listItemIndex, '0');\n        }\n    };\n    /**\n     * Focus out handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusOut = function (listItemIndex) {\n        var _this = this;\n        if (listItemIndex >= 0) {\n            this.adapter.setAttributeForElementIndex(listItemIndex, 'tabindex', '-1');\n            this.adapter.setTabIndexForListItemChildren(listItemIndex, '-1');\n        }\n        /**\n         * Between Focusout & Focusin some browsers do not have focus on any\n         * element. Setting a delay to wait till the focus is moved to next element.\n         */\n        setTimeout(function () {\n            if (!_this.adapter.isFocusInsideList()) {\n                _this.setTabindexToFirstSelectedOrFocusedItem();\n            }\n        }, 0);\n    };\n    /**\n     * Key handler for the list.\n     */\n    MDCListFoundation.prototype.handleKeydown = function (event, isRootListItem, listItemIndex) {\n        var _this = this;\n        var isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n        var isArrowUp = normalizeKey(event) === 'ArrowUp';\n        var isArrowRight = normalizeKey(event) === 'ArrowRight';\n        var isArrowDown = normalizeKey(event) === 'ArrowDown';\n        var isHome = normalizeKey(event) === 'Home';\n        var isEnd = normalizeKey(event) === 'End';\n        var isEnter = normalizeKey(event) === 'Enter';\n        var isSpace = normalizeKey(event) === 'Spacebar';\n        // Have to check both upper and lower case, because having caps lock on\n        // affects the value.\n        var isLetterA = event.key === 'A' || event.key === 'a';\n        if (this.adapter.isRootFocused()) {\n            if (isArrowUp || isEnd) {\n                event.preventDefault();\n                this.focusLastElement();\n            }\n            else if (isArrowDown || isHome) {\n                event.preventDefault();\n                this.focusFirstElement();\n            }\n            if (this.hasTypeahead) {\n                var handleKeydownOpts = {\n                    event: event,\n                    focusItemAtIndex: function (index) {\n                        _this.focusItemAtIndex(index);\n                    },\n                    focusedItemIndex: -1,\n                    isTargetListItem: isRootListItem,\n                    sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n                    isItemAtIndexDisabled: function (index) {\n                        return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS);\n                    },\n                };\n                typeahead.handleKeydown(handleKeydownOpts, this.typeaheadState);\n            }\n            return;\n        }\n        var currentIndex = this.adapter.getFocusedElementIndex();\n        if (currentIndex === -1) {\n            currentIndex = listItemIndex;\n            if (currentIndex < 0) {\n                // If this event doesn't have a mdc-list-item ancestor from the\n                // current list (not from a sublist), return early.\n                return;\n            }\n        }\n        if ((this.isVertical && isArrowDown) ||\n            (!this.isVertical && isArrowRight)) {\n            preventDefaultEvent(event);\n            this.focusNextElement(currentIndex);\n        }\n        else if ((this.isVertical && isArrowUp) || (!this.isVertical && isArrowLeft)) {\n            preventDefaultEvent(event);\n            this.focusPrevElement(currentIndex);\n        }\n        else if (isHome) {\n            preventDefaultEvent(event);\n            this.focusFirstElement();\n        }\n        else if (isEnd) {\n            preventDefaultEvent(event);\n            this.focusLastElement();\n        }\n        else if (isLetterA && event.ctrlKey && this.isCheckboxList) {\n            event.preventDefault();\n            this.toggleAll(this.selectedIndex === numbers.UNSET_INDEX ?\n                [] :\n                this.selectedIndex);\n        }\n        else if (isEnter || isSpace) {\n            if (isRootListItem) {\n                // Return early if enter key is pressed on anchor element which triggers\n                // synthetic MouseEvent event.\n                var target = event.target;\n                if (target && target.tagName === 'A' && isEnter) {\n                    return;\n                }\n                preventDefaultEvent(event);\n                if (this.adapter.listItemAtIndexHasClass(currentIndex, cssClasses.LIST_ITEM_DISABLED_CLASS)) {\n                    return;\n                }\n                if (!this.isTypeaheadInProgress()) {\n                    if (this.isSelectableList()) {\n                        this.setSelectedIndexOnAction(currentIndex);\n                    }\n                    this.adapter.notifyAction(currentIndex);\n                }\n            }\n        }\n        if (this.hasTypeahead) {\n            var handleKeydownOpts = {\n                event: event,\n                focusItemAtIndex: function (index) {\n                    _this.focusItemAtIndex(index);\n                },\n                focusedItemIndex: this.focusedItemIndex,\n                isTargetListItem: isRootListItem,\n                sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n                isItemAtIndexDisabled: function (index) { return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS); },\n            };\n            typeahead.handleKeydown(handleKeydownOpts, this.typeaheadState);\n        }\n    };\n    /**\n     * Click handler for the list.\n     */\n    MDCListFoundation.prototype.handleClick = function (index, toggleCheckbox) {\n        if (index === numbers.UNSET_INDEX) {\n            return;\n        }\n        if (this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS)) {\n            return;\n        }\n        if (this.isSelectableList()) {\n            this.setSelectedIndexOnAction(index, toggleCheckbox);\n        }\n        this.adapter.notifyAction(index);\n    };\n    /**\n     * Focuses the next element on the list.\n     */\n    MDCListFoundation.prototype.focusNextElement = function (index) {\n        var count = this.adapter.getListItemCount();\n        var nextIndex = index + 1;\n        if (nextIndex >= count) {\n            if (this.wrapFocus) {\n                nextIndex = 0;\n            }\n            else {\n                // Return early because last item is already focused.\n                return index;\n            }\n        }\n        this.focusItemAtIndex(nextIndex);\n        return nextIndex;\n    };\n    /**\n     * Focuses the previous element on the list.\n     */\n    MDCListFoundation.prototype.focusPrevElement = function (index) {\n        var prevIndex = index - 1;\n        if (prevIndex < 0) {\n            if (this.wrapFocus) {\n                prevIndex = this.adapter.getListItemCount() - 1;\n            }\n            else {\n                // Return early because first item is already focused.\n                return index;\n            }\n        }\n        this.focusItemAtIndex(prevIndex);\n        return prevIndex;\n    };\n    MDCListFoundation.prototype.focusFirstElement = function () {\n        this.focusItemAtIndex(0);\n        return 0;\n    };\n    MDCListFoundation.prototype.focusLastElement = function () {\n        var lastIndex = this.adapter.getListItemCount() - 1;\n        this.focusItemAtIndex(lastIndex);\n        return lastIndex;\n    };\n    MDCListFoundation.prototype.focusInitialElement = function () {\n        var initialIndex = this.getFirstSelectedOrFocusedItemIndex();\n        this.focusItemAtIndex(initialIndex);\n        return initialIndex;\n    };\n    /**\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    MDCListFoundation.prototype.setEnabled = function (itemIndex, isEnabled) {\n        if (!this.isIndexValid(itemIndex)) {\n            return;\n        }\n        if (isEnabled) {\n            this.adapter.removeClassForElementIndex(itemIndex, cssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.setAttributeForElementIndex(itemIndex, strings.ARIA_DISABLED, 'false');\n        }\n        else {\n            this.adapter.addClassForElementIndex(itemIndex, cssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.setAttributeForElementIndex(itemIndex, strings.ARIA_DISABLED, 'true');\n        }\n    };\n    MDCListFoundation.prototype.setSingleSelectionAtIndex = function (index, _a) {\n        var _b = _a === void 0 ? {} : _a, forceUpdate = _b.forceUpdate;\n        if (this.selectedIndex === index && !forceUpdate) {\n            return;\n        }\n        var selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n        if (this.useActivatedClass) {\n            selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n        }\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.removeClassForElementIndex(this.selectedIndex, selectedClassName);\n        }\n        this.setAriaForSingleSelectionAtIndex(index);\n        this.setTabindexAtIndex(index);\n        if (index !== numbers.UNSET_INDEX) {\n            this.adapter.addClassForElementIndex(index, selectedClassName);\n        }\n        this.selectedIndex = index;\n    };\n    /**\n     * Sets aria attribute for single selection at given index.\n     */\n    MDCListFoundation.prototype.setAriaForSingleSelectionAtIndex = function (index) {\n        // Detect the presence of aria-current and get the value only during list\n        // initialization when it is in unset state.\n        if (this.selectedIndex === numbers.UNSET_INDEX) {\n            this.ariaCurrentAttrValue =\n                this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n        }\n        var isAriaCurrent = this.ariaCurrentAttrValue !== null;\n        var ariaAttribute = isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, ariaAttribute, 'false');\n        }\n        if (index !== numbers.UNSET_INDEX) {\n            var ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue : 'true';\n            this.adapter.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);\n        }\n    };\n    /**\n     * Returns the attribute to use for indicating selection status.\n     */\n    MDCListFoundation.prototype.getSelectionAttribute = function () {\n        return this.useSelectedAttr ? strings.ARIA_SELECTED : strings.ARIA_CHECKED;\n    };\n    /**\n     * Toggles radio at give index. Radio doesn't change the checked state if it\n     * is already checked.\n     */\n    MDCListFoundation.prototype.setRadioAtIndex = function (index) {\n        var selectionAttribute = this.getSelectionAttribute();\n        this.adapter.setCheckedCheckboxOrRadioAtIndex(index, true);\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, selectionAttribute, 'false');\n        }\n        this.adapter.setAttributeForElementIndex(index, selectionAttribute, 'true');\n        this.selectedIndex = index;\n    };\n    MDCListFoundation.prototype.setCheckboxAtIndex = function (index) {\n        var selectionAttribute = this.getSelectionAttribute();\n        for (var i = 0; i < this.adapter.getListItemCount(); i++) {\n            var isChecked = false;\n            if (index.indexOf(i) >= 0) {\n                isChecked = true;\n            }\n            this.adapter.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n            this.adapter.setAttributeForElementIndex(i, selectionAttribute, isChecked ? 'true' : 'false');\n        }\n        this.selectedIndex = index;\n    };\n    MDCListFoundation.prototype.setTabindexAtIndex = function (index) {\n        if (this.focusedItemIndex === numbers.UNSET_INDEX && index !== 0) {\n            // If some list item was selected set first list item's tabindex to -1.\n            // Generally, tabindex is set to 0 on first list item of list that has no\n            // preselected items.\n            this.adapter.setAttributeForElementIndex(0, 'tabindex', '-1');\n        }\n        else if (this.focusedItemIndex >= 0 && this.focusedItemIndex !== index) {\n            this.adapter.setAttributeForElementIndex(this.focusedItemIndex, 'tabindex', '-1');\n        }\n        // Set the previous selection's tabindex to -1. We need this because\n        // in selection menus that are not visible, programmatically setting an\n        // option will not change focus but will change where tabindex should be 0.\n        if (!(this.selectedIndex instanceof Array) &&\n            this.selectedIndex !== index) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, 'tabindex', '-1');\n        }\n        if (index !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(index, 'tabindex', '0');\n        }\n    };\n    /**\n     * @return Return true if it is single selectin list, checkbox list or radio\n     *     list.\n     */\n    MDCListFoundation.prototype.isSelectableList = function () {\n        return this.isSingleSelectionList || this.isCheckboxList ||\n            this.isRadioList;\n    };\n    MDCListFoundation.prototype.setTabindexToFirstSelectedOrFocusedItem = function () {\n        var targetIndex = this.getFirstSelectedOrFocusedItemIndex();\n        this.setTabindexAtIndex(targetIndex);\n    };\n    MDCListFoundation.prototype.getFirstSelectedOrFocusedItemIndex = function () {\n        // Action lists retain focus on the most recently focused item.\n        if (!this.isSelectableList()) {\n            return Math.max(this.focusedItemIndex, 0);\n        }\n        // Single-selection lists focus the selected item.\n        if (typeof this.selectedIndex === 'number' &&\n            this.selectedIndex !== numbers.UNSET_INDEX) {\n            return this.selectedIndex;\n        }\n        // Multiple-selection lists focus the first selected item.\n        if (isNumberArray(this.selectedIndex) && this.selectedIndex.length > 0) {\n            return this.selectedIndex.reduce(function (minIndex, currentIndex) { return Math.min(minIndex, currentIndex); });\n        }\n        // Selection lists without a selection focus the first item.\n        return 0;\n    };\n    MDCListFoundation.prototype.isIndexValid = function (index) {\n        var _this = this;\n        if (index instanceof Array) {\n            if (!this.isCheckboxList) {\n                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n            }\n            if (index.length === 0) {\n                return true;\n            }\n            else {\n                return index.some(function (i) { return _this.isIndexInRange(i); });\n            }\n        }\n        else if (typeof index === 'number') {\n            if (this.isCheckboxList) {\n                throw new Error(\"MDCListFoundation: Expected array of index for checkbox based list but got number: \" + index);\n            }\n            return this.isIndexInRange(index) ||\n                this.isSingleSelectionList && index === numbers.UNSET_INDEX;\n        }\n        else {\n            return false;\n        }\n    };\n    MDCListFoundation.prototype.isIndexInRange = function (index) {\n        var listSize = this.adapter.getListItemCount();\n        return index >= 0 && index < listSize;\n    };\n    /**\n     * Sets selected index on user action, toggles checkbox / radio based on\n     * toggleCheckbox value. User interaction should not toggle list item(s) when\n     * disabled.\n     */\n    MDCListFoundation.prototype.setSelectedIndexOnAction = function (index, toggleCheckbox) {\n        if (toggleCheckbox === void 0) { toggleCheckbox = true; }\n        if (this.isCheckboxList) {\n            this.toggleCheckboxAtIndex(index, toggleCheckbox);\n        }\n        else {\n            this.setSelectedIndex(index);\n        }\n    };\n    MDCListFoundation.prototype.toggleCheckboxAtIndex = function (index, toggleCheckbox) {\n        var selectionAttribute = this.getSelectionAttribute();\n        var isChecked = this.adapter.isCheckboxCheckedAtIndex(index);\n        if (toggleCheckbox) {\n            isChecked = !isChecked;\n            this.adapter.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n        }\n        this.adapter.setAttributeForElementIndex(index, selectionAttribute, isChecked ? 'true' : 'false');\n        // If none of the checkbox items are selected and selectedIndex is not\n        // initialized then provide a default value.\n        var selectedIndexes = this.selectedIndex === numbers.UNSET_INDEX ?\n            [] :\n            this.selectedIndex.slice();\n        if (isChecked) {\n            selectedIndexes.push(index);\n        }\n        else {\n            selectedIndexes = selectedIndexes.filter(function (i) { return i !== index; });\n        }\n        this.selectedIndex = selectedIndexes;\n    };\n    MDCListFoundation.prototype.focusItemAtIndex = function (index) {\n        this.adapter.focusItemAtIndex(index);\n        this.focusedItemIndex = index;\n    };\n    MDCListFoundation.prototype.toggleAll = function (currentlySelectedIndexes) {\n        var count = this.adapter.getListItemCount();\n        // If all items are selected, deselect everything.\n        if (currentlySelectedIndexes.length === count) {\n            this.setCheckboxAtIndex([]);\n        }\n        else {\n            // Otherwise select all enabled options.\n            var allIndexes = [];\n            for (var i = 0; i < count; i++) {\n                if (!this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_DISABLED_CLASS) ||\n                    currentlySelectedIndexes.indexOf(i) > -1) {\n                    allIndexes.push(i);\n                }\n            }\n            this.setCheckboxAtIndex(allIndexes);\n        }\n    };\n    /**\n     * Given the next desired character from the user, adds it to the typeahead\n     * buffer. Then, attempts to find the next option matching the buffer. Wraps\n     * around if at the end of options.\n     *\n     * @param nextChar The next character to add to the prefix buffer.\n     * @param startingIndex The index from which to start matching. Only relevant\n     *     when starting a new match sequence. To start a new match sequence,\n     *     clear the buffer using `clearTypeaheadBuffer`, or wait for the buffer\n     *     to clear after a set interval defined in list foundation. Defaults to\n     *     the currently focused index.\n     * @return The index of the matched item, or -1 if no match.\n     */\n    MDCListFoundation.prototype.typeaheadMatchItem = function (nextChar, startingIndex, skipFocus) {\n        var _this = this;\n        if (skipFocus === void 0) { skipFocus = false; }\n        var opts = {\n            focusItemAtIndex: function (index) {\n                _this.focusItemAtIndex(index);\n            },\n            focusedItemIndex: startingIndex ? startingIndex : this.focusedItemIndex,\n            nextChar: nextChar,\n            sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n            skipFocus: skipFocus,\n            isItemAtIndexDisabled: function (index) { return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS); }\n        };\n        return typeahead.matchItem(opts, this.typeaheadState);\n    };\n    /**\n     * Initializes the MDCListTextAndIndex data structure by indexing the current\n     * list items by primary text.\n     *\n     * @return The primary texts of all the list items sorted by first character.\n     */\n    MDCListFoundation.prototype.typeaheadInitSortedIndex = function () {\n        return typeahead.initSortedIndex(this.adapter.getListItemCount(), this.adapter.getPrimaryTextAtIndex);\n    };\n    /**\n     * Clears the typeahead buffer.\n     */\n    MDCListFoundation.prototype.clearTypeaheadBuffer = function () {\n        typeahead.clearBuffer(this.typeaheadState);\n    };\n    return MDCListFoundation;\n}(MDCFoundation));\nexport { MDCListFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCListFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { closest, matches } from '@material/dom/ponyfill';\nimport { cssClasses, deprecatedClassNameMap, evolutionAttribute, evolutionClassNameMap, numbers, strings } from './constants';\nimport { MDCListFoundation } from './foundation';\nvar MDCList = /** @class */ (function (_super) {\n    __extends(MDCList, _super);\n    function MDCList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCList.prototype, \"vertical\", {\n        set: function (value) {\n            this.foundation.setVerticalOrientation(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"listElements\", {\n        get: function () {\n            return Array.from(this.root.querySelectorAll(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS]));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"wrapFocus\", {\n        set: function (value) {\n            this.foundation.setWrapFocus(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"typeaheadInProgress\", {\n        /**\n         * @return Whether typeahead is currently matching a user-specified prefix.\n         */\n        get: function () {\n            return this.foundation.isTypeaheadInProgress();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"hasTypeahead\", {\n        /**\n         * Sets whether typeahead functionality is enabled on the list.\n         * @param hasTypeahead Whether typeahead is enabled.\n         */\n        set: function (hasTypeahead) {\n            this.foundation.setHasTypeahead(hasTypeahead);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"singleSelection\", {\n        set: function (isSingleSelectionList) {\n            this.foundation.setSingleSelection(isSingleSelectionList);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"selectedIndex\", {\n        get: function () {\n            return this.foundation.getSelectedIndex();\n        },\n        set: function (index) {\n            this.foundation.setSelectedIndex(index);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCList.attachTo = function (root) {\n        return new MDCList(root);\n    };\n    MDCList.prototype.initialSyncWithDOM = function () {\n        this.isEvolutionEnabled =\n            evolutionAttribute in this.root.dataset;\n        if (this.isEvolutionEnabled) {\n            this.classNameMap = evolutionClassNameMap;\n        }\n        else if (matches(this.root, strings.DEPRECATED_SELECTOR)) {\n            this.classNameMap = deprecatedClassNameMap;\n        }\n        else {\n            this.classNameMap =\n                Object.values(cssClasses)\n                    .reduce(function (obj, className) {\n                    obj[className] = className;\n                    return obj;\n                }, {});\n        }\n        this.handleClick = this.handleClickEvent.bind(this);\n        this.handleKeydown = this.handleKeydownEvent.bind(this);\n        this.focusInEventListener = this.handleFocusInEvent.bind(this);\n        this.focusOutEventListener = this.handleFocusOutEvent.bind(this);\n        this.listen('keydown', this.handleKeydown);\n        this.listen('click', this.handleClick);\n        this.listen('focusin', this.focusInEventListener);\n        this.listen('focusout', this.focusOutEventListener);\n        this.layout();\n        this.initializeListType();\n        this.ensureFocusable();\n    };\n    MDCList.prototype.destroy = function () {\n        this.unlisten('keydown', this.handleKeydown);\n        this.unlisten('click', this.handleClick);\n        this.unlisten('focusin', this.focusInEventListener);\n        this.unlisten('focusout', this.focusOutEventListener);\n    };\n    MDCList.prototype.layout = function () {\n        var direction = this.root.getAttribute(strings.ARIA_ORIENTATION);\n        this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n        var itemSelector = \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \":not([tabindex])\";\n        var childSelector = strings.FOCUSABLE_CHILD_ELEMENTS;\n        // List items need to have at least tabindex=-1 to be focusable.\n        var itemEls = this.root.querySelectorAll(itemSelector);\n        if (itemEls.length) {\n            Array.prototype.forEach.call(itemEls, function (el) {\n                el.setAttribute('tabindex', '-1');\n            });\n        }\n        // Child button/a elements are not tabbable until the list item is focused.\n        var focusableChildEls = this.root.querySelectorAll(childSelector);\n        if (focusableChildEls.length) {\n            Array.prototype.forEach.call(focusableChildEls, function (el) {\n                el.setAttribute('tabindex', '-1');\n            });\n        }\n        if (this.isEvolutionEnabled) {\n            this.foundation.setUseSelectedAttribute(true);\n        }\n        this.foundation.layout();\n    };\n    /**\n     * Extracts the primary text from a list item.\n     * @param item The list item element.\n     * @return The primary text in the element.\n     */\n    MDCList.prototype.getPrimaryText = function (item) {\n        var _a;\n        var primaryText = item.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS]);\n        if (this.isEvolutionEnabled || primaryText) {\n            return (_a = primaryText === null || primaryText === void 0 ? void 0 : primaryText.textContent) !== null && _a !== void 0 ? _a : '';\n        }\n        var singleLineText = item.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_TEXT_CLASS]);\n        return (singleLineText && singleLineText.textContent) || '';\n    };\n    /**\n     * Initialize selectedIndex value based on pre-selected list items.\n     */\n    MDCList.prototype.initializeListType = function () {\n        var _this = this;\n        this.isInteractive =\n            matches(this.root, strings.ARIA_INTERACTIVE_ROLES_SELECTOR);\n        if (this.isEvolutionEnabled && this.isInteractive) {\n            var selection = Array.from(this.root.querySelectorAll(strings.SELECTED_ITEM_SELECTOR), function (listItem) { return _this.listElements.indexOf(listItem); });\n            if (matches(this.root, strings.ARIA_MULTI_SELECTABLE_SELECTOR)) {\n                this.selectedIndex = selection;\n            }\n            else if (selection.length > 0) {\n                this.selectedIndex = selection[0];\n            }\n            return;\n        }\n        var checkboxListItems = this.root.querySelectorAll(strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n        var radioSelectedListItem = this.root.querySelector(strings.ARIA_CHECKED_RADIO_SELECTOR);\n        if (checkboxListItems.length) {\n            var preselectedItems = this.root.querySelectorAll(strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n            this.selectedIndex = Array.from(preselectedItems, function (listItem) { return _this.listElements.indexOf(listItem); });\n        }\n        else if (radioSelectedListItem) {\n            this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n        }\n    };\n    /**\n     * Updates the list item at itemIndex to the desired isEnabled state.\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    MDCList.prototype.setEnabled = function (itemIndex, isEnabled) {\n        this.foundation.setEnabled(itemIndex, isEnabled);\n    };\n    /**\n     * Given the next desired character from the user, adds it to the typeahead\n     * buffer. Then, attempts to find the next option matching the buffer. Wraps\n     * around if at the end of options.\n     *\n     * @param nextChar The next character to add to the prefix buffer.\n     * @param startingIndex The index from which to start matching. Defaults to\n     *     the currently focused index.\n     * @return The index of the matched item.\n     */\n    MDCList.prototype.typeaheadMatchItem = function (nextChar, startingIndex) {\n        return this.foundation.typeaheadMatchItem(nextChar, startingIndex, /** skipFocus */ true);\n    };\n    MDCList.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClassForElementIndex: function (index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.add(_this.classNameMap[className]);\n                }\n            },\n            focusItemAtIndex: function (index) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.focus();\n                }\n            },\n            getAttributeForElementIndex: function (index, attr) {\n                return _this.listElements[index].getAttribute(attr);\n            },\n            getFocusedElementIndex: function () {\n                return _this.listElements.indexOf(document.activeElement);\n            },\n            getListItemCount: function () { return _this.listElements.length; },\n            getPrimaryTextAtIndex: function (index) {\n                return _this.getPrimaryText(_this.listElements[index]);\n            },\n            hasCheckboxAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n            },\n            hasRadioAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(strings.RADIO_SELECTOR);\n            },\n            isCheckboxCheckedAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n                return toggleEl.checked;\n            },\n            isFocusInsideList: function () {\n                return _this.root !== document.activeElement &&\n                    _this.root.contains(document.activeElement);\n            },\n            isRootFocused: function () { return document.activeElement === _this.root; },\n            listItemAtIndexHasClass: function (index, className) {\n                return _this.listElements[index].classList.contains(_this.classNameMap[className]);\n            },\n            notifyAction: function (index) {\n                _this.emit(strings.ACTION_EVENT, { index: index }, /** shouldBubble */ true);\n            },\n            removeClassForElementIndex: function (index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.remove(_this.classNameMap[className]);\n                }\n            },\n            setAttributeForElementIndex: function (index, attr, value) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.setAttribute(attr, value);\n                }\n            },\n            setCheckedCheckboxOrRadioAtIndex: function (index, isChecked) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n                toggleEl.checked = isChecked;\n                var event = document.createEvent('Event');\n                event.initEvent('change', true, true);\n                toggleEl.dispatchEvent(event);\n            },\n            setTabIndexForListItemChildren: function (listItemIndex, tabIndexValue) {\n                var element = _this.listElements[listItemIndex];\n                var selector = strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX;\n                Array.prototype.forEach.call(element.querySelectorAll(selector), function (el) {\n                    el.setAttribute('tabindex', tabIndexValue);\n                });\n            },\n        };\n        return new MDCListFoundation(adapter);\n    };\n    /**\n     * Ensures that at least one item is focusable if the list is interactive and\n     * doesn't specify a suitable tabindex.\n     */\n    MDCList.prototype.ensureFocusable = function () {\n        if (this.isEvolutionEnabled && this.isInteractive) {\n            if (!this.root.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \"[tabindex=\\\"0\\\"]\")) {\n                var index = this.initialFocusIndex();\n                if (index !== -1) {\n                    this.listElements[index].tabIndex = 0;\n                }\n            }\n        }\n    };\n    MDCList.prototype.initialFocusIndex = function () {\n        if (this.selectedIndex instanceof Array && this.selectedIndex.length > 0) {\n            return this.selectedIndex[0];\n        }\n        if (typeof this.selectedIndex === 'number' &&\n            this.selectedIndex !== numbers.UNSET_INDEX) {\n            return this.selectedIndex;\n        }\n        var el = this.root.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \":not(.\" + this.classNameMap[cssClasses.LIST_ITEM_DISABLED_CLASS] + \")\");\n        if (el === null) {\n            return -1;\n        }\n        return this.getListItemIndex(el);\n    };\n    /**\n     * Used to figure out which list item this event is targetting. Or returns -1\n     * if there is no list item\n     */\n    MDCList.prototype.getListItemIndex = function (el) {\n        var nearestParent = closest(el, \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \", .\" + this.classNameMap[cssClasses.ROOT]);\n        // Get the index of the element if it is a list item.\n        if (nearestParent &&\n            matches(nearestParent, \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS])) {\n            return this.listElements.indexOf(nearestParent);\n        }\n        return -1;\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleFocusInEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        this.foundation.handleFocusIn(index);\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleFocusOutEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        this.foundation.handleFocusOut(index);\n    };\n    /**\n     * Used to figure out which element was focused when keydown event occurred\n     * before sending the event to the foundation.\n     */\n    MDCList.prototype.handleKeydownEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        var target = evt.target;\n        this.foundation.handleKeydown(evt, target.classList.contains(this.classNameMap[cssClasses.LIST_ITEM_CLASS]), index);\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleClickEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        var target = evt.target;\n        // Toggle the checkbox only if it's not the target of the event, or the\n        // checkbox will have 2 change events.\n        var toggleCheckbox = !matches(target, strings.CHECKBOX_RADIO_SELECTOR);\n        this.foundation.handleClick(index, toggleCheckbox);\n    };\n    return MDCList;\n}(MDCComponent));\nexport { MDCList };\n//# sourceMappingURL=component.js.map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;GAsBA,IAAIA,EAAIC,EACL,IAACC,EAAa,CACbC,0BAA2B,2BAC3BC,gBAAiB,gBACjBC,yBAA0B,0BAC1BC,yBAA0B,0BAC1BC,qBAAsB,sBACtBC,6BAA8B,8BAC9BC,KAAM,YAEV,IAAIC,GAAyBV,EAAK,GAC9BA,EAAG,GAAKE,EAAWC,2BAA6B,2BAChDH,EAAG,GAAKE,EAAWE,iBAAmB,gBACtCJ,EAAG,GAAKE,EAAWG,0BAA4B,0BAC/CL,EAAG,GAAKE,EAAWI,0BAA4B,0BAC/CN,EAAG,GAAKE,EAAWM,8BAAgC,8BACnDR,EAAG,GAAKE,EAAWO,MAAQ,WAC3BT,GACJ,IAAIW,GAA0BV,EAAK,GAC/BA,EAAG,GAAKC,EAAWC,2BAA6B,sCAChDF,EAAG,GAAKC,EAAWE,iBAAmB,2BACtCH,EAAG,GAAKC,EAAWG,0BAA4B,qCAC/CJ,EAAG,GAAKC,EAAWI,0BAA4B,qCAC/CL,EAAG,GAAKC,EAAWK,sBAAwB,iCAC3CN,EAAG,GAAKC,EAAWM,8BAAgC,yCACnDP,EAAG,GAAKC,EAAWO,MAAQ,sBAC3BR,GACD,IAACW,EAAU,CACVC,aAAc,iBACdC,aAAc,eACdC,+BAAgC,yCAChCC,4BAA6B,sCAC7BC,aAAc,eACdC,cAAe,gBACfC,iBAAkB,mBAClBC,4BAA6B,aAC7BC,4BAA6B,oBAC7BC,cAAe,gBACfC,gCAAiC,kCACjCC,+BAAgC,gCAChCC,wBAAyB,8CACzBC,kBAAmB,yBACnBC,kCAAmC,UAAYzB,EAAWE,gBAAkB,iCAAmCF,EAAWE,gBAAkB,aAAeO,EAAuBT,EAAWE,iBAAmB,iCAAmCO,EAAuBT,EAAWE,iBAAmB,SACxSwB,oBAAqB,uBACrBC,yBAA0B,UAAY3B,EAAWE,gBAAkB,iCAAmCF,EAAWE,gBAAkB,aAAeF,EAAWE,gBAAkB,8CAAkDF,EAAWE,gBAAkB,iDAAqDO,EAAuBT,EAAWE,iBAAmB,iCAAmCO,EAAuBT,EAAWE,iBAAmB,aAAeO,EAAuBT,EAAWE,iBAAmB,8CAAkDO,EAAuBT,EAAWE,iBAAmB,6CAC3mB0B,eAAgB,sBAChBC,uBAAwB,iDAEzB,IAACC,EAAU,CACVC,aAAc,EACdC,kCAAmC,KAEvC,IAAIC,EAAqB;;;;;;;;;;;;;;;;;;;;;;GCjDlB,IAAIC,EAAM,CACbC,QAAS,UACTC,UAAW,YACXC,MAAO,QACPC,SAAU,WACVC,QAAS,SACTC,UAAW,WACXC,IAAK,MACLC,KAAM,OACNC,WAAY,YACZC,SAAU,UACVC,YAAa,aACbC,WAAY,YACZC,OAAQ,SACRC,OAAQ,SACRC,IAAK,OAET,IAAIC,EAAiB,IAAIC,IAGzBD,EAAeE,IAAIlB,EAAIE,WACvBc,EAAeE,IAAIlB,EAAIG,OACvBa,EAAeE,IAAIlB,EAAII,UACvBY,EAAeE,IAAIlB,EAAIK,SACvBW,EAAeE,IAAIlB,EAAIM,WACvBU,EAAeE,IAAIlB,EAAIO,KACvBS,EAAeE,IAAIlB,EAAIQ,MACvBQ,EAAeE,IAAIlB,EAAIS,YACvBO,EAAeE,IAAIlB,EAAIU,UACvBM,EAAeE,IAAIlB,EAAIW,aACvBK,EAAeE,IAAIlB,EAAIY,YACvBI,EAAeE,IAAIlB,EAAIa,QACvBG,EAAeE,IAAIlB,EAAIc,QACvBE,EAAeE,IAAIlB,EAAIe,KACvB,IAAII,EAAW,CACXjB,UAAW,EACXC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,IAAK,GACLC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbC,WAAY,GACZC,OAAQ,GACRC,OAAQ,GACRC,IAAK,GAET,IAAIK,EAAiB,IAAIC,IAGzBD,EAAeE,IAAIH,EAASjB,UAAWF,EAAIE,WAC3CkB,EAAeE,IAAIH,EAAShB,MAAOH,EAAIG,OACvCiB,EAAeE,IAAIH,EAASf,SAAUJ,EAAII,UAC1CgB,EAAeE,IAAIH,EAASd,QAASL,EAAIK,SACzCe,EAAeE,IAAIH,EAASb,UAAWN,EAAIM,WAC3Cc,EAAeE,IAAIH,EAASZ,IAAKP,EAAIO,KACrCa,EAAeE,IAAIH,EAASX,KAAMR,EAAIQ,MACtCY,EAAeE,IAAIH,EAASV,WAAYT,EAAIS,YAC5CW,EAAeE,IAAIH,EAAST,SAAUV,EAAIU,UAC1CU,EAAeE,IAAIH,EAASR,YAAaX,EAAIW,aAC7CS,EAAeE,IAAIH,EAASP,WAAYZ,EAAIY,YAC5CQ,EAAeE,IAAIH,EAASN,OAAQb,EAAIa,QACxCO,EAAeE,IAAIH,EAASL,OAAQd,EAAIc,QACxCM,EAAeE,IAAIH,EAASJ,IAAKf,EAAIe,KACrC,IAAIQ,EAAiB,IAAIN,IAGzBM,EAAeL,IAAIlB,EAAIK,SACvBkB,EAAeL,IAAIlB,EAAIM,WACvBiB,EAAeL,IAAIlB,EAAIO,KACvBgB,EAAeL,IAAIlB,EAAIQ,MACvBe,EAAeL,IAAIlB,EAAIS,YACvBc,EAAeL,IAAIlB,EAAIU,UACvBa,EAAeL,IAAIlB,EAAIW,aACvBY,EAAeL,IAAIlB,EAAIY,YAIhB,SAASY,EAAaC,GACzB,IAAIC,EAAMD,EAAIC,IAEd,GAAIV,EAAeW,IAAID,GAAM,CACzB,OAAOA,CACf,CAEI,IAAIE,EAAYR,EAAeS,IAAIJ,EAAIK,SACvC,GAAIF,EAAW,CACX,OAAOA,CACf,CACI,OAAO5B,EAAIC,OACf;;;;;;;;;;;;;;;;;;;;;;GChGA,IAAI8B,EAA0B,CAAC,QAAS,SAAU,WAAY,UAOvD,IAAIC,EAAsB,SAAUP,GACvC,IAAIQ,EAASR,EAAIQ,OACjB,IAAKA,EAAQ,CACT,MACR,CACI,IAAIC,GAAW,GAAKD,EAAOC,SAASC,cACpC,GAAIJ,EAAwBK,QAAQF,MAAc,EAAG,CACjDT,EAAIY,gBACZ,CACA;;;;;;;;;;;;;;;;;;;;;;GCLO,SAASC,IACZ,IAAIC,EAAQ,CACRC,mBAAoB,EACpBC,iBAAkB,GAClBC,kBAAmB,EACnBC,gBAAiB,IAErB,OAAOJ,CACX,CAYO,SAASK,EAAgBC,EAAeC,GAC3C,IAAIC,EAAyB,IAAI1B,IAEjC,IAAK,IAAI2B,EAAI,EAAGA,EAAIH,EAAeG,IAAK,CACpC,IAAIC,EAAcH,EAA0BE,GAAGE,OAC/C,IAAKD,EAAa,CACd,QACZ,CACQ,IAAIE,EAAYF,EAAY,GAAGd,cAC/B,IAAKY,EAAuBpB,IAAIwB,GAAY,CACxCJ,EAAuBzB,IAAI6B,EAAW,GAClD,CACQJ,EAAuBlB,IAAIsB,GAAWC,KAAK,CAAEC,KAAMJ,EAAYd,cAAemB,MAAON,GAC7F,CAGID,EAAuBQ,SAAQ,SAAUC,GACrCA,EAAOC,MAAK,SAAUC,EAAOC,GACzB,OAAOD,EAAMJ,MAAQK,EAAOL,KACxC,GACA,IACI,OAAOP,CACX,CAiBO,SAASa,EAAUC,EAAMtB,GAC5B,IAAIuB,EAAWD,EAAKC,SAAUC,EAAmBF,EAAKE,iBAAkBhB,EAAyBc,EAAKd,uBAAwBiB,EAAmBH,EAAKG,iBAAkBC,EAAYJ,EAAKI,UAAWC,EAAwBL,EAAKK,sBACjOC,aAAa5B,EAAMC,oBACnBD,EAAMC,mBAAqB4B,YAAW,WAClCC,EAAY9B,EACpB,GAAO3C,EAAQE,mCACXyC,EAAMI,gBAAkBJ,EAAMI,gBAAkBmB,EAChD,IAAIR,EACJ,GAAIf,EAAMI,gBAAgB2B,SAAW,EAAG,CACpChB,EAAQiB,EAAexB,EAAwBiB,EAAkBE,EAAuB3B,EAChG,KACS,CACDe,EAAQkB,EAAczB,EAAwBmB,EAAuB3B,EAC7E,CACI,GAAIe,KAAW,IAAMW,EAAW,CAC5BF,EAAiBT,EACzB,CACI,OAAOA,CACX,CAMA,SAASiB,EAAexB,EAAwBiB,EAAkBE,EAAuB3B,GACrF,IAAIY,EAAYZ,EAAMI,gBAAgB,GACtC,IAAI8B,EAAyB1B,EAAuBlB,IAAIsB,GACxD,IAAKsB,EAAwB,CACzB,OAAQ,CAChB,CAII,GAAItB,IAAcZ,EAAME,kBACpBgC,EAAuBlC,EAAMG,mBAAmBY,QAC5CU,EAAkB,CACtBzB,EAAMG,mBACDH,EAAMG,kBAAoB,GAAK+B,EAAuBH,OAC3D,IAAII,EAAWD,EAAuBlC,EAAMG,mBAAmBY,MAC/D,IAAKY,EAAsBQ,GAAW,CAClC,OAAOA,CACnB,CACA,CAKInC,EAAME,iBAAmBU,EACzB,IAAIwB,GAAqB,EACzB,IAAIC,EAEJ,IAAKA,EAAiB,EAAGA,EAAiBH,EAAuBH,OAAQM,IAAkB,CACvF,IAAKV,EAAsBO,EAAuBG,GAAgBtB,OAAQ,CACtEqB,EAAoBC,EACpB,KACZ,CACA,CAII,KAAOA,EAAiBH,EAAuBH,OAAQM,IAAkB,CACrE,GAAIH,EAAuBG,GAAgBtB,MAAQU,IAC9CE,EAAsBO,EAAuBG,GAAgBtB,OAAQ,CACtEqB,EAAoBC,EACpB,KACZ,CACA,CACI,GAAID,KAAuB,EAAG,CAC1BpC,EAAMG,kBAAoBiC,EAC1B,OAAOF,EAAuBlC,EAAMG,mBAAmBY,KAC/D,CACI,OAAQ,CACZ,CAKA,SAASkB,EAAczB,EAAwBmB,EAAuB3B,GAClE,IAAIY,EAAYZ,EAAMI,gBAAgB,GACtC,IAAI8B,EAAyB1B,EAAuBlB,IAAIsB,GACxD,IAAKsB,EAAwB,CACzB,OAAQ,CAChB,CAEI,IAAII,EAAeJ,EAAuBlC,EAAMG,mBAChD,GAAImC,EAAaxB,KAAKyB,YAAYvC,EAAMI,gBAAiB,KAAO,IAC3DuB,EAAsBW,EAAavB,OAAQ,CAC5C,OAAOuB,EAAavB,KAC5B,CAGI,IAAIsB,GAAkBrC,EAAMG,kBAAoB,GAAK+B,EAAuBH,OAC5E,IAAIS,GAAsB,EAC1B,MAAOH,IAAmBrC,EAAMG,kBAAmB,CAC/C,IAAIsC,EAAcP,EAAuBG,GACzC,IAAIK,EAAUD,EAAY3B,KAAKyB,YAAYvC,EAAMI,gBAAiB,KAAO,EACzE,IAAIuC,GAAahB,EAAsBc,EAAY1B,OACnD,GAAI2B,GAAWC,EAAW,CACtBH,EAAqBH,EACrB,KACZ,CACQA,GAAkBA,EAAiB,GAAKH,EAAuBH,MACvE,CACI,GAAIS,KAAwB,EAAG,CAC3BxC,EAAMG,kBAAoBqC,EAC1B,OAAON,EAAuBlC,EAAMG,mBAAmBY,KAC/D,CACI,OAAQ,CACZ,CAMO,SAAS6B,EAAmB5C,GAC/B,OAAOA,EAAMI,gBAAgB2B,OAAS,CAC1C,CAOO,SAASD,EAAY9B,GACxBA,EAAMI,gBAAkB,EAC5B,CAkBO,SAASyC,EAAcvB,EAAMtB,GAChC,IAAI8C,EAAQxB,EAAKwB,MAAOC,EAAmBzB,EAAKyB,iBAAkBtB,EAAmBH,EAAKG,iBAAkBD,EAAmBF,EAAKE,iBAAkBhB,EAAyBc,EAAKd,uBAAwBmB,EAAwBL,EAAKK,sBACzO,IAAIqB,EAAc/D,EAAa6D,KAAW,YAC1C,IAAIG,EAAYhE,EAAa6D,KAAW,UACxC,IAAII,EAAejE,EAAa6D,KAAW,aAC3C,IAAIK,EAAclE,EAAa6D,KAAW,YAC1C,IAAIM,EAASnE,EAAa6D,KAAW,OACrC,IAAIO,EAAQpE,EAAa6D,KAAW,MACpC,IAAIQ,EAAUrE,EAAa6D,KAAW,QACtC,IAAIS,EAAUtE,EAAa6D,KAAW,WACtC,GAAIA,EAAMU,SAAWV,EAAMW,SAAWT,GAAeC,GACjDC,GAAgBC,GAAeC,GAAUC,GAASC,EAAS,CAC3D,OAAQ,CAChB,CACI,IAAII,GAAkBH,GAAWT,EAAM3D,IAAI4C,SAAW,EACtD,GAAI2B,EAAgB,CAChBjE,EAAoBqD,GACpB,IAAIa,EAAgB,CAChBnC,iBAAkBA,EAClBC,iBAAkBA,EAClBF,SAAUuB,EAAM3D,IAAIS,cACpBY,uBAAwBA,EACxBkB,UAAW,MACXC,sBAAuBA,GAE3B,OAAON,EAAUsC,EAAe3D,EACxC,CACI,IAAKuD,EAAS,CACV,OAAQ,CAChB,CACI,GAAIR,EAAkB,CAClBtD,EAAoBqD,EAC5B,CACI,IAAIc,EAAsBb,GAAoBH,EAAmB5C,GACjE,GAAI4D,EAAqB,CACrB,IAAID,EAAgB,CAChBnC,iBAAkBA,EAClBC,iBAAkBA,EAClBF,SAAU,IACVf,uBAAwBA,EACxBkB,UAAW,MACXC,sBAAuBA,GAG3B,OAAON,EAAUsC,EAAe3D,EACxC,CACI,OAAQ,CACZ;;;;;;;;;;;;;;;;;;;;;;GC9PA,SAAS6D,EAAcC,GACnB,OAAOA,aAAyBC,KACpC,CACG,IAACC,EAAmC,SAAUC,GAC7CC,EAAUF,EAAmBC,GAC7B,SAASD,EAAkBG,GACvB,IAAIC,EAAQH,EAAOI,KAAKC,KAAMC,EAASA,EAAS,GAAIP,EAAkBQ,gBAAiBL,KAAaG,KACpGF,EAAMK,UAAY,MAClBL,EAAMM,WAAa,KACnBN,EAAMO,sBAAwB,MAC9BP,EAAMN,cAAgBzG,EAAQC,YAC9B8G,EAAM3C,iBAAmBpE,EAAQC,YACjC8G,EAAMQ,kBAAoB,MAC1BR,EAAMS,gBAAkB,MACxBT,EAAMU,qBAAuB,KAC7BV,EAAMW,eAAiB,MACvBX,EAAMY,YAAc,MACpBZ,EAAMa,aAAe,MAErBb,EAAMc,eAAiBC,IACvBf,EAAM5D,uBAAyB,IAAI1B,IACnC,OAAOsF,CACf,CACIgB,OAAOC,eAAerB,EAAmB,UAAW,CAChD1E,IAAK,WACD,OAAOrD,CACnB,EACQqJ,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAerB,EAAmB,aAAc,CACnD1E,IAAK,WACD,OAAO/D,CACnB,EACQ+J,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAerB,EAAmB,UAAW,CAChD1E,IAAK,WACD,OAAOjC,CACnB,EACQiI,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAerB,EAAmB,iBAAkB,CACvD1E,IAAK,WACD,MAAO,CACHkG,wBAAyB,WAAc,OAAOC,SAAU,EACxDjE,iBAAkB,WAAc,OAAOiE,SAAU,EACjDC,4BAA6B,WAAc,OAAO,IAAK,EACvDC,uBAAwB,WAAc,OAAO,CAAE,EAC/CC,iBAAkB,WAAc,OAAO,CAAE,EACzCC,mBAAoB,WAAc,OAAO,KAAM,EAC/CC,gBAAiB,WAAc,OAAO,KAAM,EAC5CC,yBAA0B,WAAc,OAAO,KAAM,EACrDC,kBAAmB,WAAc,OAAO,KAAM,EAC9CC,cAAe,WAAc,OAAO,KAAM,EAC1CC,wBAAyB,WAAc,OAAO,KAAM,EACpDC,aAAc,WAAc,OAAOV,SAAU,EAC7CW,2BAA4B,WAAc,OAAOX,SAAU,EAC3DY,4BAA6B,WAAc,OAAOZ,SAAU,EAC5Da,iCAAkC,WAAc,OAAOb,SAAU,EACjEc,+BAAgC,WAAc,OAAOd,SAAU,EAC/De,sBAAuB,WAAc,MAAO,EAAG,EAE/D,EACQlB,WAAY,MACZC,aAAc,OAElBvB,EAAkByC,UAAUC,OAAS,WACjC,GAAIpC,KAAKH,QAAQyB,qBAAuB,EAAG,CACvC,MACZ,CAEQ,GAAItB,KAAKH,QAAQ0B,mBAAmB,GAAI,CACpCvB,KAAKS,eAAiB,IAClC,MACa,GAAIT,KAAKH,QAAQ2B,gBAAgB,GAAI,CACtCxB,KAAKU,YAAc,IAC/B,KACa,CACDV,KAAKqC,gCACjB,CACQ,GAAIrC,KAAKW,aAAc,CACnBX,KAAK9D,uBAAyB8D,KAAKsC,0BAC/C,CACA,EAEI5C,EAAkByC,UAAUI,oBAAsB,WAC9C,OAAOvC,KAAK7C,gBACpB,EAEIuC,EAAkByC,UAAUK,aAAe,SAAUC,GACjDzC,KAAKG,UAAYsC,CACzB,EAKI/C,EAAkByC,UAAUO,uBAAyB,SAAUD,GAC3DzC,KAAKI,WAAaqC,CAC1B,EAEI/C,EAAkByC,UAAUQ,mBAAqB,SAAUF,GACvDzC,KAAKK,sBAAwBoC,EAC7B,GAAIA,EAAO,CACPzC,KAAKqC,iCACLrC,KAAKR,cAAgBQ,KAAK4C,yBACtC,CACA,EAKIlD,EAAkByC,UAAUE,+BAAiC,WACzD,IAAIQ,EAAoB7C,KAAK4C,0BAC7B,GAAIC,IAAsB9J,EAAQC,YAC9B,OACJ,IAAI8J,EAAoB9C,KAAKH,QAAQ+B,wBAAwBiB,EAAmB5L,EAAWC,2BAC3F,GAAI4L,EAAmB,CACnB9C,KAAK+C,qBAAqB,KACtC,CACQ/C,KAAKK,sBAAwB,KAC7BL,KAAKR,cAAgBqD,CAC7B,EAEInD,EAAkByC,UAAUS,wBAA0B,WAClD,IAAIpD,EAAgBzG,EAAQC,YAC5B,IAAIgK,EAAiBhD,KAAKH,QAAQyB,mBAClC,IAAK,IAAInF,EAAI,EAAGA,EAAI6G,EAAgB7G,IAAK,CACrC,IAAI8G,EAAmBjD,KAAKH,QAAQ+B,wBAAwBzF,EAAGlF,EAAWI,0BAC1E,IAAIyL,EAAoB9C,KAAKH,QAAQ+B,wBAAwBzF,EAAGlF,EAAWC,2BAC3E,KAAM+L,GAAoBH,GAAoB,CAC1C,QAChB,CACYtD,EAAgBrD,EAChB,KACZ,CACQ,OAAOqD,CACf,EAKIE,EAAkByC,UAAUe,gBAAkB,SAAUvC,GACpDX,KAAKW,aAAeA,EACpB,GAAIA,EAAc,CACdX,KAAK9D,uBAAyB8D,KAAKsC,0BAC/C,CACA,EAII5C,EAAkByC,UAAUgB,sBAAwB,WAChD,OAAOnD,KAAKW,cACRyC,EAA6BpD,KAAKY,eAC9C,EAEIlB,EAAkByC,UAAUY,qBAAuB,SAAUM,GACzDrD,KAAKM,kBAAoB+C,CACjC,EAKI3D,EAAkByC,UAAUmB,wBAA0B,SAAUC,GAC5DvD,KAAKO,gBAAkBgD,CAC/B,EACI7D,EAAkByC,UAAUqB,iBAAmB,WAC3C,OAAOxD,KAAKR,aACpB,EACIE,EAAkByC,UAAUsB,iBAAmB,SAAUhH,EAAO1F,GAC5D,IAAIC,EAAKD,SAAY,EAAI,GAAKA,EAAI2M,EAAc1M,EAAG0M,YACnD,IAAK1D,KAAK2D,aAAalH,GAAQ,CAC3B,MACZ,CACQ,GAAIuD,KAAKS,eAAgB,CACrBT,KAAK4D,mBAAmBnH,EACpC,MACa,GAAIuD,KAAKU,YAAa,CACvBV,KAAK6D,gBAAgBpH,EACjC,KACa,CACDuD,KAAK8D,0BAA0BrH,EAAO,CAAEiH,YAAaA,GACjE,CACA,EAIIhE,EAAkByC,UAAU4B,cAAgB,SAAUC,GAClD,GAAIA,GAAiB,EAAG,CACpBhE,KAAK7C,iBAAmB6G,EACxBhE,KAAKH,QAAQkC,4BAA4BiC,EAAe,WAAY,KACpEhE,KAAKH,QAAQoC,+BAA+B+B,EAAe,IACvE,CACA,EAIItE,EAAkByC,UAAU8B,eAAiB,SAAUD,GACnD,IAAIlE,EAAQE,KACZ,GAAIgE,GAAiB,EAAG,CACpBhE,KAAKH,QAAQkC,4BAA4BiC,EAAe,WAAY,MACpEhE,KAAKH,QAAQoC,+BAA+B+B,EAAe,KACvE,CAKQzG,YAAW,WACP,IAAKuC,EAAMD,QAAQ6B,oBAAqB,CACpC5B,EAAMoE,yCACtB,CACA,GAAW,EACX,EAIIxE,EAAkByC,UAAU5D,cAAgB,SAAUC,EAAO2F,EAAgBH,GACzE,IAAIlE,EAAQE,KACZ,IAAItB,EAAc/D,EAAa6D,KAAW,YAC1C,IAAIG,EAAYhE,EAAa6D,KAAW,UACxC,IAAII,EAAejE,EAAa6D,KAAW,aAC3C,IAAIK,EAAclE,EAAa6D,KAAW,YAC1C,IAAIM,EAASnE,EAAa6D,KAAW,OACrC,IAAIO,EAAQpE,EAAa6D,KAAW,MACpC,IAAIQ,EAAUrE,EAAa6D,KAAW,QACtC,IAAIS,EAAUtE,EAAa6D,KAAW,WAGtC,IAAI4F,EAAY5F,EAAM3D,MAAQ,KAAO2D,EAAM3D,MAAQ,IACnD,GAAImF,KAAKH,QAAQ8B,gBAAiB,CAC9B,GAAIhD,GAAaI,EAAO,CACpBP,EAAMhD,iBACNwE,KAAKqE,kBACrB,MACiB,GAAIxF,GAAeC,EAAQ,CAC5BN,EAAMhD,iBACNwE,KAAKsE,mBACrB,CACY,GAAItE,KAAKW,aAAc,CACnB,IAAI4D,EAAoB,CACpB/F,MAAOA,EACPtB,iBAAkB,SAAUT,GACxBqD,EAAM5C,iBAAiBT,EAC/C,EACoBU,kBAAmB,EACnBsB,iBAAkB0F,EAClBjI,uBAAwB8D,KAAK9D,uBAC7BmB,sBAAuB,SAAUZ,GAC7B,OAAOqD,EAAMD,QAAQ+B,wBAAwBnF,EAAOxF,EAAWG,yBACvF,GAEgBoN,EAAwBD,EAAmBvE,KAAKY,eAChE,CACY,MACZ,CACQ,IAAI6D,EAAezE,KAAKH,QAAQwB,yBAChC,GAAIoD,KAAkB,EAAG,CACrBA,EAAeT,EACf,GAAIS,EAAe,EAAG,CAGlB,MAChB,CACA,CACQ,GAAKzE,KAAKI,YAAcvB,IAClBmB,KAAKI,YAAcxB,EAAe,CACpCzD,EAAoBqD,GACpBwB,KAAK0E,iBAAiBD,EAClC,MACa,GAAKzE,KAAKI,YAAczB,IAAgBqB,KAAKI,YAAc1B,EAAc,CAC1EvD,EAAoBqD,GACpBwB,KAAK2E,iBAAiBF,EAClC,MACa,GAAI3F,EAAQ,CACb3D,EAAoBqD,GACpBwB,KAAKsE,mBACjB,MACa,GAAIvF,EAAO,CACZ5D,EAAoBqD,GACpBwB,KAAKqE,kBACjB,MACa,GAAID,GAAa5F,EAAMU,SAAWc,KAAKS,eAAgB,CACxDjC,EAAMhD,iBACNwE,KAAK4E,UAAU5E,KAAKR,gBAAkBzG,EAAQC,YAC1C,GACAgH,KAAKR,cACrB,MACa,GAAIR,GAAWC,EAAS,CACzB,GAAIkF,EAAgB,CAGhB,IAAI/I,EAASoD,EAAMpD,OACnB,GAAIA,GAAUA,EAAOC,UAAY,KAAO2D,EAAS,CAC7C,MACpB,CACgB7D,EAAoBqD,GACpB,GAAIwB,KAAKH,QAAQ+B,wBAAwB6C,EAAcxN,EAAWG,0BAA2B,CACzF,MACpB,CACgB,IAAK4I,KAAKmD,wBAAyB,CAC/B,GAAInD,KAAK6E,mBAAoB,CACzB7E,KAAK8E,yBAAyBL,EACtD,CACoBzE,KAAKH,QAAQgC,aAAa4C,EAC9C,CACA,CACA,CACQ,GAAIzE,KAAKW,aAAc,CACnB,IAAI4D,EAAoB,CACpB/F,MAAOA,EACPtB,iBAAkB,SAAUT,GACxBqD,EAAM5C,iBAAiBT,EAC3C,EACgBU,iBAAkB6C,KAAK7C,iBACvBsB,iBAAkB0F,EAClBjI,uBAAwB8D,KAAK9D,uBAC7BmB,sBAAuB,SAAUZ,GAAS,OAAOqD,EAAMD,QAAQ+B,wBAAwBnF,EAAOxF,EAAWG,yBAA0B,GAEvIoN,EAAwBD,EAAmBvE,KAAKY,eAC5D,CACA,EAIIlB,EAAkByC,UAAU4C,YAAc,SAAUtI,EAAOuI,GACvD,GAAIvI,IAAU1D,EAAQC,YAAa,CAC/B,MACZ,CACQ,GAAIgH,KAAKH,QAAQ+B,wBAAwBnF,EAAOxF,EAAWG,0BAA2B,CAClF,MACZ,CACQ,GAAI4I,KAAK6E,mBAAoB,CACzB7E,KAAK8E,yBAAyBrI,EAAOuI,EACjD,CACQhF,KAAKH,QAAQgC,aAAapF,EAClC,EAIIiD,EAAkByC,UAAUuC,iBAAmB,SAAUjI,GACrD,IAAIwI,EAAQjF,KAAKH,QAAQyB,mBACzB,IAAI4D,EAAYzI,EAAQ,EACxB,GAAIyI,GAAaD,EAAO,CACpB,GAAIjF,KAAKG,UAAW,CAChB+E,EAAY,CAC5B,KACiB,CAED,OAAOzI,CACvB,CACA,CACQuD,KAAK9C,iBAAiBgI,GACtB,OAAOA,CACf,EAIIxF,EAAkByC,UAAUwC,iBAAmB,SAAUlI,GACrD,IAAI0I,EAAY1I,EAAQ,EACxB,GAAI0I,EAAY,EAAG,CACf,GAAInF,KAAKG,UAAW,CAChBgF,EAAYnF,KAAKH,QAAQyB,mBAAqB,CAC9D,KACiB,CAED,OAAO7E,CACvB,CACA,CACQuD,KAAK9C,iBAAiBiI,GACtB,OAAOA,CACf,EACIzF,EAAkByC,UAAUmC,kBAAoB,WAC5CtE,KAAK9C,iBAAiB,GACtB,OAAO,CACf,EACIwC,EAAkByC,UAAUkC,iBAAmB,WAC3C,IAAIe,EAAYpF,KAAKH,QAAQyB,mBAAqB,EAClDtB,KAAK9C,iBAAiBkI,GACtB,OAAOA,CACf,EACI1F,EAAkByC,UAAUkD,oBAAsB,WAC9C,IAAIC,EAAetF,KAAKuF,qCACxBvF,KAAK9C,iBAAiBoI,GACtB,OAAOA,CACf,EAKI5F,EAAkByC,UAAUqD,WAAa,SAAUC,EAAWpH,GAC1D,IAAK2B,KAAK2D,aAAa8B,GAAY,CAC/B,MACZ,CACQ,GAAIpH,EAAW,CACX2B,KAAKH,QAAQiC,2BAA2B2D,EAAWxO,EAAWG,0BAC9D4I,KAAKH,QAAQkC,4BAA4B0D,EAAW9N,EAAQM,cAAe,QACvF,KACa,CACD+H,KAAKH,QAAQqB,wBAAwBuE,EAAWxO,EAAWG,0BAC3D4I,KAAKH,QAAQkC,4BAA4B0D,EAAW9N,EAAQM,cAAe,OACvF,CACA,EACIyH,EAAkByC,UAAU2B,0BAA4B,SAAUrH,EAAO1F,GACrE,IAAIC,EAAKD,SAAY,EAAI,GAAKA,EAAI2M,EAAc1M,EAAG0M,YACnD,GAAI1D,KAAKR,gBAAkB/C,IAAUiH,EAAa,CAC9C,MACZ,CACQ,IAAIgC,EAAoBzO,EAAWI,yBACnC,GAAI2I,KAAKM,kBAAmB,CACxBoF,EAAoBzO,EAAWC,yBAC3C,CACQ,GAAI8I,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5CgH,KAAKH,QAAQiC,2BAA2B9B,KAAKR,cAAekG,EACxE,CACQ1F,KAAK2F,iCAAiClJ,GACtCuD,KAAK4F,mBAAmBnJ,GACxB,GAAIA,IAAU1D,EAAQC,YAAa,CAC/BgH,KAAKH,QAAQqB,wBAAwBzE,EAAOiJ,EACxD,CACQ1F,KAAKR,cAAgB/C,CAC7B,EAIIiD,EAAkByC,UAAUwD,iCAAmC,SAAUlJ,GAGrE,GAAIuD,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5CgH,KAAKQ,qBACDR,KAAKH,QAAQuB,4BAA4B3E,EAAO9E,EAAQK,aACxE,CACQ,IAAI6N,EAAgB7F,KAAKQ,uBAAyB,KAClD,IAAIsF,EAAgBD,EAAgBlO,EAAQK,aAAeL,EAAQU,cACnE,GAAI2H,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5CgH,KAAKH,QAAQkC,4BAA4B/B,KAAKR,cAAesG,EAAe,QACxF,CACQ,GAAIrJ,IAAU1D,EAAQC,YAAa,CAC/B,IAAI+M,EAAqBF,EAAgB7F,KAAKQ,qBAAuB,OACrER,KAAKH,QAAQkC,4BAA4BtF,EAAOqJ,EAAeC,EAC3E,CACA,EAIIrG,EAAkByC,UAAU6D,sBAAwB,WAChD,OAAOhG,KAAKO,gBAAkB5I,EAAQU,cAAgBV,EAAQE,YACtE,EAKI6H,EAAkByC,UAAU0B,gBAAkB,SAAUpH,GACpD,IAAIwJ,EAAqBjG,KAAKgG,wBAC9BhG,KAAKH,QAAQmC,iCAAiCvF,EAAO,MACrD,GAAIuD,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5CgH,KAAKH,QAAQkC,4BAA4B/B,KAAKR,cAAeyG,EAAoB,QAC7F,CACQjG,KAAKH,QAAQkC,4BAA4BtF,EAAOwJ,EAAoB,QACpEjG,KAAKR,cAAgB/C,CAC7B,EACIiD,EAAkByC,UAAUyB,mBAAqB,SAAUnH,GACvD,IAAIwJ,EAAqBjG,KAAKgG,wBAC9B,IAAK,IAAI7J,EAAI,EAAGA,EAAI6D,KAAKH,QAAQyB,mBAAoBnF,IAAK,CACtD,IAAI+J,EAAY,MAChB,GAAIzJ,EAAMlB,QAAQY,IAAM,EAAG,CACvB+J,EAAY,IAC5B,CACYlG,KAAKH,QAAQmC,iCAAiC7F,EAAG+J,GACjDlG,KAAKH,QAAQkC,4BAA4B5F,EAAG8J,EAAoBC,EAAY,OAAS,QACjG,CACQlG,KAAKR,cAAgB/C,CAC7B,EACIiD,EAAkByC,UAAUyD,mBAAqB,SAAUnJ,GACvD,GAAIuD,KAAK7C,mBAAqBpE,EAAQC,aAAeyD,IAAU,EAAG,CAI9DuD,KAAKH,QAAQkC,4BAA4B,EAAG,WAAY,KACpE,MACa,GAAI/B,KAAK7C,kBAAoB,GAAK6C,KAAK7C,mBAAqBV,EAAO,CACpEuD,KAAKH,QAAQkC,4BAA4B/B,KAAK7C,iBAAkB,WAAY,KACxF,CAIQ,KAAM6C,KAAKR,yBAAyBC,QAChCO,KAAKR,gBAAkB/C,EAAO,CAC9BuD,KAAKH,QAAQkC,4BAA4B/B,KAAKR,cAAe,WAAY,KACrF,CACQ,GAAI/C,IAAU1D,EAAQC,YAAa,CAC/BgH,KAAKH,QAAQkC,4BAA4BtF,EAAO,WAAY,IACxE,CACA,EAKIiD,EAAkByC,UAAU0C,iBAAmB,WAC3C,OAAO7E,KAAKK,uBAAyBL,KAAKS,gBACtCT,KAAKU,WACjB,EACIhB,EAAkByC,UAAU+B,wCAA0C,WAClE,IAAIiC,EAAcnG,KAAKuF,qCACvBvF,KAAK4F,mBAAmBO,EAChC,EACIzG,EAAkByC,UAAUoD,mCAAqC,WAE7D,IAAKvF,KAAK6E,mBAAoB,CAC1B,OAAOuB,KAAKC,IAAIrG,KAAK7C,iBAAkB,EACnD,CAEQ,UAAW6C,KAAKR,gBAAkB,UAC9BQ,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5C,OAAOgH,KAAKR,aACxB,CAEQ,GAAID,EAAcS,KAAKR,gBAAkBQ,KAAKR,cAAc/B,OAAS,EAAG,CACpE,OAAOuC,KAAKR,cAAc8G,QAAO,SAAUC,EAAU9B,GAAgB,OAAO2B,KAAKI,IAAID,EAAU9B,EAAc,GACzH,CAEQ,OAAO,CACf,EACI/E,EAAkByC,UAAUwB,aAAe,SAAUlH,GACjD,IAAIqD,EAAQE,KACZ,GAAIvD,aAAiBgD,MAAO,CACxB,IAAKO,KAAKS,eAAgB,CACtB,MAAM,IAAIgG,MAAM,8EAChC,CACY,GAAIhK,EAAMgB,SAAW,EAAG,CACpB,OAAO,IACvB,KACiB,CACD,OAAOhB,EAAMiK,MAAK,SAAUvK,GAAK,OAAO2D,EAAM6G,eAAexK,EAAG,GAChF,CACA,MACa,UAAWM,IAAU,SAAU,CAChC,GAAIuD,KAAKS,eAAgB,CACrB,MAAM,IAAIgG,MAAM,sFAAwFhK,EACxH,CACY,OAAOuD,KAAK2G,eAAelK,IACvBuD,KAAKK,uBAAyB5D,IAAU1D,EAAQC,WAChE,KACa,CACD,OAAO,KACnB,CACA,EACI0G,EAAkByC,UAAUwE,eAAiB,SAAUlK,GACnD,IAAImK,EAAW5G,KAAKH,QAAQyB,mBAC5B,OAAO7E,GAAS,GAAKA,EAAQmK,CACrC,EAMIlH,EAAkByC,UAAU2C,yBAA2B,SAAUrI,EAAOuI,GACpE,GAAIA,SAAwB,EAAG,CAAEA,EAAiB,IAAK,CACvD,GAAIhF,KAAKS,eAAgB,CACrBT,KAAK6G,sBAAsBpK,EAAOuI,EAC9C,KACa,CACDhF,KAAKyD,iBAAiBhH,EAClC,CACA,EACIiD,EAAkByC,UAAU0E,sBAAwB,SAAUpK,EAAOuI,GACjE,IAAIiB,EAAqBjG,KAAKgG,wBAC9B,IAAIE,EAAYlG,KAAKH,QAAQ4B,yBAAyBhF,GACtD,GAAIuI,EAAgB,CAChBkB,GAAaA,EACblG,KAAKH,QAAQmC,iCAAiCvF,EAAOyJ,EACjE,CACQlG,KAAKH,QAAQkC,4BAA4BtF,EAAOwJ,EAAoBC,EAAY,OAAS,SAGzF,IAAIY,EAAkB9G,KAAKR,gBAAkBzG,EAAQC,YACjD,GACAgH,KAAKR,cAAcuH,QACvB,GAAIb,EAAW,CACXY,EAAgBvK,KAAKE,EACjC,KACa,CACDqK,EAAkBA,EAAgBE,QAAO,SAAU7K,GAAK,OAAOA,IAAMM,CAAM,GACvF,CACQuD,KAAKR,cAAgBsH,CAC7B,EACIpH,EAAkByC,UAAUjF,iBAAmB,SAAUT,GACrDuD,KAAKH,QAAQ3C,iBAAiBT,GAC9BuD,KAAK7C,iBAAmBV,CAChC,EACIiD,EAAkByC,UAAUyC,UAAY,SAAUqC,GAC9C,IAAIhC,EAAQjF,KAAKH,QAAQyB,mBAEzB,GAAI2F,EAAyBxJ,SAAWwH,EAAO,CAC3CjF,KAAK4D,mBAAmB,GACpC,KACa,CAED,IAAIsD,EAAa,GACjB,IAAK,IAAI/K,EAAI,EAAGA,EAAI8I,EAAO9I,IAAK,CAC5B,IAAK6D,KAAKH,QAAQ+B,wBAAwBzF,EAAGlF,EAAWG,2BACpD6P,EAAyB1L,QAAQY,IAAM,EAAG,CAC1C+K,EAAW3K,KAAKJ,EACpC,CACA,CACY6D,KAAK4D,mBAAmBsD,EACpC,CACA,EAcIxH,EAAkByC,UAAUgF,mBAAqB,SAAUlK,EAAUmK,EAAehK,GAChF,IAAI0C,EAAQE,KACZ,GAAI5C,SAAmB,EAAG,CAAEA,EAAY,KAAM,CAC9C,IAAIJ,EAAO,CACPE,iBAAkB,SAAUT,GACxBqD,EAAM5C,iBAAiBT,EACvC,EACYU,iBAAkBiK,EAAgBA,EAAgBpH,KAAK7C,iBACvDF,SAAUA,EACVf,uBAAwB8D,KAAK9D,uBAC7BkB,UAAWA,EACXC,sBAAuB,SAAUZ,GAAS,OAAOqD,EAAMD,QAAQ+B,wBAAwBnF,EAAOxF,EAAWG,yBAA0B,GAEvI,OAAOiQ,EAAoBrK,EAAMgD,KAAKY,eAC9C,EAOIlB,EAAkByC,UAAUG,yBAA2B,WACnD,OAAOgF,EAA0BtH,KAAKH,QAAQyB,mBAAoBtB,KAAKH,QAAQqC,sBACvF,EAIIxC,EAAkByC,UAAUoF,qBAAuB,WAC/CC,EAAsBxH,KAAKY,eACnC,EACI,OAAOlB,CACX,CA1oBqB,CA0oBnB+H;;;;;;;;;;;;;;;;;;;;;;GC9oBC,IAACC,EAAyB,SAAU/H,GACnCC,EAAU8H,EAAS/H,GACnB,SAAS+H,IACL,OAAO/H,IAAW,MAAQA,EAAOgI,MAAM3H,KAAM4H,YAAc5H,IACnE,CACIc,OAAOC,eAAe2G,EAAQvF,UAAW,WAAY,CACjD1H,IAAK,SAAUgI,GACXzC,KAAK6H,WAAWnF,uBAAuBD,EACnD,EACQzB,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,eAAgB,CACrDnH,IAAK,WACD,OAAOyE,MAAMqI,KAAK9H,KAAK+H,KAAKC,iBAAiB,IAAMhI,KAAKiI,aAAahR,EAAWE,kBAC5F,EACQ6J,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,YAAa,CAClD1H,IAAK,SAAUgI,GACXzC,KAAK6H,WAAWrF,aAAaC,EACzC,EACQzB,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,sBAAuB,CAI5DnH,IAAK,WACD,OAAOgF,KAAK6H,WAAW1E,uBACnC,EACQnC,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,eAAgB,CAKrD1H,IAAK,SAAUkG,GACXX,KAAK6H,WAAW3E,gBAAgBvC,EAC5C,EACQK,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,kBAAmB,CACxD1H,IAAK,SAAU4F,GACXL,KAAK6H,WAAWlF,mBAAmBtC,EAC/C,EACQW,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe2G,EAAQvF,UAAW,gBAAiB,CACtDnH,IAAK,WACD,OAAOgF,KAAK6H,WAAWrE,kBACnC,EACQ/I,IAAK,SAAUgC,GACXuD,KAAK6H,WAAWpE,iBAAiBhH,EAC7C,EACQuE,WAAY,MACZC,aAAc,OAElByG,EAAQQ,SAAW,SAAUH,GACzB,OAAO,IAAIL,EAAQK,EAC3B,EACIL,EAAQvF,UAAUgG,mBAAqB,WACnCnI,KAAKoI,mBACDlP,KAAsB8G,KAAK+H,KAAKM,QACpC,GAAIrI,KAAKoI,mBAAoB,CACzBpI,KAAKiI,aAAexQ,CAChC,MACa,GAAI2G,EAAQ4B,KAAK+H,KAAMpQ,EAAQgB,qBAAsB,CACtDqH,KAAKiI,aAAevQ,CAChC,KACa,CACDsI,KAAKiI,aACDnH,OAAOnE,OAAO1F,GACTqP,QAAO,SAAUgC,EAAKC,GACvBD,EAAIC,GAAaA,EACjB,OAAOD,CAC3B,GAAmB,GACnB,CACQtI,KAAK+E,YAAc/E,KAAKwI,iBAAiBC,KAAKzI,MAC9CA,KAAKzB,cAAgByB,KAAK0I,mBAAmBD,KAAKzI,MAClDA,KAAK2I,qBAAuB3I,KAAK4I,mBAAmBH,KAAKzI,MACzDA,KAAK6I,sBAAwB7I,KAAK8I,oBAAoBL,KAAKzI,MAC3DA,KAAK+I,OAAO,UAAW/I,KAAKzB,eAC5ByB,KAAK+I,OAAO,QAAS/I,KAAK+E,aAC1B/E,KAAK+I,OAAO,UAAW/I,KAAK2I,sBAC5B3I,KAAK+I,OAAO,WAAY/I,KAAK6I,uBAC7B7I,KAAKoC,SACLpC,KAAKgJ,qBACLhJ,KAAKiJ,iBACb,EACIvB,EAAQvF,UAAU+G,QAAU,WACxBlJ,KAAKmJ,SAAS,UAAWnJ,KAAKzB,eAC9ByB,KAAKmJ,SAAS,QAASnJ,KAAK+E,aAC5B/E,KAAKmJ,SAAS,UAAWnJ,KAAK2I,sBAC9B3I,KAAKmJ,SAAS,WAAYnJ,KAAK6I,sBACvC,EACInB,EAAQvF,UAAUC,OAAS,WACvB,IAAIgH,EAAYpJ,KAAK+H,KAAKsB,aAAa1R,EAAQO,kBAC/C8H,KAAKsJ,SAAWF,IAAczR,EAAQQ,4BACtC,IAAIoR,EAAe,IAAMvJ,KAAKiI,aAAahR,EAAWE,iBAAmB,mBACzE,IAAIqS,EAAgB7R,EAAQiB,yBAE5B,IAAI6Q,EAAUzJ,KAAK+H,KAAKC,iBAAiBuB,GACzC,GAAIE,EAAQhM,OAAQ,CAChBgC,MAAM0C,UAAUzF,QAAQqD,KAAK0J,GAAS,SAAUC,GAC5CA,EAAGC,aAAa,WAAY,KAC5C,GACA,CAEQ,IAAIC,EAAoB5J,KAAK+H,KAAKC,iBAAiBwB,GACnD,GAAII,EAAkBnM,OAAQ,CAC1BgC,MAAM0C,UAAUzF,QAAQqD,KAAK6J,GAAmB,SAAUF,GACtDA,EAAGC,aAAa,WAAY,KAC5C,GACA,CACQ,GAAI3J,KAAKoI,mBAAoB,CACzBpI,KAAK6H,WAAWvE,wBAAwB,KACpD,CACQtD,KAAK6H,WAAWzF,QACxB,EAMIsF,EAAQvF,UAAU0H,eAAiB,SAAUC,GACzC,IAAI/S,EACJ,IAAIqF,EAAc0N,EAAKC,cAAc,IAAM/J,KAAKiI,aAAahR,EAAWM,+BACxE,GAAIyI,KAAKoI,oBAAsBhM,EAAa,CACxC,OAAQrF,EAAKqF,IAAgB,MAAQA,SAAqB,OAAS,EAAIA,EAAY4N,eAAiB,MAAQjT,SAAY,EAAIA,EAAK,EAC7I,CACQ,IAAIkT,EAAiBH,EAAKC,cAAc,IAAM/J,KAAKiI,aAAahR,EAAWK,uBAC3E,OAAQ2S,GAAkBA,EAAeD,aAAgB,EACjE,EAIItC,EAAQvF,UAAU6G,mBAAqB,WACnC,IAAIlJ,EAAQE,KACZA,KAAKkK,cACD9L,EAAQ4B,KAAK+H,KAAMpQ,EAAQW,iCAC/B,GAAI0H,KAAKoI,oBAAsBpI,KAAKkK,cAAe,CAC/C,IAAIC,EAAY1K,MAAMqI,KAAK9H,KAAK+H,KAAKC,iBAAiBrQ,EAAQmB,yBAAyB,SAAUsR,GAAY,OAAOtK,EAAMuK,aAAa9O,QAAQ6O,EAAU,IACzJ,GAAIhM,EAAQ4B,KAAK+H,KAAMpQ,EAAQY,gCAAiC,CAC5DyH,KAAKR,cAAgB2K,CACrC,MACiB,GAAIA,EAAU1M,OAAS,EAAG,CAC3BuC,KAAKR,cAAgB2K,EAAU,EAC/C,CACY,MACZ,CACQ,IAAIG,EAAoBtK,KAAK+H,KAAKC,iBAAiBrQ,EAAQS,6BAC3D,IAAImS,EAAwBvK,KAAK+H,KAAKgC,cAAcpS,EAAQI,6BAC5D,GAAIuS,EAAkB7M,OAAQ,CAC1B,IAAI+M,EAAmBxK,KAAK+H,KAAKC,iBAAiBrQ,EAAQG,gCAC1DkI,KAAKR,cAAgBC,MAAMqI,KAAK0C,GAAkB,SAAUJ,GAAY,OAAOtK,EAAMuK,aAAa9O,QAAQ6O,EAAU,GAChI,MACa,GAAIG,EAAuB,CAC5BvK,KAAKR,cAAgBQ,KAAKqK,aAAa9O,QAAQgP,EAC3D,CACA,EAMI7C,EAAQvF,UAAUqD,WAAa,SAAUC,EAAWpH,GAChD2B,KAAK6H,WAAWrC,WAAWC,EAAWpH,EAC9C,EAWIqJ,EAAQvF,UAAUgF,mBAAqB,SAAUlK,EAAUmK,GACvD,OAAOpH,KAAK6H,WAAWV,mBAAmBlK,EAAUmK,EAAgC,KAC5F,EACIM,EAAQvF,UAAUsI,qBAAuB,WACrC,IAAI3K,EAAQE,KAIZ,IAAIH,EAAU,CACVqB,wBAAyB,SAAUzE,EAAO8L,GACtC,IAAImC,EAAU5K,EAAMuK,aAAa5N,GACjC,GAAIiO,EAAS,CACTA,EAAQC,UAAUtQ,IAAIyF,EAAMmI,aAAaM,GAC7D,CACA,EACYrL,iBAAkB,SAAUT,GACxB,IAAIiO,EAAU5K,EAAMuK,aAAa5N,GACjC,GAAIiO,EAAS,CACTA,EAAQE,OAC5B,CACA,EACYxJ,4BAA6B,SAAU3E,EAAOoO,GAC1C,OAAO/K,EAAMuK,aAAa5N,GAAO4M,aAAawB,EAC9D,EACYxJ,uBAAwB,WACpB,OAAOvB,EAAMuK,aAAa9O,QAAQuP,SAASC,cAC3D,EACYzJ,iBAAkB,WAAc,OAAOxB,EAAMuK,aAAa5M,MAAO,EACjEyE,sBAAuB,SAAUzF,GAC7B,OAAOqD,EAAM+J,eAAe/J,EAAMuK,aAAa5N,GAC/D,EACY8E,mBAAoB,SAAU9E,GAC1B,IAAI2N,EAAWtK,EAAMuK,aAAa5N,GAClC,QAAS2N,EAASL,cAAcpS,EAAQc,kBACxD,EACY+I,gBAAiB,SAAU/E,GACvB,IAAI2N,EAAWtK,EAAMuK,aAAa5N,GAClC,QAAS2N,EAASL,cAAcpS,EAAQkB,eACxD,EACY4I,yBAA0B,SAAUhF,GAChC,IAAI2N,EAAWtK,EAAMuK,aAAa5N,GAClC,IAAIuO,EAAWZ,EAASL,cAAcpS,EAAQc,mBAC9C,OAAOuS,EAASC,OAChC,EACYvJ,kBAAmB,WACf,OAAO5B,EAAMiI,OAAS+C,SAASC,eAC3BjL,EAAMiI,KAAKmD,SAASJ,SAASC,cACjD,EACYpJ,cAAe,WAAc,OAAOmJ,SAASC,gBAAkBjL,EAAMiI,IAAK,EAC1EnG,wBAAyB,SAAUnF,EAAO8L,GACtC,OAAOzI,EAAMuK,aAAa5N,GAAOkO,UAAUO,SAASpL,EAAMmI,aAAaM,GACvF,EACY1G,aAAc,SAAUpF,GACpBqD,EAAMqL,KAAKxT,EAAQC,aAAc,CAAE6E,MAAOA,GAA6B,KACvF,EACYqF,2BAA4B,SAAUrF,EAAO8L,GACzC,IAAImC,EAAU5K,EAAMuK,aAAa5N,GACjC,GAAIiO,EAAS,CACTA,EAAQC,UAAUS,OAAOtL,EAAMmI,aAAaM,GAChE,CACA,EACYxG,4BAA6B,SAAUtF,EAAOoO,EAAMpI,GAChD,IAAIiI,EAAU5K,EAAMuK,aAAa5N,GACjC,GAAIiO,EAAS,CACTA,EAAQf,aAAakB,EAAMpI,EAC/C,CACA,EACYT,iCAAkC,SAAUvF,EAAOyJ,GAC/C,IAAIkE,EAAWtK,EAAMuK,aAAa5N,GAClC,IAAIuO,EAAWZ,EAASL,cAAcpS,EAAQa,yBAC9CwS,EAASC,QAAU/E,EACnB,IAAI1H,EAAQsM,SAASO,YAAY,SACjC7M,EAAM8M,UAAU,SAAU,KAAM,MAChCN,EAASO,cAAc/M,EACvC,EACYyD,+BAAgC,SAAU+B,EAAewH,GACrD,IAAId,EAAU5K,EAAMuK,aAAarG,GACjC,IAAIyH,EAAW9T,EAAQe,kCACvB+G,MAAM0C,UAAUzF,QAAQqD,KAAK2K,EAAQ1C,iBAAiByD,IAAW,SAAU/B,GACvEA,EAAGC,aAAa,WAAY6B,EAChD,GACA,GAEQ,OAAO,IAAI9L,EAAkBG,EACrC,EAKI6H,EAAQvF,UAAU8G,gBAAkB,WAChC,GAAIjJ,KAAKoI,oBAAsBpI,KAAKkK,cAAe,CAC/C,IAAKlK,KAAK+H,KAAKgC,cAAc,IAAM/J,KAAKiI,aAAahR,EAAWE,iBAAmB,kBAAqB,CACpG,IAAIsF,EAAQuD,KAAK0L,oBACjB,GAAIjP,KAAW,EAAG,CACduD,KAAKqK,aAAa5N,GAAOkP,SAAW,CACxD,CACA,CACA,CACA,EACIjE,EAAQvF,UAAUuJ,kBAAoB,WAClC,GAAI1L,KAAKR,yBAAyBC,OAASO,KAAKR,cAAc/B,OAAS,EAAG,CACtE,OAAOuC,KAAKR,cAAc,EACtC,CACQ,UAAWQ,KAAKR,gBAAkB,UAC9BQ,KAAKR,gBAAkBzG,EAAQC,YAAa,CAC5C,OAAOgH,KAAKR,aACxB,CACQ,IAAIkK,EAAK1J,KAAK+H,KAAKgC,cAAc,IAAM/J,KAAKiI,aAAahR,EAAWE,iBAAmB,SAAW6I,KAAKiI,aAAahR,EAAWG,0BAA4B,KAC3J,GAAIsS,IAAO,KAAM,CACb,OAAQ,CACpB,CACQ,OAAO1J,KAAK4L,iBAAiBlC,EACrC,EAKIhC,EAAQvF,UAAUyJ,iBAAmB,SAAUlC,GAC3C,IAAImC,EAAgBC,EAAQpC,EAAI,IAAM1J,KAAKiI,aAAahR,EAAWE,iBAAmB,MAAQ6I,KAAKiI,aAAahR,EAAWO,OAE3H,GAAIqU,GACAzN,EAAQyN,EAAe,IAAM7L,KAAKiI,aAAahR,EAAWE,kBAAmB,CAC7E,OAAO6I,KAAKqK,aAAa9O,QAAQsQ,EAC7C,CACQ,OAAQ,CAChB,EAKInE,EAAQvF,UAAUyG,mBAAqB,SAAUhO,GAC7C,IAAI6B,EAAQuD,KAAK4L,iBAAiBhR,EAAIQ,QACtC4E,KAAK6H,WAAW9D,cAActH,EACtC,EAKIiL,EAAQvF,UAAU2G,oBAAsB,SAAUlO,GAC9C,IAAI6B,EAAQuD,KAAK4L,iBAAiBhR,EAAIQ,QACtC4E,KAAK6H,WAAW5D,eAAexH,EACvC,EAKIiL,EAAQvF,UAAUuG,mBAAqB,SAAU9N,GAC7C,IAAI6B,EAAQuD,KAAK4L,iBAAiBhR,EAAIQ,QACtC,IAAIA,EAASR,EAAIQ,OACjB4E,KAAK6H,WAAWtJ,cAAc3D,EAAKQ,EAAOuP,UAAUO,SAASlL,KAAKiI,aAAahR,EAAWE,kBAAmBsF,EACrH,EAKIiL,EAAQvF,UAAUqG,iBAAmB,SAAU5N,GAC3C,IAAI6B,EAAQuD,KAAK4L,iBAAiBhR,EAAIQ,QACtC,IAAIA,EAASR,EAAIQ,OAGjB,IAAI4J,GAAkB5G,EAAQhD,EAAQzD,EAAQa,yBAC9CwH,KAAK6H,WAAW9C,YAAYtI,EAAOuI,EAC3C,EACI,OAAO0C,CACX,CA7VW,CA6VTqE,U"}