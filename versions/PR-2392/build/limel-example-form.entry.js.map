{"version":3,"names":["schema","title","description","type","required","properties","name","default","minLength","maxLength","email","format","home","readOnly","happiness","minimum","maximum","multipleOf","bananas","date","color","oneOf","const","sidekicks","uniqueItems","minItems","items","anyOf","newsletters","params","additionalProperties","FormExample","this","handleFormChange","event","formData","detail","handleFormValidate","valid","console","log","handleSubmit","json","JSON","stringify","alert","secretHideout","hidden","entryCode","render","h","onChange","onValidate","value","label","primary","disabled","onClick"],"sources":["./src/components/form/examples/basic-schema.ts","./src/components/form/examples/basic-form.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\n\ntype SideKick =\n    | 'super'\n    | 'widow'\n    | 'america'\n    | 'squirrel'\n    | 'devil'\n    | 'marvel'\n    | 'fantastic';\n\ntype Color = 'red' | 'yellow' | 'green' | 'blue' | 'black';\n\nexport interface BasicFormData {\n    name?: string;\n    home?: string;\n    sidekicks?: SideKick[];\n    newsletters?: boolean;\n    params?: Record<string, any>;\n    date?: string;\n    email?: string;\n    happiness?: number;\n    bananas?: number;\n    color?: Color;\n}\n\nexport const schema: FormSchema<BasicFormData> = {\n    title: 'Registration form',\n    description: 'Please enter your personal information',\n    type: 'object',\n    required: ['name', 'email', 'newsletters'],\n    properties: {\n        name: {\n            type: 'string',\n            title: 'Name',\n            default: 'Batman',\n            description: 'Enter your heroic name',\n            minLength: 5,\n            maxLength: 20,\n        },\n        email: {\n            type: 'string',\n            title: 'Email',\n            description: 'Enter your email address',\n            format: 'email',\n        },\n        home: {\n            type: 'string',\n            title: 'Home',\n            default: 'Earth',\n            readOnly: true,\n        },\n        happiness: {\n            type: 'number',\n            title: 'Happiness',\n            description: 'How happy are you?',\n            minimum: 0,\n            maximum: 1,\n            multipleOf: 0.01,\n        },\n        bananas: {\n            type: 'number',\n            title: 'Bananas',\n            description: 'How many bananas do you want?',\n            minimum: 0,\n            maximum: 50,\n            multipleOf: 10,\n        },\n        date: {\n            type: 'string',\n            title: 'Birthdate',\n            format: 'date',\n            description: 'Pick a nice date!',\n        },\n        color: {\n            type: 'string',\n            title: 'Favorite cape color',\n            description: 'Preferably matching your boots',\n            oneOf: [\n                {\n                    type: 'string',\n                    const: 'red',\n                    title: 'Red',\n                },\n                {\n                    type: 'string',\n                    const: 'yellow',\n                    title: 'Yellow',\n                },\n                {\n                    type: 'string',\n                    const: 'green',\n                    title: 'Green',\n                },\n                {\n                    type: 'string',\n                    const: 'blue',\n                    title: 'Blue',\n                },\n                {\n                    type: 'string',\n                    const: 'black',\n                    title: 'Black',\n                },\n            ],\n        },\n        sidekicks: {\n            type: 'array',\n            title: 'Sidekicks',\n            description: 'Please select your sidekicks',\n            uniqueItems: true,\n            minItems: 2,\n            items: {\n                title: 'Friends',\n                type: 'string',\n                anyOf: [\n                    {\n                        type: 'string',\n                        const: 'super',\n                        title: 'Superman',\n                    },\n                    {\n                        type: 'string',\n                        const: 'widow',\n                        title: 'Black Widow',\n                    },\n                    {\n                        type: 'string',\n                        const: 'america',\n                        title: 'Captain America',\n                    },\n                    {\n                        type: 'string',\n                        const: 'squirrel',\n                        title: 'Squirrel Girl',\n                    },\n                    {\n                        type: 'string',\n                        const: 'devil',\n                        title: 'Daredevil',\n                    },\n                    {\n                        type: 'string',\n                        const: 'marvel',\n                        title: 'Captain Marvel',\n                    },\n                    {\n                        type: 'string',\n                        const: 'fantastic',\n                        title: 'Mr. Fantastic',\n                    },\n                ],\n            },\n        },\n        newsletters: {\n            type: 'boolean',\n            title: 'I want to receive daily newsletters!',\n            default: false,\n            const: true,\n        },\n        params: {\n            type: 'object',\n            title: 'Parameters',\n            description: 'Additional data to send',\n            additionalProperties: true,\n        },\n    },\n};\n","import { ValidationStatus } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\nimport { schema, BasicFormData } from './basic-schema';\n\n/**\n * Basic form with validation\n *\n * @sourceFile basic-schema.ts\n */\n@Component({\n    tag: 'limel-example-form',\n    shadow: true,\n})\nexport class FormExample {\n    @State()\n    private formData: BasicFormData = {\n        date: '1922-12-28',\n        params: {\n            secretHideout: 'Cave',\n            hidden: true,\n            entryCode: [1, 1, 2, 3, 5, 8],\n        },\n    };\n\n    @State()\n    private valid = true;\n\n    public render() {\n        return [\n            <limel-form\n                onChange={this.handleFormChange}\n                onValidate={this.handleFormValidate}\n                value={this.formData}\n                schema={schema}\n            />,\n            <br />,\n            <limel-button\n                label=\"Submit\"\n                primary={true}\n                disabled={!this.valid}\n                onClick={this.handleSubmit}\n            />,\n            <limel-example-value value={this.formData} />,\n        ];\n    }\n\n    private handleFormChange = (event) => {\n        this.formData = event.detail;\n    };\n\n    private handleFormValidate = (event: CustomEvent<ValidationStatus>) => {\n        this.valid = event.detail.valid;\n        console.log(\n            'Basic form with validation - handleFormValidate:',\n            event.detail,\n        );\n    };\n\n    private handleSubmit = () => {\n        const json = JSON.stringify(this.formData, null, '    ');\n        alert(`Sending information to villains...\\n\\n${json}`);\n    };\n}\n"],"mappings":"+CA0BO,MAAMA,EAAoC,CAC7CC,MAAO,oBACPC,YAAa,yCACbC,KAAM,SACNC,SAAU,CAAC,OAAQ,QAAS,eAC5BC,WAAY,CACRC,KAAM,CACFH,KAAM,SACNF,MAAO,OACPM,QAAS,SACTL,YAAa,yBACbM,UAAW,EACXC,UAAW,IAEfC,MAAO,CACHP,KAAM,SACNF,MAAO,QACPC,YAAa,2BACbS,OAAQ,SAEZC,KAAM,CACFT,KAAM,SACNF,MAAO,OACPM,QAAS,QACTM,SAAU,MAEdC,UAAW,CACPX,KAAM,SACNF,MAAO,YACPC,YAAa,qBACba,QAAS,EACTC,QAAS,EACTC,WAAY,KAEhBC,QAAS,CACLf,KAAM,SACNF,MAAO,UACPC,YAAa,gCACba,QAAS,EACTC,QAAS,GACTC,WAAY,IAEhBE,KAAM,CACFhB,KAAM,SACNF,MAAO,YACPU,OAAQ,OACRT,YAAa,qBAEjBkB,MAAO,CACHjB,KAAM,SACNF,MAAO,sBACPC,YAAa,iCACbmB,MAAO,CACH,CACIlB,KAAM,SACNmB,MAAO,MACPrB,MAAO,OAEX,CACIE,KAAM,SACNmB,MAAO,SACPrB,MAAO,UAEX,CACIE,KAAM,SACNmB,MAAO,QACPrB,MAAO,SAEX,CACIE,KAAM,SACNmB,MAAO,OACPrB,MAAO,QAEX,CACIE,KAAM,SACNmB,MAAO,QACPrB,MAAO,WAInBsB,UAAW,CACPpB,KAAM,QACNF,MAAO,YACPC,YAAa,+BACbsB,YAAa,KACbC,SAAU,EACVC,MAAO,CACHzB,MAAO,UACPE,KAAM,SACNwB,MAAO,CACH,CACIxB,KAAM,SACNmB,MAAO,QACPrB,MAAO,YAEX,CACIE,KAAM,SACNmB,MAAO,QACPrB,MAAO,eAEX,CACIE,KAAM,SACNmB,MAAO,UACPrB,MAAO,mBAEX,CACIE,KAAM,SACNmB,MAAO,WACPrB,MAAO,iBAEX,CACIE,KAAM,SACNmB,MAAO,QACPrB,MAAO,aAEX,CACIE,KAAM,SACNmB,MAAO,SACPrB,MAAO,kBAEX,CACIE,KAAM,SACNmB,MAAO,YACPrB,MAAO,oBAKvB2B,YAAa,CACTzB,KAAM,UACNF,MAAO,uCACPM,QAAS,MACTe,MAAO,MAEXO,OAAQ,CACJ1B,KAAM,SACNF,MAAO,aACPC,YAAa,0BACb4B,qBAAsB,Q,MCvJrBC,EAAW,M,yBAiCZC,KAAAC,iBAAoBC,IACxBF,KAAKG,SAAWD,EAAME,MAAM,EAGxBJ,KAAAK,mBAAsBH,IAC1BF,KAAKM,MAAQJ,EAAME,OAAOE,MAC1BC,QAAQC,IACJ,mDACAN,EAAME,OACT,EAGGJ,KAAAS,aAAe,KACnB,MAAMC,EAAOC,KAAKC,UAAUZ,KAAKG,SAAU,KAAM,QACjDU,MAAM,yCAAyCH,IAAO,E,cA7CxB,CAC9BvB,KAAM,aACNU,OAAQ,CACJiB,cAAe,OACfC,OAAQ,KACRC,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,K,WAKnB,I,CAETC,SACH,MAAO,CACHC,EAAA,cACIC,SAAUnB,KAAKC,iBACfmB,WAAYpB,KAAKK,mBACjBgB,MAAOrB,KAAKG,SACZnC,OAAQA,IAEZkD,EAAA,WACAA,EAAA,gBACII,MAAM,SACNC,QAAS,KACTC,UAAWxB,KAAKM,MAChBmB,QAASzB,KAAKS,eAElBS,EAAA,uBAAqBG,MAAOrB,KAAKG,W"}