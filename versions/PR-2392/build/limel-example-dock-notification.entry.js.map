{"version":3,"names":["dockNotificationCss","DockNotificationExample","this","handleSelected","event","setSelection","item","Object","assign","selected","id","detail","dockItems","map","dockFooterItems","label","icon","badge","dockMenu","componentName","render","h","class","accessibleLabel","onItemSelected"],"sources":["./src/components/dock/examples/dock-notification.scss?tag=limel-example-dock-notification&encapsulation=shadow","./src/components/dock/examples/dock-notification.tsx"],"sourcesContent":[":host {\n    --popover-surface-width: min(100vw, 15rem);\n}\n\n.application {\n    background-color: rgb(var(--contrast-400));\n    border: 1px solid rgb(var(--contrast-500));\n    overflow: hidden;\n    border-radius: 0.5rem;\n    height: 30rem;\n}\n","import { Component, h, State } from '@stencil/core';\nimport { DockItem } from '@limetech/lime-elements';\n\n/**\n * Displaying a notification badge\n *\n * It is possible to display a notification badge on each individual\n * button in the Dock. Badges are supposed to inform the user that\n * there is something in the menu that requires their attention.\n *\n * This is typically done by displaying a number, which summarizes\n * the quantity of the items that require user's attention.\n *\n * :::important\n * The menus are not a part of the Dock. They are individual components\n * that you develop separately. Make sure that the information\n * and interactions regarding the notifications are correctly handled.\n *\n * For example, when the items that require user's attention are\n * seen or handled by the user after opening the menu, the badge on the\n * Dock button should disappear.\n * :::\n *\n * When this quantity is unclear or undefined, you can simply pass an\n * empty string (`badge: ''`), which will only render a circle on the button.\n * This is enough to attract user's attention.\n * However, it is also possible to use a short string such as \"Â·\" or \"!\"\n * for such cases, if considered necessary.\n *\n * :::warning\n * Do not negatively exploit this possibility and spam users' awareness.\n * The Dock is the most important and most dominant structural part of\n * the UI of your application. Therefore crowding it with too much noise\n * _will_ negatively affect the user experience.\n * :::\n *\n *\n */\n@Component({\n    tag: 'limel-example-dock-notification',\n    shadow: true,\n    styleUrl: 'dock-notification.scss',\n})\nexport class DockNotificationExample {\n    @State()\n    private dockItems: DockItem[] = [\n        {\n            id: 'home',\n            label: 'Home',\n            selected: true,\n            icon: '-lime-logo-go-filled',\n        },\n        {\n            id: 'tables',\n            label: 'Tables',\n            icon: 'insert_table',\n        },\n        {\n            id: 'search',\n            label: 'Search',\n            icon: 'search',\n            badge: '',\n        },\n    ];\n\n    @State()\n    private dockFooterItems: DockItem[] = [\n        {\n            id: 'user',\n            label: 'Account',\n            icon: 'user',\n            badge: 5,\n            dockMenu: { componentName: 'my-custom-menu-with-notifications' },\n        },\n    ];\n\n    public render() {\n        return (\n            <div class=\"application\">\n                <limel-dock\n                    accessibleLabel=\"Dock Example: dock with notification badges\"\n                    dockItems={this.dockItems}\n                    dockFooterItems={this.dockFooterItems}\n                    onItemSelected={this.handleSelected}\n                />\n            </div>\n        );\n    }\n\n    private handleSelected = (event: CustomEvent<DockItem>) => {\n        const setSelection = (item: DockItem) => {\n            return {\n                ...item,\n                selected: item.id === event.detail.id,\n            };\n        };\n\n        this.dockItems = this.dockItems.map(setSelection);\n        this.dockFooterItems = this.dockFooterItems.map(setSelection);\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAsB,sM,MC2CfC,EAAuB,M,yBA8CxBC,KAAAC,eAAkBC,IACtB,MAAMC,EAAgBC,GAClBC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPG,SAAUH,EAAKI,KAAON,EAAMO,OAAOD,KAI3CR,KAAKU,UAAYV,KAAKU,UAAUC,IAAIR,GACpCH,KAAKY,gBAAkBZ,KAAKY,gBAAgBD,IAAIR,EAAa,E,eArDjC,CAC5B,CACIK,GAAI,OACJK,MAAO,OACPN,SAAU,KACVO,KAAM,wBAEV,CACIN,GAAI,SACJK,MAAO,SACPC,KAAM,gBAEV,CACIN,GAAI,SACJK,MAAO,SACPC,KAAM,SACNC,MAAO,K,qBAKuB,CAClC,CACIP,GAAI,OACJK,MAAO,UACPC,KAAM,OACNC,MAAO,EACPC,SAAU,CAAEC,cAAe,sC,CAI5BC,SACH,OACIC,EAAA,OAAKC,MAAM,eACPD,EAAA,cACIE,gBAAgB,8CAChBX,UAAWV,KAAKU,UAChBE,gBAAiBZ,KAAKY,gBACtBU,eAAgBtB,KAAKC,iB"}