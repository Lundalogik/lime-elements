{"version":3,"names":["tableCss","TableExampleLayoutDefault","invoices","title","field","horizontalAlign","render","h","data","this","tableData","columns","layout"],"sources":["./src/components/table/examples/table.scss?tag=limel-example-table-layout-default&encapsulation=shadow","./src/components/table/examples/table-layout-default.tsx"],"sourcesContent":[":host {\n    display: block;\n}\n\nlimel-table {\n    height: 300px;\n}\n","import { Component, h, State } from '@stencil/core';\nimport { Column } from '@limetech/lime-elements';\nimport { invoices, Invoice } from './invoices';\n\n/**\n * Layout\n * Columns and their content can be decisive factors in how a table is\n * preferred to rendered in the user interface. To set your preferred\n * rendering, choose one of the available `layout` properties.\n *\n *\n * ```tsx\n * layout=\"default\"\n * ```\n * The default layout resizes the table's columns,\n * in a way that each column becomes as wide as the data it holds.\n *\n * :::important\n * Note that be default, table columns have a maximum width of `40rem`.\n * This means, they can never grow wider than that, unless you specify\n * another size using the `--table-max-column-width` CSS variable.\n *\n * This applies to all other layouts presented further down as well!\n * :::\n *\n * If there is additional space available on the right side of the last column,\n * rows will stretch to fill the space and look visually as wide as the table.\n *\n * :::note\n * While scrolling, new rows get lazy-loaded. Since the new data may have wider\n * length, it might affect rendering of the layout in real-time.\n * This means columns can get resized while user is scrolling down.\n * :::\n *\n * :::tip\n * It is also possible to affect internal layout of each column, by specifying\n * `horizontalAlign` on the column headers, to `left` (default), `center`,\n * or `right`. This basically defines the text-alignment for all the cells in that column.\n * :::\n *\n * @sourceFile invoices.ts\n */\n@Component({\n    tag: 'limel-example-table-layout-default',\n    styleUrl: 'table.scss',\n    shadow: true,\n})\nexport class TableExampleLayoutDefault {\n    @State()\n    private tableData: Invoice[] = invoices;\n\n    @State()\n    public columns: Column[] = [\n        { title: 'Invoice no.', field: 'invoiceNumber' },\n        { title: 'Invoice Date', field: 'invoiceDate' },\n        { title: 'Reference Person', field: 'referencePerson' },\n        {\n            title: 'Amount',\n            field: 'amount',\n            horizontalAlign: 'right',\n        },\n    ];\n\n    render() {\n        return (\n            <limel-table\n                data={this.tableData}\n                columns={this.columns}\n                layout=\"default\"\n            />\n        );\n    }\n}\n"],"mappings":"qFAAA,MAAMA,EAAW,gD,MC+CJC,EAAyB,M,wCAEHC,E,aAGJ,CACvB,CAAEC,MAAO,cAAeC,MAAO,iBAC/B,CAAED,MAAO,eAAgBC,MAAO,eAChC,CAAED,MAAO,mBAAoBC,MAAO,mBACpC,CACID,MAAO,SACPC,MAAO,SACPC,gBAAiB,S,CAIzBC,SACI,OACIC,EAAA,eACIC,KAAMC,KAAKC,UACXC,QAASF,KAAKE,QACdC,OAAO,W"}