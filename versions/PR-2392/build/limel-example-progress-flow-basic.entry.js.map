{"version":3,"names":["ProgressFlowBasicExample","this","handleChange","event","flowItems","map","item","Object","assign","selected","value","_a","detail","setDisabled","stopPropagation","disabled","setReadonly","readonly","text","icon","render","h","onChange","checked","label","find","i"],"sources":["./src/components/progress-flow/examples/progress-flow-basic.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\nimport { FlowItem } from '@limetech/lime-elements';\n\n/**\n * Basic Example\n *\n * Progress flow can visualize linear process, consisting of distinct steps.\n * Sometimes, this is a great alternative to use instead of `limel-select`.\n * For instance, when there are too few options available to choose from, and\n * the options have an incremental order.\n *\n * Each step can optionally get an icon, to help users understand its meaning\n * faster, and recognize it quicker next time.\n */\n@Component({\n    tag: 'limel-example-progress-flow-basic',\n    shadow: true,\n})\nexport class ProgressFlowBasicExample {\n    @State()\n    private disabled = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private flowItems: FlowItem[] = [\n        {\n            value: '1',\n            text: 'Step 1',\n            selected: true,\n            icon: 'add_shopping_cart',\n        },\n        { value: '2', text: 'Step 2', icon: 'shopping_cart_loaded' },\n        { value: '3', text: 'Step 3', icon: 'insert_money_euro' },\n    ];\n\n    public render() {\n        return [\n            <limel-progress-flow\n                flowItems={this.flowItems}\n                onChange={this.handleChange}\n                disabled={this.disabled}\n                readonly={this.readonly}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n            </limel-example-controls>,\n            <limel-example-value\n                value={this.flowItems.find((i) => i.selected)}\n            />,\n        ];\n    }\n\n    private handleChange = (event: CustomEvent<FlowItem>) => {\n        this.flowItems = this.flowItems.map((item) => {\n            return {\n                ...item,\n                selected: item.value === event.detail?.value,\n            };\n        });\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n}\n"],"mappings":"qDAkBaA,EAAwB,M,yBA6CzBC,KAAAC,aAAgBC,IACpBF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKC,I,MACjC,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPG,SAAUH,EAAKI,UAAUC,EAAAR,EAAMS,UAAM,MAAAD,SAAA,SAAAA,EAAED,QAAK,GAElD,EAGET,KAAAY,YAAeV,IACnBA,EAAMW,kBACNb,KAAKc,SAAWZ,EAAMS,MAAM,EAGxBX,KAAAe,YAAeb,IACnBA,EAAMW,kBACNb,KAAKgB,SAAWd,EAAMS,MAAM,E,cA3Db,M,cAGA,M,eAGa,CAC5B,CACIF,MAAO,IACPQ,KAAM,SACNT,SAAU,KACVU,KAAM,qBAEV,CAAET,MAAO,IAAKQ,KAAM,SAAUC,KAAM,wBACpC,CAAET,MAAO,IAAKQ,KAAM,SAAUC,KAAM,qB,CAGjCC,SACH,MAAO,CACHC,EAAA,uBACIjB,UAAWH,KAAKG,UAChBkB,SAAUrB,KAAKC,aACfa,SAAUd,KAAKc,SACfE,SAAUhB,KAAKgB,WAEnBI,EAAA,8BACIA,EAAA,kBACIE,QAAStB,KAAKc,SACdS,MAAM,WACNF,SAAUrB,KAAKY,cAEnBQ,EAAA,kBACIE,QAAStB,KAAKgB,SACdO,MAAM,WACNF,SAAUrB,KAAKe,eAGvBK,EAAA,uBACIX,MAAOT,KAAKG,UAAUqB,MAAMC,GAAMA,EAAEjB,a"}