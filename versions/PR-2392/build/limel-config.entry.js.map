{"version":3,"names":["ConfigComponent","componentDidLoad","this","setGlobalConfig","componentDidUpdate","config","Object","keys","forEach","key","globalConfig","render"],"sources":["./src/components/config/config.tsx"],"sourcesContent":["import { Component, Prop } from '@stencil/core';\nimport { Config, globalConfig } from '../../global/config';\n\n/**\n * Component used to set global configuration for Lime Elements.\n *\n * :::warning\n * **Building something for Lime CRM?** Then you should _NOT_ use this component.\n * Lime CRM already uses this component to set the global configuration for\n * Lime Elements. No matter what problem you are facing at the moment, using\n * this component will not help, and might cause other problems.\n * :::\n *\n * Building your own software, which is using Lime Elements?\n * Then you _might_ need to use this component.\n *\n * @private\n */\n@Component({\n    tag: 'limel-config',\n    shadow: true,\n})\nexport class ConfigComponent {\n    /**\n     * Global configuration for Lime Elements.\n     */\n    @Prop()\n    public config: Config;\n\n    public componentDidLoad() {\n        this.setGlobalConfig();\n    }\n\n    public componentDidUpdate() {\n        this.setGlobalConfig();\n    }\n\n    /*\n     * Copy any config settings to the global config object\n     */\n    private setGlobalConfig() {\n        if (!this.config) {\n            return;\n        }\n\n        Object.keys(this.config).forEach((key) => {\n            globalConfig[key] = this.config[key];\n        });\n    }\n\n    public render() {\n        return null;\n    }\n}\n"],"mappings":"uFAsBaA,EAAe,M,+CAOjBC,mBACHC,KAAKC,iB,CAGFC,qBACHF,KAAKC,iB,CAMDA,kBACJ,IAAKD,KAAKG,OAAQ,CACd,M,CAGJC,OAAOC,KAAKL,KAAKG,QAAQG,SAASC,IAC9BC,EAAaD,GAAOP,KAAKG,OAAOI,EAAI,G,CAIrCE,SACH,OAAO,I"}