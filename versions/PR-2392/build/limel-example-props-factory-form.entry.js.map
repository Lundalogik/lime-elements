{"version":3,"names":["schema","type","properties","hero","title","lime","component","name","PropsFactoryFormExample","this","anObjectToInject","someProp","aStringToInject","propsFactory","subSchema","_b","_a","injectedObject","injectedString","handleFormChange","event","formData","detail","render","h","onChange","value"],"sources":["./src/components/form/examples/props-factory-schema.ts","./src/components/form/examples/props-factory-form.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\n\nexport interface PropsFactoryFormData {\n    hero?: number;\n}\n\nexport const schema: FormSchema<PropsFactoryFormData> = {\n    type: 'object',\n    properties: {\n        hero: {\n            type: 'integer',\n            title: 'Hero',\n            lime: {\n                component: {\n                    name: 'limel-example-props-factory-picker',\n                },\n            },\n        },\n    },\n};\n","import { Component, h, State } from '@stencil/core';\nimport { PropsFactoryFormData, schema } from './props-factory-schema';\nimport { FormSchema } from '@limetech/lime-elements';\n\n/**\n * Using `propsFactory`\n *\n * @sourceFile props-factory-schema.ts\n * @sourceFile props-factory-picker.tsx\n */\n@Component({\n    tag: 'limel-example-props-factory-form',\n    shadow: true,\n})\nexport class PropsFactoryFormExample {\n    @State()\n    private formData: PropsFactoryFormData = {\n        hero: 1001,\n    };\n\n    private anObjectToInject = {\n        someProp: 'The object was successfully injected!',\n    };\n    private aStringToInject = 'The string was successfully injected!';\n\n    public render() {\n        return [\n            <limel-form\n                onChange={this.handleFormChange}\n                value={this.formData}\n                schema={schema}\n                propsFactory={this.propsFactory}\n            />,\n            <limel-example-value value={this.formData} />,\n        ];\n    }\n\n    private propsFactory = (subSchema: FormSchema) => {\n        if (\n            subSchema.lime?.component?.name ===\n            'limel-example-props-factory-picker'\n        ) {\n            return {\n                injectedObject: this.anObjectToInject,\n                injectedString: this.aStringToInject,\n            };\n        }\n    };\n\n    private handleFormChange = (event: CustomEvent<object>) => {\n        this.formData = event.detail;\n    };\n}\n"],"mappings":"+CAMO,MAAMA,EAA2C,CACpDC,KAAM,SACNC,WAAY,CACRC,KAAM,CACFF,KAAM,UACNG,MAAO,OACPC,KAAM,CACFC,UAAW,CACPC,KAAM,0C,MCAbC,EAAuB,M,yBAMxBC,KAAAC,iBAAmB,CACvBC,SAAU,yCAENF,KAAAG,gBAAkB,wCAclBH,KAAAI,aAAgBC,I,QACpB,KACIC,GAAAC,EAAAF,EAAUT,QAAI,MAAAW,SAAA,SAAAA,EAAEV,aAAS,MAAAS,SAAA,SAAAA,EAAER,QAC3B,qCACF,CACE,MAAO,CACHU,eAAgBR,KAAKC,iBACrBQ,eAAgBT,KAAKG,gB,GAKzBH,KAAAU,iBAAoBC,IACxBX,KAAKY,SAAWD,EAAME,MAAM,E,cAlCS,CACrCnB,KAAM,K,CAQHoB,SACH,MAAO,CACHC,EAAA,cACIC,SAAUhB,KAAKU,iBACfO,MAAOjB,KAAKY,SACZrB,OAAQA,EACRa,aAAcJ,KAAKI,eAEvBW,EAAA,uBAAqBE,MAAOjB,KAAKY,W"}