{"version":3,"names":["tableCss","TableExampleLocal","this","columns","pageSize","addUnit","unit","value","handleChangePage","event","currentPage","detail","handleSort","currentSorting","column","title","componentWillLoad","field","formatter","capitalize","aggregator","ColumnAggregatorType","Average","horizontalAlign","render","h","data","onChangePage","onSort","label"],"sources":["./src/components/table/examples/table.scss?tag=limel-example-table-local&encapsulation=shadow","./src/components/table/examples/table-local.tsx"],"sourcesContent":[":host {\n    display: block;\n}\n\nlimel-table {\n    height: 300px;\n}\n","import { Component, h, State } from '@stencil/core';\nimport {\n    Column,\n    ColumnSorter,\n    ColumnAggregatorType,\n} from '@limetech/lime-elements';\nimport { data, Bird } from './birds';\nimport { capitalize } from 'lodash-es';\n\n/**\n * Local sorting and pagination\n *\n * @sourceFile birds.ts\n */\n@Component({\n    tag: 'limel-example-table-local',\n    styleUrl: 'table.scss',\n    shadow: true,\n})\nexport class TableExampleLocal {\n    private columns: Array<Column<Bird>> = [];\n\n    @State()\n    private currentPage: number = 1;\n\n    @State()\n    private currentSorting: string = 'None';\n\n    private pageSize = 10;\n\n    public componentWillLoad() {\n        this.columns = [\n            { title: 'Name', field: 'name' },\n            { title: 'Binominal name', field: 'binominalName' },\n            {\n                title: 'Wingspan',\n                field: 'wingspan',\n                formatter: this.addUnit('cm'),\n            },\n            { title: 'Nest type', field: 'nest', formatter: capitalize },\n            {\n                title: 'Eggs per clutch',\n                field: 'eggs',\n                aggregator: ColumnAggregatorType.Average,\n                horizontalAlign: 'right',\n            },\n            { title: 'Origin', field: 'origin' },\n        ];\n    }\n\n    private addUnit = (unit: string) => (value: any) => {\n        return `${value} ${unit}`;\n    };\n\n    private handleChangePage = (event: CustomEvent<number>) => {\n        this.currentPage = event.detail;\n    };\n\n    private handleSort = (event: CustomEvent<ColumnSorter[]>) => {\n        this.currentSorting = event.detail[0].column.title;\n    };\n\n    public render() {\n        return [\n            <limel-table\n                data={data}\n                columns={this.columns}\n                pageSize={this.pageSize}\n                onChangePage={this.handleChangePage}\n                onSort={this.handleSort}\n            />,\n            <limel-example-value\n                label=\"Current page is\"\n                value={this.currentPage}\n            />,\n            <limel-example-value\n                label=\"Currently sorting on\"\n                value={this.currentSorting}\n            />,\n        ];\n    }\n}\n"],"mappings":"mXAAA,MAAMA,EAAW,gD,MCmBJC,EAAiB,M,yBAClBC,KAAAC,QAA+B,GAQ/BD,KAAAE,SAAW,GAsBXF,KAAAG,QAAWC,GAAkBC,GAC1B,GAAGA,KAASD,IAGfJ,KAAAM,iBAAoBC,IACxBP,KAAKQ,YAAcD,EAAME,MAAM,EAG3BT,KAAAU,WAAcH,IAClBP,KAAKW,eAAiBJ,EAAME,OAAO,GAAGG,OAAOC,KAAK,E,iBApCxB,E,oBAGG,M,CAI1BC,oBACHd,KAAKC,QAAU,CACX,CAAEY,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,iBAAkBE,MAAO,iBAClC,CACIF,MAAO,WACPE,MAAO,WACPC,UAAWhB,KAAKG,QAAQ,OAE5B,CAAEU,MAAO,YAAaE,MAAO,OAAQC,UAAWC,GAChD,CACIJ,MAAO,kBACPE,MAAO,OACPG,WAAYC,EAAqBC,QACjCC,gBAAiB,SAErB,CAAER,MAAO,SAAUE,MAAO,U,CAgB3BO,SACH,MAAO,CACHC,EAAA,eACIC,KAAMA,EACNvB,QAASD,KAAKC,QACdC,SAAUF,KAAKE,SACfuB,aAAczB,KAAKM,iBACnBoB,OAAQ1B,KAAKU,aAEjBa,EAAA,uBACII,MAAM,kBACNtB,MAAOL,KAAKQ,cAEhBe,EAAA,uBACII,MAAM,uBACNtB,MAAOL,KAAKW,iB"}