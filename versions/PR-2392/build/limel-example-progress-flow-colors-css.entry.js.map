{"version":3,"names":["progressFlowColorsCssCss","ProgressFlowColorsCssExample","value","text","selected","icon","render","h","flowItems","this","onChange","handleChange","event","map","item","Object","assign","_a","detail"],"sources":["./src/components/progress-flow/examples/progress-flow-colors-css.scss?tag=limel-example-progress-flow-colors-css&encapsulation=shadow","./src/components/progress-flow/examples/progress-flow-colors-css.tsx"],"sourcesContent":[":host {\n    --container-background-color: rgb(var(--contrast-1400));\n    background-color: var(--container-background-color);\n    display: block;\n    padding: 2rem;\n    border-radius: 0.6rem;\n\n    --progress-flow-step-divider-color: var(--container-background-color);\n\n    --progress-flow-step-background-color: rgb(var(--contrast-1200));\n    --progress-flow-step-background-color--selected: rgb(var(--color-sky-dark));\n    --progress-flow-step-background-color--passed: rgb(var(--contrast-700));\n\n    --progress-flow-step-text-color: rgb(var(--contrast-200));\n    --progress-flow-step-text-color--passed: rgb(var(--contrast-1100));\n\n    --progress-flow-icon-color--inactive: rgb(var(--color-lime-default));\n}\n","import { Component, h, State } from '@stencil/core';\nimport { FlowItem } from '@limetech/lime-elements';\n\n/**\n * Customizing colors further, using CSS\n *\n * A few CSS variables can be used to customize the look and feel of the steps.\n * But keep in mind that it is not possible to target steps individually and\n * change their colors, using these CSS variables.\n * :::note\n * Using CSS variables to tweak the colors, applies the colors globally to the\n * component, not to individual steps!\n * :::\n * :::note\n * Make sure that:\n * - text has enough contrast with its background and is readable.\n * - the `--progress-flow-step-divider-color` has the same color as the component's\n * container.\n * :::\n */\n@Component({\n    tag: 'limel-example-progress-flow-colors-css',\n    shadow: true,\n    styleUrl: 'progress-flow-colors-css.scss',\n})\nexport class ProgressFlowColorsCssExample {\n    @State()\n    private flowItems: FlowItem[] = [\n        {\n            value: 'first',\n            text: 'First step',\n            selected: true,\n        },\n        {\n            value: 'second',\n            text: 'Second step',\n        },\n        {\n            value: 'third',\n            text: 'Third step',\n        },\n        {\n            value: 'fourth',\n            text: 'Fourth step',\n            icon: 'finish_flag',\n        },\n    ];\n\n    public render() {\n        return (\n            <limel-progress-flow\n                flowItems={this.flowItems}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    private handleChange(event: CustomEvent<FlowItem>) {\n        this.flowItems = this.flowItems.map((item) => {\n            return {\n                ...item,\n                selected: item.value === event.detail?.value,\n            };\n        });\n    }\n}\n"],"mappings":"0CAAA,MAAMA,EAA2B,ynB,MCyBpBC,EAA4B,M,wCAEL,CAC5B,CACIC,MAAO,QACPC,KAAM,aACNC,SAAU,MAEd,CACIF,MAAO,SACPC,KAAM,eAEV,CACID,MAAO,QACPC,KAAM,cAEV,CACID,MAAO,SACPC,KAAM,cACNE,KAAM,e,CAIPC,SACH,OACIC,EAAA,uBACIC,UAAWC,KAAKD,UAChBE,SAAUD,KAAKE,c,CAKnBA,aAAaC,GACjBH,KAAKD,UAAYC,KAAKD,UAAUK,KAAKC,I,MACjC,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPV,SAAUU,EAAKZ,UAAUe,EAAAL,EAAMM,UAAM,MAAAD,SAAA,SAAAA,EAAEf,QAAK,G"}