{"version":3,"names":["schema","title","description","type","properties","info","lime","collapsible","layout","columns","name","age","race","oneOf","const","placeOfBirth","address","city","country","emails","email1","format","email2","email3","email4","email5","FormLayoutExample","this","handleFormChange","event","formData","detail","handleFormValidate","valid","console","log","handleSubmit","json","JSON","stringify","alert","render","h","onChange","onValidate","value","label","primary","disabled","onClick"],"sources":["./src/components/form/examples/layout-schema.ts","./src/components/form/examples/layout-form.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\n\ntype Race =\n    | 'angel'\n    | 'dragon'\n    | 'elf'\n    | 'yeti'\n    | 'vampire'\n    | 'warewolf'\n    | 'orc'\n    | 'wizard';\n\ntype PlaceOfBirth =\n    | 'palight'\n    | 'ekudshire'\n    | 'blarc'\n    | 'kamond'\n    | 'blodholm'\n    | 'wuacross'\n    | 'bruhgnathal'\n    | 'orasas';\n\nexport interface LayoutFormData {\n    info?: {\n        name?: string;\n        age?: number;\n        race?: Race;\n        placeOfBirth?: PlaceOfBirth;\n    };\n    address?: {\n        city?: string;\n        country?: string;\n    };\n    emails?: {\n        email1?: string;\n        email2?: string;\n        email3?: string;\n        email4?: string;\n        email5?: string;\n    };\n}\n\nexport const schema: FormSchema<LayoutFormData> = {\n    title: 'Registration form',\n    description:\n        'This main form has no specified layout, so it gets the default 1 column.',\n    type: 'object',\n    properties: {\n        info: {\n            title: 'Player info',\n            description: 'This section has a 4 column grid layout.',\n            type: 'object',\n            lime: {\n                collapsible: true,\n                layout: {\n                    type: 'grid',\n                    columns: 4,\n                },\n            },\n            properties: {\n                name: {\n                    type: 'string',\n                    title: 'Name',\n                },\n                age: {\n                    type: 'integer',\n                    title: 'Age',\n                },\n                race: {\n                    type: 'string',\n                    title: 'Race',\n                    oneOf: [\n                        {\n                            type: 'string',\n                            const: 'angel',\n                            title: 'Angel',\n                        },\n                        {\n                            type: 'string',\n                            const: 'dragon',\n                            title: 'Dragon',\n                        },\n                        {\n                            type: 'string',\n                            const: 'elf',\n                            title: 'Elf',\n                        },\n                        {\n                            type: 'string',\n                            const: 'yeti',\n                            title: 'Yeti',\n                        },\n                        {\n                            type: 'string',\n                            const: 'vampire',\n                            title: 'Vampire',\n                        },\n                        {\n                            type: 'string',\n                            const: 'warewolf',\n                            title: 'Werewolf',\n                        },\n                        {\n                            type: 'string',\n                            const: 'orc',\n                            title: 'Orc',\n                        },\n                        {\n                            type: 'string',\n                            const: 'wizard',\n                            title: 'Wizard',\n                        },\n                    ],\n                },\n                placeOfBirth: {\n                    type: 'string',\n                    title: 'Place of birth',\n                    oneOf: [\n                        {\n                            type: 'string',\n                            const: 'palight',\n                            title: 'Palight',\n                        },\n                        {\n                            type: 'string',\n                            const: 'ekudshire',\n                            title: 'Ekudshire',\n                        },\n                        {\n                            type: 'string',\n                            const: 'blarc',\n                            title: 'Blarc',\n                        },\n                        {\n                            type: 'string',\n                            const: 'kamond',\n                            title: 'Kamond',\n                        },\n                        {\n                            type: 'string',\n                            const: 'blodholm',\n                            title: 'Blodholm',\n                        },\n                        {\n                            type: 'string',\n                            const: 'wuacross',\n                            title: 'Wuacross',\n                        },\n                        {\n                            type: 'string',\n                            const: 'bruhgnathal',\n                            title: 'Bruhgnathal',\n                        },\n                        {\n                            type: 'string',\n                            const: 'orasas',\n                            title: 'Orasas',\n                        },\n                    ],\n                },\n            },\n        },\n        address: {\n            title: 'Player address',\n            description: 'This section has a 2 column grid layout.',\n            type: 'object',\n            lime: {\n                collapsible: true,\n                layout: {\n                    type: 'grid',\n                    columns: 2,\n                },\n            },\n            properties: {\n                city: {\n                    type: 'string',\n                    title: 'City',\n                },\n                country: {\n                    type: 'string',\n                    title: 'Country',\n                    description: 'It might also be a planet',\n                },\n            },\n        },\n        emails: {\n            title: \"Friends' emails\",\n            description:\n                'This section has a grid layout, but no colSpan is specified; which will result in a 5 column layout.',\n            type: 'object',\n            lime: {\n                collapsible: true,\n                layout: {\n                    type: 'grid',\n                },\n            },\n            properties: {\n                email1: {\n                    type: 'string',\n                    title: 'Email',\n                    description: 'Enter a valid email address',\n                    format: 'email',\n                },\n                email2: {\n                    type: 'string',\n                    title: 'Email',\n                    description: 'Enter a valid email address',\n                    format: 'email',\n                },\n                email3: {\n                    type: 'string',\n                    title: 'Email',\n                    description: 'Enter a valid email address',\n                    format: 'email',\n                },\n                email4: {\n                    type: 'string',\n                    title: 'Email',\n                    description: 'Enter a valid email address',\n                    format: 'email',\n                },\n                email5: {\n                    type: 'string',\n                    title: 'Email',\n                    description: 'Enter a valid email address',\n                    format: 'email',\n                },\n            },\n        },\n    },\n};\n","import { ValidationStatus } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\nimport { LayoutFormData, schema } from './layout-schema';\n\n/**\n * Layout\n * By default, each item in a limel-form will be rendered in a single row, and\n * each row occupies the entire available width of the form's container.\n *\n * This default layout may work fine on small screens or narrow containers,\n * but on larger screens it usually won't produce a nice layout. Thus we\n * recommend that you choose an appropriate responsive layout for your form.\n *\n * ###### Enabling responsive layouts\n *\n * By specifying `'grid'` as the layout `type` in your schema, as well as your desired\n * number of `columns`, you can leave the job of responsively handling the form\n * layout to Lime Elements.\n * ```ts\n * export const schema = {\n *     type: 'object',\n *     lime: {\n *         layout: {\n *             type: 'grid',\n *             columns: 3,\n *         },\n *     },\n *     â€¦\n * };\n * ```\n * :::note\n * Value for `columns` can only be `5`, `4`, `3`, `2`, or `1`. If you do not\n * specify a value, `limel-form` will choose `5` by default.\n * :::\n *\n * So if you have chosen `4` for instance, the form will do its best to fit\n * four columns in a row. But for smaller containers in which placement of four\n * items per row is not possible, the form will automatically change the layout\n * and fit 3 items per row. As the container's width decreases, the number of\n * columns will also decrease.\n *\n * :::tip\n * You can divide a form into sections,\n * and specify a different layout for each section.\n * :::\n *\n * In this example, each collapsible section has its own `colSpan`.\n * However, since the layout is responsive, make sure to change the browser\n * window size to see how their responsive layout changes.\n *\n * @sourceFile layout-schema.ts\n */\n@Component({\n    tag: 'limel-example-form-layout',\n    shadow: true,\n})\nexport class FormLayoutExample {\n    @State()\n    private formData: LayoutFormData = {};\n\n    @State()\n    private valid = true;\n\n    public render() {\n        return [\n            <limel-form\n                onChange={this.handleFormChange}\n                onValidate={this.handleFormValidate}\n                value={this.formData}\n                schema={schema}\n            />,\n            <br />,\n            <limel-button\n                label=\"Submit\"\n                primary={true}\n                disabled={!this.valid}\n                onClick={this.handleSubmit}\n            />,\n        ];\n    }\n\n    private handleFormChange = (event) => {\n        this.formData = event.detail;\n    };\n\n    private handleFormValidate = (event: CustomEvent<ValidationStatus>) => {\n        this.valid = event.detail.valid;\n        console.log(event.detail);\n    };\n\n    private handleSubmit = () => {\n        const json = JSON.stringify(this.formData, null, '    ');\n        alert(`Sending information to villains...\\n\\n${json}`);\n    };\n}\n"],"mappings":"+CA0CO,MAAMA,EAAqC,CAC9CC,MAAO,oBACPC,YACI,2EACJC,KAAM,SACNC,WAAY,CACRC,KAAM,CACFJ,MAAO,cACPC,YAAa,2CACbC,KAAM,SACNG,KAAM,CACFC,YAAa,KACbC,OAAQ,CACJL,KAAM,OACNM,QAAS,IAGjBL,WAAY,CACRM,KAAM,CACFP,KAAM,SACNF,MAAO,QAEXU,IAAK,CACDR,KAAM,UACNF,MAAO,OAEXW,KAAM,CACFT,KAAM,SACNF,MAAO,OACPY,MAAO,CACH,CACIV,KAAM,SACNW,MAAO,QACPb,MAAO,SAEX,CACIE,KAAM,SACNW,MAAO,SACPb,MAAO,UAEX,CACIE,KAAM,SACNW,MAAO,MACPb,MAAO,OAEX,CACIE,KAAM,SACNW,MAAO,OACPb,MAAO,QAEX,CACIE,KAAM,SACNW,MAAO,UACPb,MAAO,WAEX,CACIE,KAAM,SACNW,MAAO,WACPb,MAAO,YAEX,CACIE,KAAM,SACNW,MAAO,MACPb,MAAO,OAEX,CACIE,KAAM,SACNW,MAAO,SACPb,MAAO,YAInBc,aAAc,CACVZ,KAAM,SACNF,MAAO,iBACPY,MAAO,CACH,CACIV,KAAM,SACNW,MAAO,UACPb,MAAO,WAEX,CACIE,KAAM,SACNW,MAAO,YACPb,MAAO,aAEX,CACIE,KAAM,SACNW,MAAO,QACPb,MAAO,SAEX,CACIE,KAAM,SACNW,MAAO,SACPb,MAAO,UAEX,CACIE,KAAM,SACNW,MAAO,WACPb,MAAO,YAEX,CACIE,KAAM,SACNW,MAAO,WACPb,MAAO,YAEX,CACIE,KAAM,SACNW,MAAO,cACPb,MAAO,eAEX,CACIE,KAAM,SACNW,MAAO,SACPb,MAAO,cAM3Be,QAAS,CACLf,MAAO,iBACPC,YAAa,2CACbC,KAAM,SACNG,KAAM,CACFC,YAAa,KACbC,OAAQ,CACJL,KAAM,OACNM,QAAS,IAGjBL,WAAY,CACRa,KAAM,CACFd,KAAM,SACNF,MAAO,QAEXiB,QAAS,CACLf,KAAM,SACNF,MAAO,UACPC,YAAa,+BAIzBiB,OAAQ,CACJlB,MAAO,kBACPC,YACI,uGACJC,KAAM,SACNG,KAAM,CACFC,YAAa,KACbC,OAAQ,CACJL,KAAM,SAGdC,WAAY,CACRgB,OAAQ,CACJjB,KAAM,SACNF,MAAO,QACPC,YAAa,8BACbmB,OAAQ,SAEZC,OAAQ,CACJnB,KAAM,SACNF,MAAO,QACPC,YAAa,8BACbmB,OAAQ,SAEZE,OAAQ,CACJpB,KAAM,SACNF,MAAO,QACPC,YAAa,8BACbmB,OAAQ,SAEZG,OAAQ,CACJrB,KAAM,SACNF,MAAO,QACPC,YAAa,8BACbmB,OAAQ,SAEZI,OAAQ,CACJtB,KAAM,SACNF,MAAO,QACPC,YAAa,8BACbmB,OAAQ,a,MCzKfK,EAAiB,M,yBAyBlBC,KAAAC,iBAAoBC,IACxBF,KAAKG,SAAWD,EAAME,MAAM,EAGxBJ,KAAAK,mBAAsBH,IAC1BF,KAAKM,MAAQJ,EAAME,OAAOE,MAC1BC,QAAQC,IAAIN,EAAME,OAAO,EAGrBJ,KAAAS,aAAe,KACnB,MAAMC,EAAOC,KAAKC,UAAUZ,KAAKG,SAAU,KAAM,QACjDU,MAAM,yCAAyCH,IAAO,E,cAlCvB,G,WAGnB,I,CAETI,SACH,MAAO,CACHC,EAAA,cACIC,SAAUhB,KAAKC,iBACfgB,WAAYjB,KAAKK,mBACjBa,MAAOlB,KAAKG,SACZ9B,OAAQA,IAEZ0C,EAAA,WACAA,EAAA,gBACII,MAAM,SACNC,QAAS,KACTC,UAAWrB,KAAKM,MAChBgB,QAAStB,KAAKS,e"}