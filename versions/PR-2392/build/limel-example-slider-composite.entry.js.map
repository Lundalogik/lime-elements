{"version":3,"names":["SliderCompositeExample","this","handleSliderChange","event","eventPrinter","writeEvent","props","Object","assign","value","detail","renderForm","h","style","schema","onChange","handleFormChange","disabled","factor","label","readonly","unit","valuemin","valuemax","componentWillLoad","lime","layout","type","render","ref","el"],"sources":["./src/components/slider/examples/slider-composite.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\nimport { Component, h, Prop, State } from '@stencil/core';\n\n/**\n * Composite\n *\n * A place to try different combinations of states.\n */\n@Component({\n    tag: 'limel-example-slider-composite',\n    shadow: true,\n})\nexport class SliderCompositeExample {\n    @Prop()\n    public schema: FormSchema;\n\n    @State()\n    private props = {\n        disabled: false,\n        factor: 1,\n        label: 'Slider',\n        readonly: false,\n        unit: '%',\n        value: 25,\n        valuemin: 0,\n        valuemax: 100,\n    };\n\n    private eventPrinter: HTMLLimelExampleEventPrinterElement;\n\n    public componentWillLoad() {\n        this.schema.lime = {\n            layout: {\n                type: 'grid',\n            },\n        };\n    }\n\n    public render() {\n        return [\n            <limel-slider {...this.props} onChange={this.handleSliderChange} />,\n            this.renderForm(),\n            <limel-example-event-printer\n                ref={(el) => (this.eventPrinter = el)}\n            />,\n        ];\n    }\n\n    private handleSliderChange = (event: CustomEvent<number>) => {\n        this.eventPrinter.writeEvent(event);\n        this.props = { ...this.props, value: event.detail };\n    };\n\n    private renderForm = () => {\n        return (\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-form\n                    schema={this.schema}\n                    value={this.props}\n                    onChange={this.handleFormChange}\n                />\n            </limel-example-controls>\n        );\n    };\n\n    private handleFormChange = (event: CustomEvent) => {\n        this.props = event.detail;\n    };\n}\n"],"mappings":"qDAYaA,EAAsB,M,yBAoCvBC,KAAAC,mBAAsBC,IAC1BF,KAAKG,aAAaC,WAAWF,GAC7BF,KAAKK,MAAKC,OAAAC,OAAAD,OAAAC,OAAA,GAAQP,KAAKK,OAAK,CAAEG,MAAON,EAAMO,QAAQ,EAG/CT,KAAAU,WAAa,IAEbC,EAAA,0BACIC,MAAO,CAAE,mCAAoC,aAE7CD,EAAA,cACIE,OAAQb,KAAKa,OACbL,MAAOR,KAAKK,MACZS,SAAUd,KAAKe,oBAMvBf,KAAAe,iBAAoBb,IACxBF,KAAKK,MAAQH,EAAMO,MAAM,E,iCAnDb,CACZO,SAAU,MACVC,OAAQ,EACRC,MAAO,SACPC,SAAU,MACVC,KAAM,IACNZ,MAAO,GACPa,SAAU,EACVC,SAAU,I,CAKPC,oBACHvB,KAAKa,OAAOW,KAAO,CACfC,OAAQ,CACJC,KAAM,Q,CAKXC,SACH,MAAO,CACHhB,EAAA,eAAAL,OAAAC,OAAA,GAAkBP,KAAKK,MAAK,CAAES,SAAUd,KAAKC,sBAC7CD,KAAKU,aACLC,EAAA,+BACIiB,IAAMC,GAAQ7B,KAAKG,aAAe0B,I"}