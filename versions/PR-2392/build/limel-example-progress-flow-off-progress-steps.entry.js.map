{"version":3,"names":["ProgressFlowOffProgressStepsExample","this","handleChange","event","flowItems","map","item","Object","assign","selected","value","_a","detail","text","selectedColor","icon","isOffProgress","name","color","render","h","onChange"],"sources":["./src/components/progress-flow/examples/progress-flow-off-progress-steps.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\nimport { FlowItem } from '@limetech/lime-elements';\n\n/**\n * Example with off-progress steps\n *\n * Naturally, the Progress Flow component is used to visualize a continuous linear\n * process. But sometimes such processes can be abrupted, despite the level of progress.\n *\n * Abruptions can be excluded and displayed separately (not as a part of the flow)\n * using the `isOffProgress` property.\n *\n */\n@Component({\n    tag: 'limel-example-progress-flow-off-progress-steps',\n    shadow: true,\n})\nexport class ProgressFlowOffProgressStepsExample {\n    @State()\n    private flowItems: FlowItem[] = [\n        {\n            value: 'contact',\n            text: 'Customer contact',\n            selectedColor: 'rgb(var(--color-orange-default))',\n            selected: true,\n            icon: 'meeting',\n        },\n        {\n            value: 'requirement',\n            text: 'Demand analysis',\n            selectedColor: 'rgb(var(--color-sky-default))',\n            icon: 'combo_chart',\n        },\n        {\n            value: 'tender',\n            text: 'Quote',\n            selectedColor: 'rgb(var(--color-green-default))',\n            icon: 'paper_plane',\n        },\n        {\n            value: 'agreement',\n            text: 'Agreement',\n            selectedColor: 'rgb(var(--color-teal-default))',\n            icon: 'agreement',\n        },\n        {\n            value: 'rejected',\n            text: 'Rejected',\n            isOffProgress: true,\n            selectedColor: 'rgb(var(--color-red-dark))',\n            icon: {\n                name: 'do_not_disturb',\n                color: 'rgb(var(--color-red-dark))',\n            },\n        },\n        {\n            value: 'onhold',\n            text: 'On hold',\n            isOffProgress: true,\n            selectedColor: 'rgb(var(--color-coral-default))',\n            icon: {\n                name: 'circled_pause',\n                color: 'rgb(var(--color-coral-default))',\n            },\n        },\n    ];\n\n    public render() {\n        return (\n            <limel-progress-flow\n                flowItems={this.flowItems}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    private handleChange = (event: CustomEvent<FlowItem>) => {\n        this.flowItems = this.flowItems.map((item) => {\n            return {\n                ...item,\n                selected: item.value === event.detail?.value,\n            };\n        });\n    };\n}\n"],"mappings":"qDAiBaA,EAAmC,M,yBA2DpCC,KAAAC,aAAgBC,IACpBF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKC,I,MACjC,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPG,SAAUH,EAAKI,UAAUC,EAAAR,EAAMS,UAAM,MAAAD,SAAA,SAAAA,EAAED,QAAK,GAElD,E,eA/D0B,CAC5B,CACIA,MAAO,UACPG,KAAM,mBACNC,cAAe,mCACfL,SAAU,KACVM,KAAM,WAEV,CACIL,MAAO,cACPG,KAAM,kBACNC,cAAe,gCACfC,KAAM,eAEV,CACIL,MAAO,SACPG,KAAM,QACNC,cAAe,kCACfC,KAAM,eAEV,CACIL,MAAO,YACPG,KAAM,YACNC,cAAe,iCACfC,KAAM,aAEV,CACIL,MAAO,WACPG,KAAM,WACNG,cAAe,KACfF,cAAe,6BACfC,KAAM,CACFE,KAAM,iBACNC,MAAO,+BAGf,CACIR,MAAO,SACPG,KAAM,UACNG,cAAe,KACfF,cAAe,kCACfC,KAAM,CACFE,KAAM,gBACNC,MAAO,oC,CAKZC,SACH,OACIC,EAAA,uBACIhB,UAAWH,KAAKG,UAChBiB,SAAUpB,KAAKC,c"}