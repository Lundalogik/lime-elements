{"version":3,"names":["schema","title","description","type","required","properties","personalIdentityNumber","pattern","CustomErrorMessageFormExample","this","handleFormChange","event","formData","detail","handleSubmit","json","JSON","stringify","alert","handleFormValidate","valid","transformErrors","errors","map","error","name","property","message","render","h","onValidate","onChange","value","label","primary","disabled","onClick"],"sources":["./src/components/form/examples/custom-error-message-schema.ts","./src/components/form/examples/custom-error-message-form.tsx"],"sourcesContent":["import { FormSchema } from '@limetech/lime-elements';\n\nexport interface CustomErrorFormData {\n    personalIdentityNumber: string;\n}\n\nexport const schema: FormSchema<CustomErrorFormData> = {\n    title: 'Personal identity number form',\n    description: 'Please enter your personal identity number',\n    type: 'object',\n    required: ['personalIdentityNumber'],\n    properties: {\n        personalIdentityNumber: {\n            type: 'string',\n            title: 'Personal identity number',\n            description: 'Enter your personal identity number',\n            pattern: '[0-9]{8}[-][0-9]{4}',\n        },\n    },\n};\n","import { ValidationStatus, FormError } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\nimport { CustomErrorFormData, schema } from './custom-error-message-schema';\n\n/**\n * Form with custom error message\n *\n * @sourceFile custom-error-message-schema.ts\n */\n@Component({\n    tag: 'limel-example-custom-error-message',\n    shadow: true,\n})\nexport class CustomErrorMessageFormExample {\n    @State()\n    private formData: CustomErrorFormData = {\n        personalIdentityNumber: '',\n    };\n\n    @State()\n    private valid = true;\n\n    public render() {\n        return [\n            <limel-form\n                onValidate={this.handleFormValidate}\n                onChange={this.handleFormChange}\n                value={this.formData}\n                schema={schema}\n                transformErrors={this.transformErrors}\n            />,\n            <br />,\n            <limel-button\n                label=\"Submit\"\n                primary={true}\n                disabled={!this.valid}\n                onClick={this.handleSubmit}\n            />,\n        ];\n    }\n\n    private handleFormChange = (event) => {\n        this.formData = event.detail;\n    };\n\n    private handleSubmit = () => {\n        const json = JSON.stringify(this.formData, null, '    ');\n        alert(`Sending information to villains...\\n\\n${json}`);\n    };\n\n    private handleFormValidate = (event: CustomEvent<ValidationStatus>) => {\n        this.valid = event.detail.valid;\n    };\n\n    private transformErrors = (errors: FormError[]): FormError[] => {\n        return errors.map((error) => {\n            if (\n                error.name === 'pattern' &&\n                error.property === '.personalIdentityNumber'\n            ) {\n                error.message = 'Invalid format, use YYYYMMDD-NNNN';\n            }\n\n            return error;\n        });\n    };\n}\n"],"mappings":"+CAMO,MAAMA,EAA0C,CACnDC,MAAO,gCACPC,YAAa,6CACbC,KAAM,SACNC,SAAU,CAAC,0BACXC,WAAY,CACRC,uBAAwB,CACpBH,KAAM,SACNF,MAAO,2BACPC,YAAa,sCACbK,QAAS,yB,MCHRC,EAA6B,M,yBA4B9BC,KAAAC,iBAAoBC,IACxBF,KAAKG,SAAWD,EAAME,MAAM,EAGxBJ,KAAAK,aAAe,KACnB,MAAMC,EAAOC,KAAKC,UAAUR,KAAKG,SAAU,KAAM,QACjDM,MAAM,yCAAyCH,IAAO,EAGlDN,KAAAU,mBAAsBR,IAC1BF,KAAKW,MAAQT,EAAME,OAAOO,KAAK,EAG3BX,KAAAY,gBAAmBC,GAChBA,EAAOC,KAAKC,IACf,GACIA,EAAMC,OAAS,WACfD,EAAME,WAAa,0BACrB,CACEF,EAAMG,QAAU,mC,CAGpB,OAAOH,CAAK,I,cAhDoB,CACpClB,uBAAwB,I,WAIZ,I,CAETsB,SACH,MAAO,CACHC,EAAA,cACIC,WAAYrB,KAAKU,mBACjBY,SAAUtB,KAAKC,iBACfsB,MAAOvB,KAAKG,SACZZ,OAAQA,EACRqB,gBAAiBZ,KAAKY,kBAE1BQ,EAAA,WACAA,EAAA,gBACII,MAAM,SACNC,QAAS,KACTC,UAAW1B,KAAKW,MAChBgB,QAAS3B,KAAKK,e"}