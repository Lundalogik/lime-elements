{"version":3,"names":["helpCss","HelpComponent","this","openPopover","event","stopPropagation","isOpen","onPopoverClose","render","h","open","onClose","openDirection","slot","onClick","class","trigger","value","readMoreLink","limelHelpContentCss","HelpContent","renderReadMoreLink","href","_a","target","_b","title","_c","tabindex","_d","text"],"sources":["./src/components/help/help.scss?tag=limel-help&encapsulation=shadow","./src/components/help/help.tsx","./src/components/help/limel-help-content.scss?tag=limel-help-content&encapsulation=shadow","./src/components/help/help-content.tsx"],"sourcesContent":["@use '../../style/mixins';\n\nlimel-popover {\n    display: flex;\n    --popover-surface-width: min(calc(100vw - 4rem), 22rem);\n}\n\nbutton[slot='trigger'] {\n    all: unset;\n\n    @include mixins.is-flat-clickable(\n        $color--hovered: rgb(var(--color-sky-dark)),\n        $background-color: var(--lime-elevated-surface-background-color)\n    );\n    @include mixins.visualize-keyboard-focus;\n\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: rgb(var(--color-sky-default));\n    border-radius: 50%;\n    box-shadow: 0 0 0 1px rgb(var(--color-sky-lighter), 0.7);\n    width: 0.875rem;\n    height: 0.875rem;\n    font-size: 0.75rem;\n\n    &.is-open {\n        color: rgb(var(--color-white));\n        background-color: rgb(var(--color-sky-default));\n        box-shadow: var(--button-shadow-inset);\n    }\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport { OpenDirection } from '../menu/menu.types';\nimport { Help } from '../help/help.types';\nimport { Link } from '../../global/shared-types/link.types';\n\n/**\n * A good design is self-explanatory! However, sometimes concepts are\n * too complex to understand, no matter how well-designed a user interface is.\n * In such cases, contextual help can be a great way to provide users with\n * help precisely where and when users need it.\n *\n * In app interface design, providing contextual help emerges as a viable practice\n * for enhancing user experience and usability.\n * Contextual help serves as a quick-to-access guiding,\n * empowering users to more easily understand and navigate through\n * the intricacies of an application.\n *\n * Using this component designers empower users to grasp the functionality\n * of an app more effortlessly, minimizes the learning curve,\n * transforming complex features into accessible opportunities for exploration.\n *\n * @exampleComponent limel-example-help\n * @exampleComponent limel-example-read-more\n * @exampleComponent limel-example-open-direction\n * @exampleComponent limel-example-placement\n */\n@Component({\n    tag: 'limel-help',\n    shadow: true,\n    styleUrl: 'help.scss',\n})\nexport class HelpComponent implements Help {\n    /**\n     * {@inheritdoc Help.value}\n     */\n    @Prop()\n    public value: string;\n\n    /**\n     * {@inheritdoc Help.trigger}\n     */\n    @Prop()\n    public trigger: string = '?';\n\n    /**\n     * {@inheritdoc Help.readMoreLink}\n     */\n    @Prop()\n    public readMoreLink?: Link;\n\n    /**\n     * {@inheritdoc Help.openDirection}\n     */\n    @Prop({ reflect: true })\n    public openDirection: OpenDirection = 'top-start';\n\n    @State()\n    private isOpen = false;\n\n    public render() {\n        return [\n            <limel-popover\n                open={this.isOpen}\n                onClose={this.onPopoverClose}\n                openDirection={this.openDirection}\n            >\n                <button\n                    slot=\"trigger\"\n                    onClick={this.openPopover}\n                    class={{\n                        'is-open': this.isOpen,\n                    }}\n                >\n                    {this.trigger}\n                </button>\n                <limel-help-content\n                    value={this.value}\n                    readMoreLink={this.readMoreLink}\n                />\n            </limel-popover>,\n        ];\n    }\n\n    private openPopover = (event: MouseEvent) => {\n        event.stopPropagation();\n        this.isOpen = true;\n    };\n\n    private onPopoverClose = (event: CustomEvent) => {\n        event.stopPropagation();\n        this.isOpen = false;\n    };\n}\n","@use '../../style/mixins';\n\n:host(limel-help-content) {\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    gap: 0.5rem;\n\n    max-height: 30rem;\n    height: 100%;\n}\n\nlimel-markdown {\n    @include mixins.fade-out-overflowed-content-on-edges(vertically);\n\n    padding-right: 1rem;\n    padding-left: 1rem;\n    min-height: 0;\n    min-width: 0;\n    overflow: hidden auto;\n}\n\na {\n    @include mixins.truncate-text;\n    @include mixins.hyperlink;\n\n    position: sticky;\n    bottom: 0;\n\n    text-decoration: none;\n    font-size: 0.875rem;\n    padding-bottom: 0.125rem;\n}\n\nspan {\n    padding: 0 1rem 0.5rem 1rem;\n    min-width: 0;\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { Link } from '../../global/shared-types/link.types';\n\n/**\n * Help content\n * This is scrollable content that is placed in the popover of the Help component.\n * Moved here mostly to avoid having inlined styles in the parent component.\n * Since you cannot send styles to the Portal component, we need to have this\n * child component.\n *\n * @private\n */\n@Component({\n    tag: 'limel-help-content',\n    shadow: true,\n    styleUrl: 'limel-help-content.scss',\n})\nexport class HelpContent {\n    @Prop()\n    public value: string;\n\n    @Prop()\n    public readMoreLink?: Link;\n\n    public render() {\n        return [\n            <limel-markdown value={this.value} />,\n            this.renderReadMoreLink(),\n        ];\n    }\n\n    private renderReadMoreLink = () => {\n        if (!this.readMoreLink) {\n            return;\n        }\n\n        return (\n            <span>\n                <a\n                    href={this.readMoreLink?.href}\n                    target={this.readMoreLink?.target}\n                    title={this.readMoreLink?.title}\n                    tabindex=\"0\"\n                >\n                    {this.readMoreLink?.text}\n                </a>\n            </span>\n        );\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAU,omC,MC+BHC,EAAa,M,yBAoDdC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,OAAS,IAAI,EAGdJ,KAAAK,eAAkBH,IACtBA,EAAMC,kBACNH,KAAKI,OAAS,KAAK,E,kCAhDE,I,+CAYa,Y,YAGrB,K,CAEVE,SACH,MAAO,CACHC,EAAA,iBACIC,KAAMR,KAAKI,OACXK,QAAST,KAAKK,eACdK,cAAeV,KAAKU,eAEpBH,EAAA,UACII,KAAK,UACLC,QAASZ,KAAKC,YACdY,MAAO,CACH,UAAWb,KAAKI,SAGnBJ,KAAKc,SAEVP,EAAA,sBACIQ,MAAOf,KAAKe,MACZC,aAAchB,KAAKgB,gB,aC7EvC,MAAMC,EAAsB,kzC,MCiBfC,EAAW,M,yBAcZlB,KAAAmB,mBAAqB,K,YACzB,IAAKnB,KAAKgB,aAAc,CACpB,M,CAGJ,OACIT,EAAA,YACIA,EAAA,KACIa,MAAMC,EAAArB,KAAKgB,gBAAY,MAAAK,SAAA,SAAAA,EAAED,KACzBE,QAAQC,EAAAvB,KAAKgB,gBAAY,MAAAO,SAAA,SAAAA,EAAED,OAC3BE,OAAOC,EAAAzB,KAAKgB,gBAAY,MAAAS,SAAA,SAAAA,EAAED,MAC1BE,SAAS,MAERC,EAAA3B,KAAKgB,gBAAY,MAAAW,SAAA,SAAAA,EAAEC,MAErB,E,iDAtBRtB,SACH,MAAO,CACHC,EAAA,kBAAgBQ,MAAOf,KAAKe,QAC5Bf,KAAKmB,qB"}