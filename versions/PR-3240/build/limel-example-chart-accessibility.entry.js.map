{"version":3,"names":["chartResizableContainerCss","ChartAccessibilityExample","render","heading","subHeading","h","Host","class","subheading","icon","type","items","chartItems","orientation","accessibleLabel","accessibleItemsLabel"],"sources":["./src/components/chart/examples/chart-resizable-container.scss?tag=limel-example-chart-accessibility&encapsulation=shadow","./src/components/chart/examples/chart-accessibility.tsx"],"sourcesContent":["* {\n    box-sizing: border-box;\n}\n\n:host {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    resize: both;\n    overflow: auto;\n\n    box-sizing: border-box;\n    position: relative;\n\n    min-width: 10rem;\n    width: 100%;\n    max-width: 100%;\n\n    min-height: 5rem;\n    height: 100%;\n    max-height: 50rem;\n\n    padding: 1rem 1rem 3rem 1rem;\n    border: 0.125rem dashed rgb(var(--contrast-500));\n\n    border-radius: 0.5rem;\n\n    &::after {\n        content: 'Resize me â¤µ';\n        font-size: 0.75rem;\n        position: absolute;\n        right: 0.25rem;\n        bottom: 0.25rem;\n    }\n}\n\n:host(.large) {\n    height: 25rem;\n}\n\n:host(.tall) {\n    height: 35rem;\n}\n\n:host(.row-layout) {\n    flex-direction: row;\n}\n\nlimel-example-controls {\n    --example-controls-column-layout: auto-fit;\n    padding: 1rem 0.5rem;\n    height: fit-content;\n    min-width: 40%;\n}\n","import { Component, h, Host } from '@stencil/core';\nimport { chartItems } from './chart-items-multi-axis-negative-start-values';\n\n/**\n * Accessibility\n * Under the hoods, our charts are simply HTML tables.\n * This helps screen readers to interpret the data and present it to their users.\n * However, to make this semantic more accessible and more understandable,\n * there are some optional props that we highly recommend you to use.\n *\n * - `accessibleLabel`: Will be used as a `caption` for the table, and\n * describes what the chart is about. Depending on the context,\n * It might also be a good idea to include the accessible label for sighted\n * users as well, for instance, as a heading.\n * - `accessibleItemsLabel`: Will be used as a `th` for the first column of the table,\n * describing what all items in this column have in common. In this example,\n * all items are cities.\n *\n * Note that these props won't be visually rendered for sighted users, but\n * they will be presented to assistive technologies, such as screen readers\n * as well as search engines.\n *\n * Another way to improve the accessibility of the chart is to use\n * the `prefix` and `suffix` props to provide additional context to the `value`\n * of each item.\n *\n * @sourceFile chart-items-gantt-negative-values.ts\n */\n@Component({\n    tag: 'limel-example-chart-accessibility',\n    shadow: true,\n    styleUrl: 'chart-resizable-container.scss',\n})\nexport class ChartAccessibilityExample {\n    public render() {\n        const heading = 'Temperature fluctuations past 24 hours';\n        const subHeading = 'in cities we have our offices';\n\n        return (\n            <Host class=\"large\">\n                <limel-header\n                    heading={heading}\n                    subheading={subHeading}\n                    icon=\"temperature_sensitive\"\n                />\n                <limel-chart\n                    type=\"bar\"\n                    items={chartItems}\n                    orientation=\"landscape\"\n                    accessibleLabel={`${heading} - ${subHeading}`}\n                    accessibleItemsLabel=\"City\"\n                />\n            </Host>\n        );\n    }\n}\n"],"mappings":"qIAAA,MAAMA,EAA6B,+pB,MCiCtBC,EAAyB,M,yBAC3BC,SACH,MAAMC,EAAU,yCAChB,MAAMC,EAAa,gCAEnB,OACIC,EAACC,EAAI,CAACC,MAAM,SACRF,EAAA,gBACIF,QAASA,EACTK,WAAYJ,EACZK,KAAK,0BAETJ,EAAA,eACIK,KAAK,MACLC,MAAOC,EACPC,YAAY,YACZC,gBAAiB,GAAGX,OAAaC,IACjCW,qBAAqB,S"}