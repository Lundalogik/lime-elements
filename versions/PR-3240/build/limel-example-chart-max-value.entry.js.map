{"version":3,"names":["ChartMaxValueExample","render","h","items","chartItems","maxValue"],"sources":["./src/components/chart/examples/chart-max-value.tsx"],"sourcesContent":["import { Component, h } from '@stencil/core';\nimport { chartItems } from './chart-items-stack';\n\n/**\n * Using the `maxValue` prop\n *\n * The `maxValue` prop defines the upper limit of the visual range for the chart.\n * It determines the maximum value represented on the axis and is used to\n * calculate the size of each item in the chart relative to this value.\n *\n * For example, if `maxValue` is set to `100`, an item with a value of `10`\n * will occupy 10% of the chart, while an item with a value of `50` will occupy 50%.\n * If `maxValue` is set to `200`, an item with a value of `50` will occupy 25% of the chart.\n *\n * If `maxValue` is not provided, the chart will calculate the maximum value based on\n * the actual data points, and the size of each item will be calculated relative to\n * the total range of the data.\n *\n * :::note\n * The `maxValue` only affects the upper limit of the chart's range.\n * The chart will always start from the smallest value present in the dataset,\n * which could be a negative number.\n * :::\n *\n * @sourceFile chart-items-stack.ts\n */\n@Component({\n    tag: 'limel-example-chart-max-value',\n    shadow: true,\n})\nexport class ChartMaxValueExample {\n    public render() {\n        return <limel-chart items={chartItems} maxValue={512} />;\n    }\n}\n"],"mappings":"oGA8BaA,EAAoB,M,yBACtBC,SACH,OAAOC,EAAA,eAAaC,MAAOC,EAAYC,SAAU,K"}