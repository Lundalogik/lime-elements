{"version":3,"names":["cssClasses","ANIM_CHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","BACKGROUND","CHECKED","CHECKMARK","CHECKMARK_PATH","DISABLED","INDETERMINATE","MIXEDMARK","NATIVE_CONTROL","ROOT","SELECTED","UPGRADED","strings","ARIA_CHECKED_ATTR","ARIA_CHECKED_INDETERMINATE_VALUE","DATA_INDETERMINATE_ATTR","NATIVE_CONTROL_SELECTOR","TRANSITION_STATE_CHECKED","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_INIT","TRANSITION_STATE_UNCHECKED","numbers","ANIM_END_LATCH_MS","MDCCheckboxFoundation","_super","__extends","adapter","_this","call","this","__assign","defaultAdapter","currentCheckState","currentAnimationClass","animEndLatchTimer","enableAnimationEndHandler","Object","defineProperty","get","enumerable","configurable","addClass","undefined","forceLayout","hasNativeControl","isAttachedToDOM","isChecked","isIndeterminate","removeClass","removeNativeControlAttr","setNativeControlAttr","setNativeControlDisabled","prototype","init","determineCheckState","updateAriaChecked","destroy","clearTimeout","setDisabled","disabled","handleAnimationEnd","setTimeout","handleChange","transitionCheckState","oldState","newState","length","getTransitionAnimationClass","_a","MDCFoundation","CB_PROTO_PROPS","MDCCheckbox","apply","arguments","rippleSurface","createRipple","attachTo","root","getNativeControl","checked","set","indeterminate","foundation","value","initialize","getAttribute","removeAttribute","initialSyncWithDOM","addEventListener","listen","getCorrectEventName","window","installPropertyChangeHooks","removeEventListener","unlisten","uninstallPropertyChangeHooks","getDefaultFoundation","className","classList","add","offsetWidth","Boolean","parentNode","remove","attr","setAttribute","MDCRipple","createAdapter","deregisterInteractionHandler","evtType","handler","applyPassive","isSurfaceActive","matches","isUnbounded","registerInteractionHandler","MDCRippleFoundation","e_1","nativeCb","cbProto","getPrototypeOf","_loop_1","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeGetter","nativeCbDesc","state","CB_PROTO_PROPS_1","__values","CB_PROTO_PROPS_1_1","next","done","state_1","e_1_1","error","return","e_2","CB_PROTO_PROPS_2","CB_PROTO_PROPS_2_1","e_2_1","el","querySelector","Error","MDCComponent","inputPropDesc","LABEL_SELECTOR","MDCFormFieldFoundation","click","handleClick","activateInputRipple","deactivateInputRipple","requestAnimationFrame","MDCFormField","labelEl","input","ripple","activate","deactivate","checkboxCss","Checkbox","id","createRandomString","helperTextId","isInvalid","invalid","required","modified","element","limelCheckbox","shadowRoot","formField","mdcCheckbox","getCheckboxElement","onChange","event","stopPropagation","change","emit","handleCheckedChange","newValue","handleIndeterminateChange","connectedCallback","componentDidLoad","disconnectedCallback","_b","checkboxElement","render","h","CheckboxTemplate","readonly","label","readonlyLabels","helperText"],"sources":["./node_modules/@material/checkbox/constants.js","./node_modules/@material/checkbox/foundation.js","./node_modules/@material/checkbox/component.js","./node_modules/@material/form-field/constants.js","./node_modules/@material/form-field/foundation.js","./node_modules/@material/form-field/component.js","./src/components/checkbox/checkbox.scss?tag=limel-checkbox&encapsulation=shadow","./src/components/checkbox/checkbox.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n    ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n    ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n    ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n    ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n    ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n    BACKGROUND: 'mdc-checkbox__background',\n    CHECKED: 'mdc-checkbox--checked',\n    CHECKMARK: 'mdc-checkbox__checkmark',\n    CHECKMARK_PATH: 'mdc-checkbox__checkmark-path',\n    DISABLED: 'mdc-checkbox--disabled',\n    INDETERMINATE: 'mdc-checkbox--indeterminate',\n    MIXEDMARK: 'mdc-checkbox__mixedmark',\n    NATIVE_CONTROL: 'mdc-checkbox__native-control',\n    ROOT: 'mdc-checkbox',\n    SELECTED: 'mdc-checkbox--selected',\n    UPGRADED: 'mdc-checkbox--upgraded',\n};\nexport var strings = {\n    ARIA_CHECKED_ATTR: 'aria-checked',\n    ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n    DATA_INDETERMINATE_ATTR: 'data-indeterminate',\n    NATIVE_CONTROL_SELECTOR: '.mdc-checkbox__native-control',\n    TRANSITION_STATE_CHECKED: 'checked',\n    TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n    TRANSITION_STATE_INIT: 'init',\n    TRANSITION_STATE_UNCHECKED: 'unchecked',\n};\nexport var numbers = {\n    ANIM_END_LATCH_MS: 250,\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar MDCCheckboxFoundation = /** @class */ (function (_super) {\n    __extends(MDCCheckboxFoundation, _super);\n    function MDCCheckboxFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCCheckboxFoundation.defaultAdapter), adapter)) || this;\n        _this.currentCheckState = strings.TRANSITION_STATE_INIT;\n        _this.currentAnimationClass = '';\n        _this.animEndLatchTimer = 0;\n        _this.enableAnimationEndHandler = false;\n        return _this;\n    }\n    Object.defineProperty(MDCCheckboxFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckboxFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckboxFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckboxFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                forceLayout: function () { return undefined; },\n                hasNativeControl: function () { return false; },\n                isAttachedToDOM: function () { return false; },\n                isChecked: function () { return false; },\n                isIndeterminate: function () { return false; },\n                removeClass: function () { return undefined; },\n                removeNativeControlAttr: function () { return undefined; },\n                setNativeControlAttr: function () { return undefined; },\n                setNativeControlDisabled: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCCheckboxFoundation.prototype.init = function () {\n        this.currentCheckState = this.determineCheckState();\n        this.updateAriaChecked();\n        this.adapter.addClass(cssClasses.UPGRADED);\n    };\n    MDCCheckboxFoundation.prototype.destroy = function () {\n        clearTimeout(this.animEndLatchTimer);\n    };\n    MDCCheckboxFoundation.prototype.setDisabled = function (disabled) {\n        this.adapter.setNativeControlDisabled(disabled);\n        if (disabled) {\n            this.adapter.addClass(cssClasses.DISABLED);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.DISABLED);\n        }\n    };\n    /**\n     * Handles the animationend event for the checkbox\n     */\n    MDCCheckboxFoundation.prototype.handleAnimationEnd = function () {\n        var _this = this;\n        if (!this.enableAnimationEndHandler) {\n            return;\n        }\n        clearTimeout(this.animEndLatchTimer);\n        this.animEndLatchTimer = setTimeout(function () {\n            _this.adapter.removeClass(_this.currentAnimationClass);\n            _this.enableAnimationEndHandler = false;\n        }, numbers.ANIM_END_LATCH_MS);\n    };\n    /**\n     * Handles the change event for the checkbox\n     */\n    MDCCheckboxFoundation.prototype.handleChange = function () {\n        this.transitionCheckState();\n    };\n    MDCCheckboxFoundation.prototype.transitionCheckState = function () {\n        if (!this.adapter.hasNativeControl()) {\n            return;\n        }\n        var oldState = this.currentCheckState;\n        var newState = this.determineCheckState();\n        if (oldState === newState) {\n            return;\n        }\n        this.updateAriaChecked();\n        var TRANSITION_STATE_UNCHECKED = strings.TRANSITION_STATE_UNCHECKED;\n        var SELECTED = cssClasses.SELECTED;\n        if (newState === TRANSITION_STATE_UNCHECKED) {\n            this.adapter.removeClass(SELECTED);\n        }\n        else {\n            this.adapter.addClass(SELECTED);\n        }\n        // Check to ensure that there isn't a previously existing animation class, in case for example\n        // the user interacted with the checkbox before the animation was finished.\n        if (this.currentAnimationClass.length > 0) {\n            clearTimeout(this.animEndLatchTimer);\n            this.adapter.forceLayout();\n            this.adapter.removeClass(this.currentAnimationClass);\n        }\n        this.currentAnimationClass =\n            this.getTransitionAnimationClass(oldState, newState);\n        this.currentCheckState = newState;\n        // Check for parentNode so that animations are only run when the element is attached\n        // to the DOM.\n        if (this.adapter.isAttachedToDOM() &&\n            this.currentAnimationClass.length > 0) {\n            this.adapter.addClass(this.currentAnimationClass);\n            this.enableAnimationEndHandler = true;\n        }\n    };\n    MDCCheckboxFoundation.prototype.determineCheckState = function () {\n        var TRANSITION_STATE_INDETERMINATE = strings.TRANSITION_STATE_INDETERMINATE, TRANSITION_STATE_CHECKED = strings.TRANSITION_STATE_CHECKED, TRANSITION_STATE_UNCHECKED = strings.TRANSITION_STATE_UNCHECKED;\n        if (this.adapter.isIndeterminate()) {\n            return TRANSITION_STATE_INDETERMINATE;\n        }\n        return this.adapter.isChecked() ? TRANSITION_STATE_CHECKED :\n            TRANSITION_STATE_UNCHECKED;\n    };\n    MDCCheckboxFoundation.prototype.getTransitionAnimationClass = function (oldState, newState) {\n        var TRANSITION_STATE_INIT = strings.TRANSITION_STATE_INIT, TRANSITION_STATE_CHECKED = strings.TRANSITION_STATE_CHECKED, TRANSITION_STATE_UNCHECKED = strings.TRANSITION_STATE_UNCHECKED;\n        var _a = MDCCheckboxFoundation.cssClasses, ANIM_UNCHECKED_CHECKED = _a.ANIM_UNCHECKED_CHECKED, ANIM_UNCHECKED_INDETERMINATE = _a.ANIM_UNCHECKED_INDETERMINATE, ANIM_CHECKED_UNCHECKED = _a.ANIM_CHECKED_UNCHECKED, ANIM_CHECKED_INDETERMINATE = _a.ANIM_CHECKED_INDETERMINATE, ANIM_INDETERMINATE_CHECKED = _a.ANIM_INDETERMINATE_CHECKED, ANIM_INDETERMINATE_UNCHECKED = _a.ANIM_INDETERMINATE_UNCHECKED;\n        switch (oldState) {\n            case TRANSITION_STATE_INIT:\n                if (newState === TRANSITION_STATE_UNCHECKED) {\n                    return '';\n                }\n                return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n            case TRANSITION_STATE_UNCHECKED:\n                return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n            case TRANSITION_STATE_CHECKED:\n                return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n            default: // TRANSITION_STATE_INDETERMINATE\n                return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n        }\n    };\n    MDCCheckboxFoundation.prototype.updateAriaChecked = function () {\n        // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n        if (this.adapter.isIndeterminate()) {\n            this.adapter.setNativeControlAttr(strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n        }\n        else {\n            // The on/off state does not need to keep track of aria-checked, since\n            // the screenreader uses the checked property on the checkbox element.\n            this.adapter.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n        }\n    };\n    return MDCCheckboxFoundation;\n}(MDCFoundation));\nexport { MDCCheckboxFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCCheckboxFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { getCorrectEventName } from '@material/animation/util';\nimport { MDCComponent } from '@material/base/component';\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { strings } from './constants';\nimport { MDCCheckboxFoundation } from './foundation';\nvar CB_PROTO_PROPS = ['checked', 'indeterminate'];\nvar MDCCheckbox = /** @class */ (function (_super) {\n    __extends(MDCCheckbox, _super);\n    function MDCCheckbox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rippleSurface = _this.createRipple();\n        return _this;\n    }\n    MDCCheckbox.attachTo = function (root) {\n        return new MDCCheckbox(root);\n    };\n    Object.defineProperty(MDCCheckbox.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleSurface;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckbox.prototype, \"checked\", {\n        get: function () {\n            return this.getNativeControl().checked;\n        },\n        set: function (checked) {\n            this.getNativeControl().checked = checked;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckbox.prototype, \"indeterminate\", {\n        get: function () {\n            return this.getNativeControl().indeterminate;\n        },\n        set: function (indeterminate) {\n            this.getNativeControl().indeterminate = indeterminate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckbox.prototype, \"disabled\", {\n        get: function () {\n            return this.getNativeControl().disabled;\n        },\n        set: function (disabled) {\n            this.foundation.setDisabled(disabled);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCCheckbox.prototype, \"value\", {\n        get: function () {\n            return this.getNativeControl().value;\n        },\n        set: function (value) {\n            this.getNativeControl().value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCCheckbox.prototype.initialize = function () {\n        var DATA_INDETERMINATE_ATTR = strings.DATA_INDETERMINATE_ATTR;\n        this.getNativeControl().indeterminate =\n            this.getNativeControl().getAttribute(DATA_INDETERMINATE_ATTR) ===\n                'true';\n        this.getNativeControl().removeAttribute(DATA_INDETERMINATE_ATTR);\n    };\n    MDCCheckbox.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleChange = function () {\n            _this.foundation.handleChange();\n        };\n        this.handleAnimationEnd = function () {\n            _this.foundation.handleAnimationEnd();\n        };\n        this.getNativeControl().addEventListener('change', this.handleChange);\n        this.listen(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd);\n        this.installPropertyChangeHooks();\n    };\n    MDCCheckbox.prototype.destroy = function () {\n        this.rippleSurface.destroy();\n        this.getNativeControl().removeEventListener('change', this.handleChange);\n        this.unlisten(getCorrectEventName(window, 'animationend'), this.handleAnimationEnd);\n        this.uninstallPropertyChangeHooks();\n        _super.prototype.destroy.call(this);\n    };\n    MDCCheckbox.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            forceLayout: function () { return _this.root.offsetWidth; },\n            hasNativeControl: function () { return !!_this.getNativeControl(); },\n            isAttachedToDOM: function () { return Boolean(_this.root.parentNode); },\n            isChecked: function () { return _this.checked; },\n            isIndeterminate: function () { return _this.indeterminate; },\n            removeClass: function (className) {\n                _this.root.classList.remove(className);\n            },\n            removeNativeControlAttr: function (attr) {\n                _this.getNativeControl().removeAttribute(attr);\n            },\n            setNativeControlAttr: function (attr, value) {\n                _this.getNativeControl().setAttribute(attr, value);\n            },\n            setNativeControlDisabled: function (disabled) {\n                _this.getNativeControl().disabled = disabled;\n            },\n        };\n        return new MDCCheckboxFoundation(adapter);\n    };\n    MDCCheckbox.prototype.createRipple = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = __assign(__assign({}, MDCRipple.createAdapter(this)), { deregisterInteractionHandler: function (evtType, handler) {\n                _this.getNativeControl().removeEventListener(evtType, handler, applyPassive());\n            }, isSurfaceActive: function () { return matches(_this.getNativeControl(), ':active'); }, isUnbounded: function () { return true; }, registerInteractionHandler: function (evtType, handler) {\n                _this.getNativeControl().addEventListener(evtType, handler, applyPassive());\n            } });\n        return new MDCRipple(this.root, new MDCRippleFoundation(adapter));\n    };\n    MDCCheckbox.prototype.installPropertyChangeHooks = function () {\n        var e_1, _a;\n        var _this = this;\n        var nativeCb = this.getNativeControl();\n        var cbProto = Object.getPrototypeOf(nativeCb);\n        var _loop_1 = function (controlState) {\n            var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n            // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n            // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n            if (!validDescriptor(desc)) {\n                return { value: void 0 };\n            }\n            // Type cast is needed for compatibility with Closure Compiler.\n            var nativeGetter = desc.get;\n            var nativeCbDesc = {\n                configurable: desc.configurable,\n                enumerable: desc.enumerable,\n                get: nativeGetter,\n                set: function (state) {\n                    desc.set.call(nativeCb, state);\n                    _this.foundation.handleChange();\n                },\n            };\n            Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n        };\n        try {\n            for (var CB_PROTO_PROPS_1 = __values(CB_PROTO_PROPS), CB_PROTO_PROPS_1_1 = CB_PROTO_PROPS_1.next(); !CB_PROTO_PROPS_1_1.done; CB_PROTO_PROPS_1_1 = CB_PROTO_PROPS_1.next()) {\n                var controlState = CB_PROTO_PROPS_1_1.value;\n                var state_1 = _loop_1(controlState);\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (CB_PROTO_PROPS_1_1 && !CB_PROTO_PROPS_1_1.done && (_a = CB_PROTO_PROPS_1.return)) _a.call(CB_PROTO_PROPS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    MDCCheckbox.prototype.uninstallPropertyChangeHooks = function () {\n        var e_2, _a;\n        var nativeCb = this.getNativeControl();\n        var cbProto = Object.getPrototypeOf(nativeCb);\n        try {\n            for (var CB_PROTO_PROPS_2 = __values(CB_PROTO_PROPS), CB_PROTO_PROPS_2_1 = CB_PROTO_PROPS_2.next(); !CB_PROTO_PROPS_2_1.done; CB_PROTO_PROPS_2_1 = CB_PROTO_PROPS_2.next()) {\n                var controlState = CB_PROTO_PROPS_2_1.value;\n                var desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n                if (!validDescriptor(desc)) {\n                    return;\n                }\n                Object.defineProperty(nativeCb, controlState, desc);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (CB_PROTO_PROPS_2_1 && !CB_PROTO_PROPS_2_1.done && (_a = CB_PROTO_PROPS_2.return)) _a.call(CB_PROTO_PROPS_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MDCCheckbox.prototype.getNativeControl = function () {\n        var NATIVE_CONTROL_SELECTOR = strings.NATIVE_CONTROL_SELECTOR;\n        var el = this.root.querySelector(NATIVE_CONTROL_SELECTOR);\n        if (!el) {\n            throw new Error(\"Checkbox component requires a \" + NATIVE_CONTROL_SELECTOR + \" element\");\n        }\n        return el;\n    };\n    return MDCCheckbox;\n}(MDCComponent));\nexport { MDCCheckbox };\nfunction validDescriptor(inputPropDesc) {\n    return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    ROOT: 'mdc-form-field',\n};\nexport var strings = {\n    LABEL_SELECTOR: '.mdc-form-field > label',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCFormFieldFoundation = /** @class */ (function (_super) {\n    __extends(MDCFormFieldFoundation, _super);\n    function MDCFormFieldFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCFormFieldFoundation.defaultAdapter), adapter)) || this;\n        _this.click = function () {\n            _this.handleClick();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCFormFieldFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFormFieldFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCFormFieldFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                activateInputRipple: function () { return undefined; },\n                deactivateInputRipple: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCFormFieldFoundation.prototype.init = function () {\n        this.adapter.registerInteractionHandler('click', this.click);\n    };\n    MDCFormFieldFoundation.prototype.destroy = function () {\n        this.adapter.deregisterInteractionHandler('click', this.click);\n    };\n    MDCFormFieldFoundation.prototype.handleClick = function () {\n        var _this = this;\n        this.adapter.activateInputRipple();\n        requestAnimationFrame(function () {\n            _this.adapter.deactivateInputRipple();\n        });\n    };\n    return MDCFormFieldFoundation;\n}(MDCFoundation));\nexport { MDCFormFieldFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFormFieldFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCFormFieldFoundation } from './foundation';\nvar MDCFormField = /** @class */ (function (_super) {\n    __extends(MDCFormField, _super);\n    function MDCFormField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCFormField.attachTo = function (root) {\n        return new MDCFormField(root);\n    };\n    MDCFormField.prototype.labelEl = function () {\n        var LABEL_SELECTOR = MDCFormFieldFoundation.strings.LABEL_SELECTOR;\n        return this.root.querySelector(LABEL_SELECTOR);\n    };\n    MDCFormField.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            activateInputRipple: function () {\n                if (_this.input && _this.input.ripple) {\n                    _this.input.ripple.activate();\n                }\n            },\n            deactivateInputRipple: function () {\n                if (_this.input && _this.input.ripple) {\n                    _this.input.ripple.deactivate();\n                }\n            },\n            deregisterInteractionHandler: function (evtType, handler) {\n                var labelEl = _this.labelEl();\n                if (labelEl) {\n                    labelEl.removeEventListener(evtType, handler);\n                }\n            },\n            registerInteractionHandler: function (evtType, handler) {\n                var labelEl = _this.labelEl();\n                if (labelEl) {\n                    labelEl.addEventListener(evtType, handler);\n                }\n            },\n        };\n        return new MDCFormFieldFoundation(adapter);\n    };\n    return MDCFormField;\n}(MDCComponent));\nexport { MDCFormField };\n//# sourceMappingURL=component.js.map","@use '../../style/internal/lime-theme';\n@use '@material/checkbox';\n@use '@material/form-field';\n\n/**\n* @prop --checkbox-unchecked-border-color: Affects the border color of the default state of the checkbox (when it is not checked). Defaults to `--contrast-900`.\n*/\n\n@mixin custom-checkbox-styles {\n    // This is used in other components too, such as `limel-list`\n    --mdc-checkbox-checked-color: var(--mdc-theme-primary);\n    --mdc-checkbox-unchecked-color: var(\n        --checkbox-unchecked-border-color,\n        rgb(var(--contrast-900))\n    );\n    --lime-checkbox-unchecked-color: rgb(var(--contrast-300));\n}\n\n:host(limel-checkbox) {\n    @include custom-checkbox-styles;\n}\n\n@include checkbox.core-styles;\n@include form-field.core-styles;\n\n.mdc-form-field {\n    // As long as this component is depended on MDC,\n    // we need to force it to be font-agnostic.\n    // When MDC-dependency is removed, this block can also be removed.\n    // However, on removal of MDC-dependency, we should also make sure to check\n    // other font-related styles that might be set by MDC,\n    // such as `letter-spacing` or `font-size`.\n    font-family: inherit;\n}\n\n.mdc-form-field {\n    display: flex;\n\n    .mdc-checkbox {\n        .mdc-checkbox__native-control {\n            &[disabled],\n            &:enabled {\n                &:not(:checked):not(:indeterminate) {\n                    ~ .mdc-checkbox__background {\n                        background-color: var(--lime-checkbox-unchecked-color);\n                    }\n                }\n            }\n        }\n\n        &.mdc-checkbox--invalid {\n            .mdc-checkbox__native-control:enabled:not(:checked):not(\n                    :indeterminate\n                )\n                ~ .mdc-checkbox__background {\n                border-color: var(--lime-error-text-color);\n            }\n        }\n        .mdc-checkbox__native-control {\n            &:focus-visible {\n                + .mdc-checkbox__background {\n                    &:after {\n                        content: '';\n                        display: block;\n                        position: absolute;\n                        inset: -0.25rem;\n                        border-radius: 0.25rem;\n                        box-shadow: var(--shadow-depth-8-focused);\n                    }\n                }\n            }\n        }\n    }\n    .mdc-checkbox--disabled {\n        opacity: 0.5;\n    }\n\n    label {\n        cursor: pointer;\n        line-height: normal;\n        padding-left: 0;\n\n        &.mdc-checkbox--required::after {\n            margin-left: 0.0625rem;\n            content: '*';\n        }\n\n        &.mdc-checkbox--invalid {\n            color: var(--lime-error-text-color);\n        }\n    }\n}\n\n@import './partial-styles/_helper-text.scss';\n","import { MDCCheckbox, cssClasses } from '@material/checkbox';\nimport { MDCFormField } from '@material/form-field';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { createRandomString } from '../../util/random-string';\nimport { CheckboxTemplate } from './checkbox.template';\nimport { Label } from '../dynamic-label/label.types';\n\n/**\n * The Checkbox component is a classic and essential element in UI design that allows\n * users to make multiple selections from a predefined list of options. The Checkbox component is commonly used in forms and settings interfaces to enable users to\n * select one or more items from a list of choices.\n *\n * ## States of a Checkbox\n * When a user clicks or taps on the box, it toggles between two states:\n * Checked and Unchecked.\n *\n * However, a Checkbox can visualize a third state called the \"Indeterminate\" state.\n * In this state, the checkbox appears as a filled box with a horizontal line or dash inside it.\n *\n * The Indeterminate state is typically used when dealing with checkbox groups\n * that have hierarchical relationships or when the group contains sub-items.\n * This state is used to indicate that that some, but not all, of the items in a group are selected.\n *\n * :::important\n * Checkboxes are sometimes used interchangeably with switches in user interfaces.\n * But there is an important difference between the two! Please read our guidelines about\n * [Switch vs. Checkbox](/#/DesignGuidelines/switch-vs-checkbox.md/).\n *\n * @exampleComponent limel-example-checkbox\n * @exampleComponent limel-example-checkbox-helper-text\n * @exampleComponent limel-example-checkbox-readonly\n */\n@Component({\n    tag: 'limel-checkbox',\n    shadow: true,\n    styleUrl: 'checkbox.scss',\n})\nexport class Checkbox {\n    /**\n     * Disables the checkbox when `true`. Works exactly the same as `readonly`.\n     * If either property is `true`, the checkbox will be disabled.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Disables the checkbox when `true`. This visualizes the checkbox slightly differently.\n     * But shows no visual sign indicating that the checkbox is disabled\n     * or can ever become interactable.\n     */\n    @Prop({ reflect: true })\n    public readonly = false;\n\n    /**\n     * Set to `true` to indicate that the current value is invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid: boolean;\n\n    /**\n     * The checkbox label.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Optional helper text to display below the checkbox\n     */\n    @Prop({ reflect: true })\n    public helperText: string;\n\n    /**\n     * The value of the checkbox. Set to `true` to make the checkbox checked.\n     */\n    @Prop({ reflect: true })\n    public checked = false;\n\n    /**\n     * Enables indeterminate state. Set to `true` to signal indeterminate check.\n     */\n    @Prop({ reflect: true })\n    public indeterminate = false;\n\n    /**\n     * Set to `true` to indicate that the checkbox must be checked.\n     */\n    @Prop({ reflect: true })\n    public required: boolean = false;\n\n    /**\n     * The labels to use to clarify what kind of data is being visualized,\n     * when the component is `readonly`.\n     * @beta\n     */\n    @Prop()\n    public readonlyLabels?: Array<Label<boolean>> = [];\n\n    @State()\n    private modified = false;\n\n    /**\n     * Emitted when the input value is changed.\n     */\n    @Event()\n    private change: EventEmitter<boolean>;\n\n    @Element()\n    private limelCheckbox: HTMLLimelCheckboxElement;\n\n    private formField: MDCFormField;\n    private mdcCheckbox: MDCCheckbox;\n    private id: string = createRandomString();\n    private helperTextId: string = createRandomString();\n\n    @Watch('checked')\n    protected handleCheckedChange(newValue: boolean) {\n        if (!this.mdcCheckbox) {\n            return;\n        }\n\n        this.mdcCheckbox.checked = newValue;\n    }\n\n    @Watch('indeterminate')\n    protected handleIndeterminateChange(newValue: boolean) {\n        this.mdcCheckbox.checked = this.checked;\n        this.mdcCheckbox.indeterminate = newValue;\n    }\n\n    public connectedCallback() {\n        this.initialize();\n    }\n\n    public componentDidLoad() {\n        this.initialize();\n    }\n\n    public disconnectedCallback() {\n        this.mdcCheckbox?.destroy();\n        this.formField?.destroy();\n\n        const checkboxElement = this.getCheckboxElement();\n        if (checkboxElement) {\n            checkboxElement.classList.remove(\n                cssClasses.ANIM_CHECKED_INDETERMINATE,\n                cssClasses.ANIM_CHECKED_UNCHECKED,\n                cssClasses.ANIM_INDETERMINATE_CHECKED,\n                cssClasses.ANIM_INDETERMINATE_UNCHECKED,\n                cssClasses.ANIM_UNCHECKED_CHECKED,\n                cssClasses.ANIM_UNCHECKED_INDETERMINATE,\n            );\n        }\n    }\n\n    public render() {\n        return (\n            <CheckboxTemplate\n                disabled={this.disabled || this.readonly}\n                label={this.label}\n                readonlyLabels={this.readonlyLabels}\n                helperText={this.helperText}\n                helperTextId={this.helperTextId}\n                checked={this.checked || this.indeterminate}\n                indeterminate={this.indeterminate}\n                required={this.required}\n                readonly={this.readonly}\n                invalid={this.isInvalid()}\n                onChange={this.onChange}\n                id={this.id}\n            />\n        );\n    }\n\n    private isInvalid = () => {\n        if (this.invalid) {\n            return true;\n        }\n\n        if (this.required && this.modified && !this.checked) {\n            return true;\n        }\n    };\n\n    private initialize = () => {\n        const element =\n            this.limelCheckbox.shadowRoot.querySelector('.mdc-form-field');\n        if (!element) {\n            return;\n        }\n\n        this.formField = new MDCFormField(element);\n        this.mdcCheckbox = new MDCCheckbox(this.getCheckboxElement());\n        this.formField.input = this.mdcCheckbox;\n    };\n\n    private getCheckboxElement = () => {\n        return this.limelCheckbox.shadowRoot.querySelector('.mdc-checkbox');\n    };\n\n    private onChange = (event: Event) => {\n        event.stopPropagation();\n        this.change.emit(this.mdcCheckbox.checked);\n        this.modified = true;\n    };\n}\n"],"mappings":"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"}