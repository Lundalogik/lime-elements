{"version":3,"names":["chartExamplesCss","ChartStackedBarExample","render","h","items","chartItems"],"sources":["./src/components/chart/examples/chart-examples.scss?tag=limel-example-chart-stacked-bar&encapsulation=shadow","./src/components/chart/examples/chart-type-stacked-bar.tsx"],"sourcesContent":["@import './chart-resizable-container';\n","import { Component, h } from '@stencil/core';\nimport { chartItems } from './chart-items-stack';\n\n/**\n * Stacked bar (default)\n *\n * You can simply provide a list of items to the chart component,\n * and it will visualize them the way you want. For the default\n * visualization, the component uses the `stacked-bar` `type`,\n * as this is the most compact form of date visualization.\n *\n * The only thing each item needs is a `text`, a `value`, and a your\n * choice of `color`.\n *\n * * A stacked bar chart builds creates a data visualization\n * by stacking multiple data series in each bar.\n *\n * It's good for:\n * - Showing the composition of categories across multiple groups.\n * - Highlighting cumulative values while breaking down individual contributions.\n *\n * :::tip\n * **Use:**\n * - When you want to show both the total and individual values in each category.\n * - For data with sub-categories or components that need visualization.\n *\n * **Avoid:**\n * - If precise individual comparisons between subcategories are necessary.\n * - When there are too many categories, making the chart crowded.\n * :::\n *\n * @sourceFile chart-items-stack.ts\n */\n@Component({\n    tag: 'limel-example-chart-stacked-bar',\n    shadow: true,\n    styleUrl: 'chart-examples.scss',\n})\nexport class ChartStackedBarExample {\n    public render() {\n        return <limel-chart items={chartItems} />;\n    }\n}\n"],"mappings":"mGAAA,MAAMA,EAAmB,kvB,MCsCZC,EAAsB,M,yBACxBC,SACH,OAAOC,EAAA,eAAaC,MAAOC,G"}