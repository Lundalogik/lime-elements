{"version":3,"names":["chartItems","text","value","startValue","color","suffix","chartResizableContainerCss","ChartMultiAxisAreaWithNegativeStartValuesExample","this","orientations","types","handleOrientationChange","event","orientation","detail","handleTypeChange","type","render","h","Host","class","items","label","getSelectedOrientation","options","onChange","getSelectedType","find","option"],"sources":["./src/components/chart/examples/chart-items-multi-axis-negative-start-values-area.ts","./src/components/chart/examples/chart-resizable-container.scss?tag=limel-example-chart-multi-axis-area-with-negative-start-values&encapsulation=shadow","./src/components/chart/examples/chart-multi-axis-area.tsx"],"sourcesContent":["import { ChartItem } from '@limetech/lime-elements';\n\nexport const chartItems: ChartItem[] = [\n    {\n        text: 'New York',\n        value: 10,\n        startValue: 0,\n        color: 'rgb(var(--color-yellow-dark))',\n        suffix: '°',\n    },\n    {\n        text: 'Kiruna',\n        value: -5,\n        startValue: -17,\n        color: 'rgb(var(--color-sky-lighter))',\n        suffix: '°',\n    },\n    {\n        text: 'Dubai',\n        value: 35,\n        startValue: 20,\n        color: 'rgb(var(--color-red-default))',\n        suffix: '°',\n    },\n    {\n        text: 'Sydney',\n        value: 25,\n        startValue: 10,\n        color: 'rgb(var(--color-orange-default))',\n        suffix: '°',\n    },\n    {\n        text: 'Reykjavik',\n        value: 0,\n        startValue: -10,\n        color: 'rgb(var(--color-sky-default))',\n        suffix: '°',\n    },\n    {\n        text: 'Helsinki',\n        value: -2,\n        startValue: -12,\n        color: 'rgb(var(--color-sky-light))',\n        suffix: '°',\n    },\n    {\n        text: 'Buenos Aires',\n        value: 22,\n        startValue: 5,\n        color: 'rgb(var(--color-orange-light))',\n        suffix: '°',\n    },\n    {\n        text: 'Tokyo',\n        value: 17,\n        startValue: 6,\n        color: 'rgb(var(--color-orange-lighter))',\n        suffix: '°',\n    },\n];\n","* {\n    box-sizing: border-box;\n}\n\n:host {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    resize: both;\n    overflow: auto;\n\n    box-sizing: border-box;\n    position: relative;\n\n    min-width: 10rem;\n    width: 100%;\n    max-width: 100%;\n\n    min-height: 5rem;\n    height: 100%;\n    max-height: 50rem;\n\n    padding: 1rem 1rem 3rem 1rem;\n    border: 0.125rem dashed rgb(var(--contrast-500));\n\n    border-radius: 0.5rem;\n\n    &::after {\n        content: 'Resize me ⤵';\n        font-size: 0.75rem;\n        position: absolute;\n        right: 0.25rem;\n        bottom: 0.25rem;\n    }\n}\n\n:host(.large) {\n    height: 25rem;\n}\n\n:host(.tall) {\n    height: 35rem;\n}\n\n:host(.row-layout) {\n    flex-direction: row;\n}\n\nlimel-example-controls {\n    --example-controls-column-layout: auto-fit;\n    padding: 1rem 0.5rem;\n    height: fit-content;\n    min-width: 40%;\n}\n","import { Component, h, Host, State } from '@stencil/core';\nimport { LimelSelectCustomEvent, Option } from '@limetech/lime-elements';\nimport { chartItems } from './chart-items-multi-axis-negative-start-values-area';\n\n/**\n * Multi-axis Area Chart with Negative `startValue`s\n * You can also get a multi-axis Area chart, by making sure that\n * each item's `startValue` is smaller than its `value`.\n *\n * :::important\n * For Multi-axis Area charts to render correctly,\n * you cannot have items that only have negative `value`s.\n * You must make sure to have both `startValue` and\n * `value` for all items in your dataset.\n * :::\n *\n * @sourceFile chart-items-multi-axis-negative-start-values-area.ts\n */\n@Component({\n    tag: 'limel-example-chart-multi-axis-area-with-negative-start-values',\n    shadow: true,\n    styleUrl: 'chart-resizable-container.scss',\n})\nexport class ChartMultiAxisAreaWithNegativeStartValuesExample {\n    @State()\n    private orientation: 'landscape' | 'portrait' = 'landscape';\n\n    @State()\n    private type: 'area' | 'scatter' = 'area';\n\n    private orientations: Option[] = [\n        { text: 'landscape', value: 'landscape' },\n        { text: 'portrait', value: 'portrait' },\n    ];\n\n    private types: Option[] = [\n        { text: 'Area', value: 'area' },\n        { text: 'Scatter', value: 'scatter' },\n    ];\n\n    public render() {\n        return (\n            <Host class=\"tall\">\n                <h4>Temperature fluctuations past 24 hours</h4>\n                <limel-chart\n                    type={this.type}\n                    items={chartItems}\n                    orientation={this.orientation}\n                />\n                <limel-example-controls>\n                    <limel-select\n                        label=\"orientation\"\n                        value={this.getSelectedOrientation()}\n                        options={this.orientations}\n                        onChange={this.handleOrientationChange}\n                    />\n                    <limel-select\n                        label=\"type\"\n                        value={this.getSelectedType()}\n                        options={this.types}\n                        onChange={this.handleTypeChange}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private getSelectedOrientation() {\n        return this.orientations.find(\n            (option) => option.value === this.orientation,\n        );\n    }\n\n    private handleOrientationChange = (\n        event: LimelSelectCustomEvent<Option<string>>,\n    ) => {\n        this.orientation = event.detail.value as 'landscape' | 'portrait';\n    };\n\n    private getSelectedType() {\n        return this.types.find((option) => option.value === this.type);\n    }\n\n    private handleTypeChange = (\n        event: LimelSelectCustomEvent<Option<string>>,\n    ) => {\n        this.type = event.detail.value as 'area' | 'scatter';\n    };\n}\n"],"mappings":"sDAEO,MAAMA,EAA0B,CACnC,CACIC,KAAM,WACNC,MAAO,GACPC,WAAY,EACZC,MAAO,gCACPC,OAAQ,KAEZ,CACIJ,KAAM,SACNC,OAAQ,EACRC,YAAa,GACbC,MAAO,gCACPC,OAAQ,KAEZ,CACIJ,KAAM,QACNC,MAAO,GACPC,WAAY,GACZC,MAAO,gCACPC,OAAQ,KAEZ,CACIJ,KAAM,SACNC,MAAO,GACPC,WAAY,GACZC,MAAO,mCACPC,OAAQ,KAEZ,CACIJ,KAAM,YACNC,MAAO,EACPC,YAAa,GACbC,MAAO,gCACPC,OAAQ,KAEZ,CACIJ,KAAM,WACNC,OAAQ,EACRC,YAAa,GACbC,MAAO,8BACPC,OAAQ,KAEZ,CACIJ,KAAM,eACNC,MAAO,GACPC,WAAY,EACZC,MAAO,iCACPC,OAAQ,KAEZ,CACIJ,KAAM,QACNC,MAAO,GACPC,WAAY,EACZC,MAAO,mCACPC,OAAQ,MCzDhB,MAAMC,EAA6B,+pB,MCuBtBC,EAAgD,M,yBAOjDC,KAAAC,aAAyB,CAC7B,CAAER,KAAM,YAAaC,MAAO,aAC5B,CAAED,KAAM,WAAYC,MAAO,aAGvBM,KAAAE,MAAkB,CACtB,CAAET,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,UAAWC,MAAO,YAoCtBM,KAAAG,wBACJC,IAEAJ,KAAKK,YAAcD,EAAME,OAAOZ,KAAiC,EAO7DM,KAAAO,iBACJH,IAEAJ,KAAKQ,KAAOJ,EAAME,OAAOZ,KAA2B,E,iBA7DR,Y,UAGb,M,CAY5Be,SACH,OACIC,EAACC,EAAI,CAACC,MAAM,QACRF,EAAA,oDACAA,EAAA,eACIF,KAAMR,KAAKQ,KACXK,MAAOrB,EACPa,YAAaL,KAAKK,cAEtBK,EAAA,8BACIA,EAAA,gBACII,MAAM,cACNpB,MAAOM,KAAKe,yBACZC,QAAShB,KAAKC,aACdgB,SAAUjB,KAAKG,0BAEnBO,EAAA,gBACII,MAAM,OACNpB,MAAOM,KAAKkB,kBACZF,QAAShB,KAAKE,MACde,SAAUjB,KAAKO,oB,CAO3BQ,yBACJ,OAAOf,KAAKC,aAAakB,MACpBC,GAAWA,EAAO1B,QAAUM,KAAKK,a,CAUlCa,kBACJ,OAAOlB,KAAKE,MAAMiB,MAAMC,GAAWA,EAAO1B,QAAUM,KAAKQ,M"}