{"version":3,"names":["chartItems","text","formattedValue","value","color","chartExamplesCss","ChartTypeGanttExample","this","orientations","handleOrientationChange","event","orientation","detail","handleMaxValueChange","maxValue","render","defaultMaxValue","h","Host","class","type","items","label","getSelectedOrientation","options","onChange","find","option"],"sources":["./src/components/chart/examples/chart-items-gantt.ts","./src/components/chart/examples/chart-examples.scss?tag=limel-example-chart-type-gantt&encapsulation=shadow","./src/components/chart/examples/chart-type-gannt.tsx"],"sourcesContent":["import { ChartItem } from '@limetech/lime-elements';\nexport const chartItems: Array<ChartItem<[number, number]>> = [\n    {\n        text: 'Market Research',\n        formattedValue: 'day 1 — day 10',\n        value: [1, 10],\n        color: 'rgb(var(--color-blue-default))',\n    },\n    {\n        text: 'Business Plan Development',\n        formattedValue: 'day 1 — day 20',\n        value: [1, 20],\n        color: 'rgb(var(--color-green-default))',\n    },\n    {\n        text: 'Prototyping',\n        formattedValue: 'day 10 — day 40',\n        value: [10, 40],\n        color: 'rgb(var(--color-cyan-default))',\n    },\n    {\n        text: 'User Testing',\n        formattedValue: 'day 15 — day 70',\n        value: [15, 70],\n        color: 'rgb(var(--color-purple-default))',\n    },\n    {\n        text: 'MVP Development',\n        formattedValue: 'day 70 — day 120',\n        value: [70, 120],\n        color: 'rgb(var(--color-pink-default))',\n    },\n    {\n        text: 'Marketing & PR',\n        formattedValue: 'day 80 — day 130',\n        value: [80, 130],\n        color: 'rgb(var(--color-violet-default))',\n    },\n    {\n        text: 'Launch Preparation',\n        formattedValue: 'day 110 — day 140',\n        value: [110, 140],\n        color: 'rgb(var(--color-orange-default))',\n    },\n    {\n        text: 'Product Launch',\n        formattedValue: 'day 140 — day 155',\n        value: [140, 155],\n        color: 'rgb(var(--color-teal-default))',\n    },\n];\n","@import './chart-resizable-container';\n","import { Component, h, Host, State } from '@stencil/core';\nimport { LimelSelectCustomEvent, Option } from '@limetech/lime-elements';\nimport { chartItems } from './chart-items-gantt';\n\n/**\n * Gantt chart\n * Gantt charts are used to visualize items that have a start and an end value.\n * A common use case is to visualize project timelines, where each item represents\n * a phase in the project.\n *\n * In most charts, items have a default start value of `0`, which is why\n * you normally do not provide it in your dataset.\n * But to create a Gantt chart, you simply need to specify a start value\n * for each item in your dataset, e.g. `value: [10, 20]`.\n *\n * @sourceFile chart-items-gantt.ts\n */\n@Component({\n    tag: 'limel-example-chart-type-gantt',\n    shadow: true,\n    styleUrl: 'chart-examples.scss',\n})\nexport class ChartTypeGanttExample {\n    @State()\n    private maxValue = 170;\n\n    @State()\n    private orientation: 'landscape' | 'portrait' = 'portrait';\n\n    private orientations: Option[] = [\n        { text: 'landscape', value: 'landscape' },\n        { text: 'portrait', value: 'portrait' },\n    ];\n\n    public render() {\n        const defaultMaxValue = `${this.maxValue}`;\n\n        return (\n            <Host class=\"tall\">\n                <h4>Project Timeline: Key Phases from Concept to Launch</h4>\n                <limel-chart\n                    type=\"bar\"\n                    items={chartItems}\n                    orientation={this.orientation}\n                    maxValue={this.maxValue}\n                />\n                <limel-example-controls>\n                    <limel-select\n                        label=\"orientation\"\n                        value={this.getSelectedOrientation()}\n                        options={this.orientations}\n                        onChange={this.handleOrientationChange}\n                    />\n                    <limel-input-field\n                        type=\"number\"\n                        label=\"maxValue\"\n                        value={defaultMaxValue}\n                        onChange={this.handleMaxValueChange}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private getSelectedOrientation() {\n        return this.orientations.find(\n            (option) => option.value === this.orientation,\n        );\n    }\n\n    private handleOrientationChange = (\n        event: LimelSelectCustomEvent<Option<string>>,\n    ) => {\n        this.orientation = event.detail.value as 'landscape' | 'portrait';\n    };\n\n    private handleMaxValueChange = (event) => {\n        this.maxValue = +event.detail;\n    };\n}\n"],"mappings":"sDACO,MAAMA,EAAiD,CAC1D,CACIC,KAAM,kBACNC,eAAgB,iBAChBC,MAAO,CAAC,EAAG,IACXC,MAAO,kCAEX,CACIH,KAAM,4BACNC,eAAgB,iBAChBC,MAAO,CAAC,EAAG,IACXC,MAAO,mCAEX,CACIH,KAAM,cACNC,eAAgB,kBAChBC,MAAO,CAAC,GAAI,IACZC,MAAO,kCAEX,CACIH,KAAM,eACNC,eAAgB,kBAChBC,MAAO,CAAC,GAAI,IACZC,MAAO,oCAEX,CACIH,KAAM,kBACNC,eAAgB,mBAChBC,MAAO,CAAC,GAAI,KACZC,MAAO,kCAEX,CACIH,KAAM,iBACNC,eAAgB,mBAChBC,MAAO,CAAC,GAAI,KACZC,MAAO,oCAEX,CACIH,KAAM,qBACNC,eAAgB,oBAChBC,MAAO,CAAC,IAAK,KACbC,MAAO,oCAEX,CACIH,KAAM,iBACNC,eAAgB,oBAChBC,MAAO,CAAC,IAAK,KACbC,MAAO,mCChDf,MAAMC,EAAmB,kvB,MCsBZC,EAAqB,M,yBAOtBC,KAAAC,aAAyB,CAC7B,CAAEP,KAAM,YAAaE,MAAO,aAC5B,CAAEF,KAAM,WAAYE,MAAO,aAuCvBI,KAAAE,wBACJC,IAEAH,KAAKI,YAAcD,EAAME,OAAOT,KAAiC,EAG7DI,KAAAM,qBAAwBH,IAC5BH,KAAKO,UAAYJ,EAAME,MAAM,E,cArDd,I,iBAG6B,U,CAOzCG,SACH,MAAMC,EAAkB,GAAGT,KAAKO,WAEhC,OACIG,EAACC,EAAI,CAACC,MAAM,QACRF,EAAA,iEACAA,EAAA,eACIG,KAAK,MACLC,MAAOrB,EACPW,YAAaJ,KAAKI,YAClBG,SAAUP,KAAKO,WAEnBG,EAAA,8BACIA,EAAA,gBACIK,MAAM,cACNnB,MAAOI,KAAKgB,yBACZC,QAASjB,KAAKC,aACdiB,SAAUlB,KAAKE,0BAEnBQ,EAAA,qBACIG,KAAK,SACLE,MAAM,WACNnB,MAAOa,EACPS,SAAUlB,KAAKM,wB,CAO3BU,yBACJ,OAAOhB,KAAKC,aAAakB,MACpBC,GAAWA,EAAOxB,QAAUI,KAAKI,a"}