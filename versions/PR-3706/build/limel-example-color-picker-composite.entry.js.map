{"version":3,"names":["ColorPickerCompositeExample","this","onChange","event","value","detail","setRequired","stopPropagation","required","setDisabled","disabled","setInvalid","invalid","setReadonly","readonly","setManualInput","manualInput","setPlaceholder","placeholder","render","h","Host","label","checked","style","gridColumn","marginTop"],"sources":["./src/components/color-picker/examples/color-picker-composite.tsx"],"sourcesContent":["import { Component, h, Host, State } from '@stencil/core';\n/**\n * Composite example\n */\n\n@Component({\n    tag: 'limel-example-color-picker-composite',\n    shadow: true,\n})\nexport class ColorPickerCompositeExample {\n    @State()\n    private value = 'rgba(var(--color-red-default), 0.4)';\n\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private manualInput = true;\n\n    @State()\n    private placeholder = 'Any valid CSS color format is accepted';\n\n    public render() {\n        return (\n            <Host>\n                <limel-color-picker\n                    label=\"Select a beautiful color\"\n                    value={this.value}\n                    placeholder={this.placeholder}\n                    readonly={this.readonly}\n                    required={this.required}\n                    disabled={this.disabled}\n                    invalid={this.invalid}\n                    manualInput={this.manualInput}\n                    onChange={this.onChange}\n                />\n                <limel-example-controls>\n                    <limel-checkbox\n                        checked={this.required}\n                        label=\"Required\"\n                        onChange={this.setRequired}\n                    />\n                    <limel-checkbox\n                        checked={this.disabled}\n                        label=\"Disabled\"\n                        onChange={this.setDisabled}\n                    />\n                    <limel-checkbox\n                        checked={this.invalid}\n                        label=\"Invalid\"\n                        onChange={this.setInvalid}\n                    />\n                    <limel-checkbox\n                        checked={this.readonly}\n                        label=\"Readonly\"\n                        onChange={this.setReadonly}\n                    />\n                    <limel-checkbox\n                        checked={this.manualInput}\n                        label=\"manualInput\"\n                        onChange={this.setManualInput}\n                    />\n                    <limel-input-field\n                        label=\"Placeholder\"\n                        value={this.placeholder}\n                        onChange={this.setPlaceholder}\n                        style={{\n                            gridColumn: '1/-1',\n                            marginTop: '1rem',\n                        }}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private onChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setManualInput = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.manualInput = event.detail;\n    };\n\n    private setPlaceholder = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.placeholder = event.detail;\n    };\n}\n"],"mappings":"4DASaA,EAA2B,M,yBA4E5BC,KAAAC,SAAYC,IAChBF,KAAKG,MAAQD,EAAME,MAAM,EAGrBJ,KAAAK,YAAeH,IACnBA,EAAMI,kBACNN,KAAKO,SAAWL,EAAME,MAAM,EAGxBJ,KAAAQ,YAAeN,IACnBA,EAAMI,kBACNN,KAAKS,SAAWP,EAAME,MAAM,EAGxBJ,KAAAU,WAAcR,IAClBA,EAAMI,kBACNN,KAAKW,QAAUT,EAAME,MAAM,EAGvBJ,KAAAY,YAAeV,IACnBA,EAAMI,kBACNN,KAAKa,SAAWX,EAAME,MAAM,EAGxBJ,KAAAc,eAAkBZ,IACtBA,EAAMI,kBACNN,KAAKe,YAAcb,EAAME,MAAM,EAG3BJ,KAAAgB,eAAkBd,IACtBA,EAAMI,kBACNN,KAAKiB,YAAcf,EAAME,MAAM,E,WAzGnB,sC,cAGG,M,cAGA,M,aAGD,M,cAGC,M,iBAGG,K,iBAGA,wC,CAEfc,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,sBACIE,MAAM,2BACNlB,MAAOH,KAAKG,MACZc,YAAajB,KAAKiB,YAClBJ,SAAUb,KAAKa,SACfN,SAAUP,KAAKO,SACfE,SAAUT,KAAKS,SACfE,QAASX,KAAKW,QACdI,YAAaf,KAAKe,YAClBd,SAAUD,KAAKC,WAEnBkB,EAAA,8BACIA,EAAA,kBACIG,QAAStB,KAAKO,SACdc,MAAM,WACNpB,SAAUD,KAAKK,cAEnBc,EAAA,kBACIG,QAAStB,KAAKS,SACdY,MAAM,WACNpB,SAAUD,KAAKQ,cAEnBW,EAAA,kBACIG,QAAStB,KAAKW,QACdU,MAAM,UACNpB,SAAUD,KAAKU,aAEnBS,EAAA,kBACIG,QAAStB,KAAKa,SACdQ,MAAM,WACNpB,SAAUD,KAAKY,cAEnBO,EAAA,kBACIG,QAAStB,KAAKe,YACdM,MAAM,cACNpB,SAAUD,KAAKc,iBAEnBK,EAAA,qBACIE,MAAM,cACNlB,MAAOH,KAAKiB,YACZhB,SAAUD,KAAKgB,eACfO,MAAO,CACHC,WAAY,OACZC,UAAW,W"}