import{r as t,h as i,g as s}from"./index-2714248e.js";const e=":host{display:inline-block}img{width:100%}";const n=class{constructor(i){t(this,i);this.intersectionObserver=null;this.handleImageIntersection=t=>{var i;for(const s of t){if(s.isIntersecting){const t=s.target;const e=t.dataset.src;if(e){t.setAttribute("src",e);delete t.dataset.src}(i=this.intersectionObserver)===null||i===void 0?void 0:i.unobserve(t)}}};this.src=undefined;this.alt="";this.lazyLoadImages=false}componentDidRender(){this.setupImageIntersectionObserver()}disconnectedCallback(){this.teardownImageIntersectionObserver()}render(){if(!this.src){return null}const t=Object.assign({alt:this.alt},this.lazyLoadImages?{"data-src":this.src}:{src:this.src});return i("img",Object.assign({},t))}setupImageIntersectionObserver(){var t,i,s;if(!this.src||!this.lazyLoadImages){return}if(!this.intersectionObserver){this.intersectionObserver=new IntersectionObserver(this.handleImageIntersection)}const e=(t=this.host.shadowRoot)!==null&&t!==void 0?t:this.host;const n=(i=e===null||e===void 0?void 0:e.querySelectorAll("img"))!==null&&i!==void 0?i:[];for(const t of n){(s=this.intersectionObserver)===null||s===void 0?void 0:s.observe(t)}}teardownImageIntersectionObserver(){var t;(t=this.intersectionObserver)===null||t===void 0?void 0:t.disconnect();this.intersectionObserver=null}get host(){return s(this)}};n.style=e;export{n as limel_image};
//# sourceMappingURL=limel-image.entry.js.map