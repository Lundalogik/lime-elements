{"version":3,"names":["ImageInteractiveExample","this","imageOptions","text","value","handleImageChange","event","imageSrc","_a","detail","handleAltChange","altText","handleShowImageChange","showImage","render","h","src","alt","label","find","option","options","onChange","checked"],"sources":["./src/components/image/examples/image-interactive.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\nimport { Option } from '@limetech/lime-elements';\n\n/**\n * Interactive image example\n *\n * This example shows how the image component handles different states\n * and allows you to test various properties interactively.\n */\n@Component({\n    tag: 'limel-example-image-interactive',\n    shadow: true,\n})\nexport class ImageInteractiveExample {\n    @State()\n    private imageSrc: string = 'https://picsum.photos/400/300?random=2';\n\n    @State()\n    private altText: string = 'Interactive example image';\n\n    @State()\n    private showImage: boolean = true;\n\n    private imageOptions: Option<string>[] = [\n        {\n            text: 'Nature (400x300)',\n            value: 'https://picsum.photos/400/300?random=2',\n        },\n        {\n            text: 'Architecture (500x350)',\n            value: 'https://picsum.photos/500/350?random=3',\n        },\n        {\n            text: 'Portrait (300x400)',\n            value: 'https://picsum.photos/300/400?random=4',\n        },\n        {\n            text: 'Broken link',\n            value: 'https://invalid-url-that-will-fail.com/image.jpg',\n        },\n    ];\n\n    public render() {\n        return [\n            this.showImage ? (\n                <limel-image src={this.imageSrc} alt={this.altText} />\n            ) : null,\n            <limel-example-controls>\n                <limel-select\n                    label=\"Image source\"\n                    value={this.imageOptions.find(\n                        (option) => option.value === this.imageSrc\n                    )}\n                    options={this.imageOptions}\n                    onChange={this.handleImageChange}\n                />\n                <limel-input-field\n                    label=\"Alt text\"\n                    value={this.altText}\n                    onChange={this.handleAltChange}\n                />\n                <limel-checkbox\n                    label=\"Show image\"\n                    checked={this.showImage}\n                    onChange={this.handleShowImageChange}\n                />\n            </limel-example-controls>,\n        ];\n    }\n\n    private handleImageChange = (event: CustomEvent) => {\n        this.imageSrc = event.detail?.value || '';\n    };\n\n    private handleAltChange = (event: CustomEvent) => {\n        this.altText = event.detail;\n    };\n\n    private handleShowImageChange = (event: CustomEvent) => {\n        this.showImage = event.detail;\n    };\n}\n"],"mappings":"qDAaaA,EAAuB,M,yBAUxBC,KAAAC,aAAiC,CACrC,CACIC,KAAM,mBACNC,MAAO,0CAEX,CACID,KAAM,yBACNC,MAAO,0CAEX,CACID,KAAM,qBACNC,MAAO,0CAEX,CACID,KAAM,cACNC,MAAO,qDAgCPH,KAAAI,kBAAqBC,I,MACzBL,KAAKM,WAAWC,EAAAF,EAAMG,UAAM,MAAAD,SAAA,SAAAA,EAAEJ,QAAS,EAAE,EAGrCH,KAAAS,gBAAmBJ,IACvBL,KAAKU,QAAUL,EAAMG,MAAM,EAGvBR,KAAAW,sBAAyBN,IAC7BL,KAAKY,UAAYP,EAAMG,MAAM,E,cAhEN,yC,aAGD,4B,eAGG,I,CAqBtBK,SACH,MAAO,CACHb,KAAKY,UACDE,EAAA,eAAaC,IAAKf,KAAKM,SAAUU,IAAKhB,KAAKU,UAC3C,KACJI,EAAA,8BACIA,EAAA,gBACIG,MAAM,eACNd,MAAOH,KAAKC,aAAaiB,MACpBC,GAAWA,EAAOhB,QAAUH,KAAKM,WAEtCc,QAASpB,KAAKC,aACdoB,SAAUrB,KAAKI,oBAEnBU,EAAA,qBACIG,MAAM,WACNd,MAAOH,KAAKU,QACZW,SAAUrB,KAAKS,kBAEnBK,EAAA,kBACIG,MAAM,aACNK,QAAStB,KAAKY,UACdS,SAAUrB,KAAKW,yB"}