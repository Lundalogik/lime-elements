{"version":3,"names":["ChipRemoveExample","this","handleRemove","removeButtonClicked","render","h","text","badge","removable","onRemove","label","value"],"sources":["./src/components/chip/examples/chip-remove.tsx"],"sourcesContent":["import { Component, State, h } from '@stencil/core';\n\n/**\n * Removable chips\n * Chips can display a remove button,\n * when their `removable` prop is set to `true`.\n *\n * This is typically used when the chip is used in a chip-set,\n * where each chip visualizes a chosen option.\n *\n * :::tip\n * When the chip is focused using the keyboard, the user can press\n * the <kbd>Delete</kbd> or <kbd>Backspace</kbd> keys to\n * trigger the same remove `event`.\n * :::\n */\n@Component({\n    tag: 'limel-example-chip-removable',\n    shadow: true,\n})\nexport class ChipRemoveExample {\n    @State()\n    private removeButtonClicked: boolean = false;\n\n    public render() {\n        return [\n            <limel-chip\n                text=\"My filter\"\n                badge={123}\n                removable={true}\n                onRemove={this.handleRemove}\n            />,\n            <limel-example-value\n                label=\"Remove\"\n                value={this.removeButtonClicked}\n            />,\n        ];\n    }\n\n    private handleRemove = () => {\n        this.removeButtonClicked = true;\n    };\n}\n"],"mappings":"qDAoBaA,EAAiB,M,yBAmBlBC,KAAAC,aAAe,KACnBD,KAAKE,oBAAsB,IAAI,E,yBAlBI,K,CAEhCC,SACH,MAAO,CACHC,EAAA,cACIC,KAAK,YACLC,MAAO,IACPC,UAAW,KACXC,SAAUR,KAAKC,eAEnBG,EAAA,uBACIK,MAAM,SACNC,MAAOV,KAAKE,sB"}