{"version":3,"names":["getLinkAttributes","url","isExternalUrl","href","title","target","rel","referrerpolicy","urlObj","isProtocolRelativeUrl","URL","window","location","protocol","origin","startsWith","hostname","_a","htmlDecodeTree","Uint16Array","split","map","c","charCodeAt","decodeMap","Map","fromCodePoint","String","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","code","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoderState","DecodingMode","EntityDecoder","constructor","decodeTree","emitCodePoint","errors","this","state","EntityStart","consumed","result","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","length","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","parseInt","substr","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","decodeWithTrie","lastIndex","indexOf","slice","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","value","lo","hi","mid","midVal","htmlDecoder","decodeHTML","mode","Legacy","bail","error","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","key","setProperty","options","name","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","deep","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","use","values","middlewareIndex","callback","pop","TypeError","next","fn","index","undefined","wrap","middelware","push","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","exception","Promise","then","Error","stringifyPosition","position","point","line","column","pos","VFileMessage","causeOrReason","optionsOrParentOrPlace","super","reason","legacyCause","place","ancestors","cause","message","ruleId","source","parent","fatal","stack","file","path","basename","dirname","extname","join","sep","ext","assertPath","seenNonSlash","codePointAt","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","normalize","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","Boolean","auth","urlToPath","getPathFromURLPosix","pathname","third","decodeURIComponent","order","VFile","isUint8Array","data","history","messages","prop","includes","assertNonEmpty","assertPart","stem","fail","info","encoding","TextDecoder","decode","part","CallableInstance","property","self","constr","proto","setPrototypeOf","own","Processor","Compiler","Parser","attachers","compiler","freezeIndex","frozen","namespace","parser","transformers","destination","attacher","assertUnfrozen","freeze","transformer","Number","POSITIVE_INFINITY","parse","realFile","vfile","assertParser","process","assertCompiler","executor","resolve","reject","parseTree","tree","realDone","compileTree","compileResult","looksLikeAValue","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","add","plugin","plugins","settings","thing","entryIndex","primary","rest","currentPrimary","isPlainObj","unified","node","type","asyncName","looksLikeAVFile","emptyOptions","includeImageAlt","includeHtml","one","alt","all","children","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","check","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colon","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decodeNamedCharacterReference","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","maybe","left","right","constructs","existing","before","decodeNumericCharacterReference","normalizeIdentifier","replace","toLowerCase","toUpperCase","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","test","normalizeUri","skip","encodeURIComponent","factorySpace","effects","ok","limit","size","enter","prefix","consume","exit","content","tokenize","initializeContent","contentStart","attempt","contentInitial","afterContentStartConstruct","paragraphInitial","previous","lineStart","token","contentType","document","initializeDocument","containerConstruct","tokenizeContainer","continued","childFlow","childToken","lineStartOffset","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","assign","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","seen","entry","nok","disable","null","classifyCharacter","resolveAll","context","attention","tokenizeAttention","resolveAllAttention","open","group","text","openingSequence","closingSequence","nextEvents","_close","_open","sliceSerialize","movePoint","insideSpan","attentionMarkers","inside","after","close","_bufferIndex","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","partial","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","_container","contStart","contBefore","characterEscape","tokenizeCharacterEscape","characterReference","tokenizeCharacterReference","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","definition","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveTo","resolveToHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","media","_inactive","_balanced","label","labelStart","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","heading","paragraph","initializeFlow","initial","atBlankEnding","flowInitial","afterConstruct","resolver","createResolver","string","initializeFactory","field","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","_index","createTokenizer","initialize","columnStart","resolveAllConstructs","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","main","addResult","expandTabs","serializeChunks","sliceChunks","accountForPotentialSkip","chunkIndex","go","fields","construct","_","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","def","handleConstruct","store","create","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","atTab","resolveText","defaultConstructs","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","match","endPosition","exec","ceil","characterEscapeOrReference","decodeString","$0","$1","$2","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","handler","defaultOnError","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","_spread","errorHandler","siblings","onExitError","expectingFirstListItemValue","ancestor","flowCodeInside","depth","setextHeadingSlurpLineEnding","atHardBreak","inReference","referenceType","fragment","characterReferenceType","ordered","spread","checked","d","combined","remarkParse","doc","blockquote","properties","patch","applyData","className","strikethrough","footnoteReference","clobberPrefix","id","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","set","dataFootnoteRef","ariaDescribedBy","allowDangerousHtml","revert","subtype","suffix","contents","imageReference","definitionById","inlineCode","linkReference","results","loose","listLoose","listItemLoose","disabled","child","root","pointEnd","pointStart","table","rows","firstRow","tableContent","body","tableRow","rowIndex","align","cellIndex","cells","cell","alignValue","tableCell","tab","space","trimLines","last","lines","trimLine","handlers","break","delete","toml","ignore","yaml","footnoteDefinition","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","globalThis","deserializer","$","as","out","unpair","has","object","Date","flags","RegExp","Set","BigInt","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","valueOf","toJSON","entries","toISOString","serialize","lossy","structuredClone$1","structuredClone","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","footnoteById","backReferences","counts","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checks","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","color","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","concat","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","defaultHandlers","handle","passThrough","shallow","unknown","unknownHandler","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","to","hName","hChildren","hProperties","toHast","foot","remarkRehype","async","hastTree","ccount","character","count","escapeStringRegexp","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","find","change","matchObject","input","global","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","literalAutolink","enterLiteralAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","findUrl","findEmail","domain","isCorrectDomain","parts","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","peek","footnoteReferencePeek","gfmFootnoteFromMarkdown","gfmFootnoteDefinition","enterFootnoteDefinition","gfmFootnoteDefinitionLabelString","enterFootnoteDefinitionLabelString","gfmFootnoteCall","enterFootnoteCall","gfmFootnoteCallString","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","containerPhrasing","markdownTable","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","row","sizes","columnIndex","alignDelimiters","toAlignment","repeat","delimiterStart","padding","delimiterEnd","patternInScope","pattern","listInScope","none","_1","longestStreak","substring","expected","formatCodeAsIndented","fences","checkFence","fence","encode","checkQuote","quote","checkEmphasis","emphasisPeek","formatHeadingAsSetext","literalWithBreak","setext","rank","min","closeAtx","htmlPeek","imagePeek","imageReferencePeek","inlineCodePeek","expression","compilePattern","formatLinkAsAutolink","resourceLink","linkPeek","linkReferencePeek","checkBullet","checkBulletOther","bulletOther","checkBulletOrdered","bulletOrdered","checkRule","rule","bulletCurrent","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","checkListItemIndent","style","listItemIndent","incrementListMarker","phrasing","hasPhrasing","some","checkStrong","strongPeek","checkRuleRepetition","repetition","ruleRepetition","ruleSpaces","gfmTableFromMarkdown","enterTable","tableData","enterCell","tableHeader","enterRow","exitCodeText","exitTable","_align","inTable","gfmTableToMarkdown","tableCellPadding","tablePipeAlign","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","options_","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImpl","sort","a","b","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","Schema","normal","merge","definitions","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","schema","Type","charAt","camelcase","dashes","kebab","htmlBase","svgBase","tokens","trim","parseSelector","selector","defaultTagName","props","subvalue","createH","caseSensitive","createAdjustMap","h","isChild","addProperty","addChild","record","isNaN","spaces","commas","parsePrimitive","finalResult","svgCaseSensitiveTagNames","s","indices","toOffset","toPoint","eol","cr","lf","webNamespaces","mathml","fromParse5","verbose","nodeName","quirksMode","childNodes","loc","element","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","createLocation","opening","closing","startLine","startCol","endLine","endCol","endOffset","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","DASH_DASH","CDATA_START","DOCTYPE","SCRIPT","PUBLIC","SYSTEM","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","cpOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","isLastChunk","insertHtmlAtCurrentPos","CARRIAGE_RETURN","LINE_FEED","advance","isCommonValidRange","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","getErrorForNumericCharacterReference","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","attrLocations","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","tn","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","parentNode","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","isConforming","QUIRKS","LIMITED_QUIRKS","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","isFontWithAttrs","COLOR","SIZE","FACE","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","ns","isHtmlIntegrationPoint","ENCODING","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","static","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","documentChildren","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","tnLoc","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent.isIntegrationPoint","_reconstructActiveFormattingElements","listLength","findIndex","unopenIdx","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","unicode.CODE_POINTS","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","shouldRemoveFromOpenElements","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","doctype.getDocumentMode","doctype.isConforming","nonConformingDoctype","missingDoctype","endTagWithoutMatchingOpenElement","misplacedStartTagForHeadElement","templateEndTagInHead","closingOfElementWithOpenChildElements","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","rawTextStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","foreignContent.adjustTokenMathMLAttrs","foreignContent.adjustTokenXMLAttrs","svgStartTagInBody","foreignContent.adjustTokenSVGAttrs","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","unicode.REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","foreignContent.causesExit","currentNs","foreignContent.adjustTokenSVGTagName","parseFragment","getFragmentParser","minpath","extnameIndex","minproc","description","dashToCamelRe","formatCRe","formatXRe","fatalities","fromHtml","onerror","parseFunction","p5Document","internalOnerror","setting","level","note","formatC","formatX","visualizeCharacter","visualizeCharacterCode","dashToCamel","charCode","rehypeParse","emitParseErrors","defaultSchema","tbody","td","th","thead","tfoot","tr","del","dl","h2","img","ins","li","ol","q","section","ul","clobber","protocols","strip","sanitize","ctx","doctype","allowComments","allowDoctypes","safeElement","childrenUnknown","specific","defaults","findDefinition","propertyValues","propertyValue","safeProtocol","allowed","questionMark","numberSign","cleanPosition","dataDefault","rehypeSanitize","htmlVoidElements","zwitch","invalid","core","charactersToExpression","basic","escapeOnly","surrogate","groups","toHexadecimal","omit","toDecimal","characterEntitiesLegacy","characterEntitiesHtml4","dangerous","characters","toNamed","formatSmart","omitOptionalSemicolons","named","useNamedReferences","useShortestReferences","decimal","stringifyEntities","_2","bogusComments","characterReferences","_3","upperDoctype","tightDoctype","padRight","padLeft","re","whitespace","siblingAfter","siblingBefore","emptyChildren","includeWhitespace","omission","caption","headOrColgroupOrCaption","colgroup","dt","optgroup","option","rp","rubyElement","rt","constants","unquoted","double","omitOptionalTags","closeEmptyElements","voids","serializeAttributes","closeSelfClosing","tightSelfClosing","serializeAttribute","tightAttributes","allowParseErrors","allowDangerousCharacters","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","node_","emptyCharacterReferences","toHtml","rehypeStringify","buttonTypes","isProperties","toParse5","parentSchema","currentSchema","createProperty","isNumberedHeader","C1_CONTROLS_REFERENCE_REPLACEMENTS","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","isAsciiHexDigit","charRefCode","_unconsume","_reconsumeInState","_matchNamedCharacterReference","withoutSemicolon","masked","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","NUMBER_SIGN","matchResult","LATIN_SMALL_X","LATIN_CAPITAL_X","SCOPING_ELEMENT_NS","NAMED_HEADERS","noembedStartTagInBody","knownMdxNames","parseOptions","documentMode","handleRaw","stitches","resetTokenizer","p5","stitch","Token.TokenType","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","extra","tag","html.getTagID","rehypeRaw","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","lineno","updatePosition","Position","msg","filename","silent","m","comments","val","declarations","decls","decl","__importDefault","mod","__esModule","exports","StyleToObject","inline_style_parser_1","require$$0","styleObject","hasIterator","forEach","colorName","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexCharacters","match3or4Hex","match6or8Hex","nonHexChars","validHexSize","hexRgb","alphaFromHex","alphaString","toFixed","hexRe","float","percentage","numberOrPercentage","pattern$1","hsl3Re","pattern$2","hsl4Re","pattern$3","rgb3NumberRe","pattern$4","rgb3PercentageRe","pattern$5","rgb4NumberRe","pattern$6","rgb4PercentageRe","pattern$7","transparentRe","clamp","parseRGB","n","endsWith","parseFloat","round","parsePercentage","parseAlpha","getHEX","g","hex2Rgb","getRGB","getHSL","l","hh","PI","parseCSSColor","hsl","rgb","cn","sanitizeStyle","sanitizeStyleValue","styleValue","css","normalizedCss","normalizeBackgroundColor","allowedCssProperties","console","isValidCssColorValue","createLazyLoadImagesPlugin","lazyLoadImages","createLinksPlugin","markdownToHTML","forceHardLineBreaks","getWhiteList","whitelist","sanitizeHTML","allowedComponents","defaultSchemaClone","asteriskAttributeWhitelist","component","_c"],"sources":["./src/components/text-editor/prosemirror-adapter/plugins/link/utils.ts","./node_modules/entities/lib/esm/generated/decode-data-html.js","./node_modules/entities/lib/esm/generated/decode-data-xml.js","./node_modules/entities/lib/esm/decode_codepoint.js","./node_modules/entities/lib/esm/decode.js","./node_modules/unified/node_modules/bail/index.js","./node_modules/extend/index.js","./node_modules/unified/node_modules/is-plain-obj/index.js","./node_modules/unified/node_modules/trough/index.js","./node_modules/unified/node_modules/unist-util-stringify-position/lib/index.js","./node_modules/unified/node_modules/vfile-message/lib/index.js","./node_modules/unified/node_modules/vfile/lib/minpath.browser.js","./node_modules/unified/node_modules/vfile/lib/minproc.browser.js","./node_modules/unified/node_modules/vfile/lib/minurl.shared.js","./node_modules/unified/node_modules/vfile/lib/minurl.browser.js","./node_modules/unified/node_modules/vfile/lib/index.js","./node_modules/unified/lib/callable-instance.js","./node_modules/unified/lib/index.js","./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","./node_modules/decode-named-character-reference/node_modules/character-entities/index.js","./node_modules/decode-named-character-reference/index.js","./node_modules/micromark-util-chunked/index.js","./node_modules/micromark-util-combine-extensions/index.js","./node_modules/micromark-util-decode-numeric-character-reference/index.js","./node_modules/micromark-util-normalize-identifier/index.js","./node_modules/micromark-util-character/index.js","./node_modules/micromark-util-sanitize-uri/index.js","./node_modules/micromark-factory-space/index.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/content.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/document.js","./node_modules/micromark-util-classify-character/index.js","./node_modules/micromark-util-resolve-all/index.js","./node_modules/micromark-core-commonmark/lib/attention.js","./node_modules/micromark-core-commonmark/lib/autolink.js","./node_modules/micromark-core-commonmark/lib/blank-line.js","./node_modules/micromark-core-commonmark/lib/block-quote.js","./node_modules/micromark-core-commonmark/lib/character-escape.js","./node_modules/micromark-core-commonmark/lib/character-reference.js","./node_modules/micromark-core-commonmark/lib/code-fenced.js","./node_modules/micromark-core-commonmark/lib/code-indented.js","./node_modules/micromark-core-commonmark/lib/code-text.js","./node_modules/micromark-util-subtokenize/index.js","./node_modules/micromark-core-commonmark/lib/content.js","./node_modules/micromark-factory-destination/index.js","./node_modules/micromark-factory-label/index.js","./node_modules/micromark-factory-title/index.js","./node_modules/micromark-factory-whitespace/index.js","./node_modules/micromark-core-commonmark/lib/definition.js","./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","./node_modules/micromark-core-commonmark/lib/heading-atx.js","./node_modules/micromark-util-html-tag-name/index.js","./node_modules/micromark-core-commonmark/lib/html-flow.js","./node_modules/micromark-core-commonmark/lib/html-text.js","./node_modules/micromark-core-commonmark/lib/label-end.js","./node_modules/micromark-core-commonmark/lib/label-start-image.js","./node_modules/micromark-core-commonmark/lib/label-start-link.js","./node_modules/micromark-core-commonmark/lib/line-ending.js","./node_modules/micromark-core-commonmark/lib/thematic-break.js","./node_modules/micromark-core-commonmark/lib/list.js","./node_modules/micromark-core-commonmark/lib/setext-underline.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/flow.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/text.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/create-tokenizer.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/constructs.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/parse.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/postprocess.js","./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/preprocess.js","./node_modules/micromark-util-decode-string/index.js","./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","./node_modules/mdast-util-from-markdown/lib/index.js","./node_modules/remark-parse/lib/index.js","./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","./node_modules/mdast-util-to-hast/lib/handlers/break.js","./node_modules/mdast-util-to-hast/lib/handlers/code.js","./node_modules/mdast-util-to-hast/lib/handlers/delete.js","./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","./node_modules/mdast-util-to-hast/lib/handlers/heading.js","./node_modules/mdast-util-to-hast/lib/handlers/html.js","./node_modules/mdast-util-to-hast/lib/revert.js","./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","./node_modules/mdast-util-to-hast/lib/handlers/image.js","./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","./node_modules/mdast-util-to-hast/lib/handlers/link.js","./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","./node_modules/mdast-util-to-hast/lib/handlers/list.js","./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","./node_modules/mdast-util-to-hast/lib/handlers/root.js","./node_modules/mdast-util-to-hast/lib/handlers/strong.js","./node_modules/mdast-util-to-hast/node_modules/unist-util-position/lib/index.js","./node_modules/mdast-util-to-hast/lib/handlers/table.js","./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","./node_modules/trim-lines/index.js","./node_modules/mdast-util-to-hast/lib/handlers/text.js","./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","./node_modules/mdast-util-to-hast/lib/handlers/index.js","./node_modules/@ungap/structured-clone/esm/types.js","./node_modules/@ungap/structured-clone/esm/deserialize.js","./node_modules/@ungap/structured-clone/esm/serialize.js","./node_modules/@ungap/structured-clone/esm/index.js","./node_modules/mdast-util-to-hast/lib/footer.js","./node_modules/unist-util-is/lib/index.js","./node_modules/unist-util-visit-parents/lib/color.js","./node_modules/unist-util-visit-parents/lib/index.js","./node_modules/unist-util-visit/lib/index.js","./node_modules/mdast-util-to-hast/lib/state.js","./node_modules/mdast-util-to-hast/lib/index.js","./node_modules/remark-rehype/lib/index.js","./node_modules/mdast-util-gfm-autolink-literal/node_modules/ccount/index.js","./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","./node_modules/mdast-util-find-and-replace/lib/index.js","./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","./node_modules/mdast-util-gfm-footnote/lib/index.js","./node_modules/mdast-util-gfm-strikethrough/lib/index.js","./node_modules/markdown-table/index.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/break.js","./node_modules/longest-streak/index.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/code.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/definition.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-string/lib/index.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/heading.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/html.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","./node_modules/mdast-util-phrasing/lib/index.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/root.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/strong.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/text.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","./node_modules/mdast-util-gfm-table/node_modules/mdast-util-to-markdown/lib/handle/index.js","./node_modules/mdast-util-gfm-table/lib/index.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/break.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/code.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/definition.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-string/lib/index.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/heading.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/html.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/root.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/strong.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/text.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","./node_modules/mdast-util-gfm-task-list-item/node_modules/mdast-util-to-markdown/lib/handle/index.js","./node_modules/mdast-util-gfm-task-list-item/lib/index.js","./node_modules/mdast-util-gfm/lib/index.js","./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","./node_modules/micromark-extension-gfm-table/lib/edit-map.js","./node_modules/micromark-extension-gfm-table/lib/infer.js","./node_modules/micromark-extension-gfm-table/lib/syntax.js","./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","./node_modules/micromark-extension-gfm/index.js","./node_modules/remark-gfm/lib/index.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/schema.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/merge.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/normalize.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/info.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/types.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/defined-info.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/create.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/xlink.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/xml.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/case-sensitive-transform.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/util/case-insensitive-transform.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/xmlns.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/aria.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/html.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/svg.js","./node_modules/hast-util-from-html/node_modules/property-information/lib/find.js","./node_modules/hast-util-from-html/node_modules/property-information/index.js","./node_modules/hast-util-from-html/node_modules/comma-separated-tokens/index.js","./node_modules/hast-util-from-html/node_modules/hast-util-parse-selector/lib/index.js","./node_modules/hast-util-from-html/node_modules/space-separated-tokens/index.js","./node_modules/hast-util-from-html/node_modules/hastscript/lib/create-h.js","./node_modules/hast-util-from-html/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","./node_modules/hast-util-from-html/node_modules/hastscript/lib/index.js","./node_modules/hast-util-from-html/node_modules/vfile-location/lib/index.js","./node_modules/hast-util-from-html/node_modules/web-namespaces/index.js","./node_modules/hast-util-from-html/node_modules/hast-util-from-parse5/lib/index.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/unicode.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/error-codes.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/preprocessor.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/token.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/html.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/index.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/parser/open-element-stack.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/parser/formatting-element-list.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/tree-adapters/default.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/doctype.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/common/foreign-content.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/parser/index.js","./node_modules/hast-util-from-html/node_modules/parse5/dist/index.js","./node_modules/hast-util-from-html/node_modules/unist-util-stringify-position/lib/index.js","./node_modules/hast-util-from-html/node_modules/vfile-message/lib/index.js","./node_modules/hast-util-from-html/node_modules/vfile/lib/minpath.browser.js","./node_modules/hast-util-from-html/node_modules/vfile/lib/minproc.browser.js","./node_modules/hast-util-from-html/node_modules/vfile/lib/minurl.shared.js","./node_modules/hast-util-from-html/node_modules/vfile/lib/minurl.browser.js","./node_modules/hast-util-from-html/node_modules/vfile/lib/index.js","./node_modules/hast-util-from-html/lib/errors.js","./node_modules/hast-util-from-html/lib/index.js","./node_modules/rehype-parse/lib/index.js","./node_modules/hast-util-sanitize/node_modules/unist-util-position/lib/index.js","./node_modules/hast-util-sanitize/lib/schema.js","./node_modules/hast-util-sanitize/lib/index.js","./node_modules/rehype-sanitize/lib/index.js","./node_modules/hast-util-to-html/node_modules/html-void-elements/index.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/schema.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/merge.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/normalize.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/info.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/types.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/defined-info.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/create.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/xlink.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/xml.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/case-sensitive-transform.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/util/case-insensitive-transform.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/xmlns.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/aria.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/html.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/svg.js","./node_modules/hast-util-to-html/node_modules/property-information/lib/find.js","./node_modules/hast-util-to-html/node_modules/property-information/index.js","./node_modules/hast-util-to-html/node_modules/zwitch/index.js","./node_modules/stringify-entities/lib/core.js","./node_modules/stringify-entities/lib/util/to-hexadecimal.js","./node_modules/stringify-entities/lib/util/to-decimal.js","./node_modules/stringify-entities/node_modules/character-entities-legacy/index.js","./node_modules/character-entities-html4/index.js","./node_modules/stringify-entities/lib/constant/dangerous.js","./node_modules/stringify-entities/lib/util/to-named.js","./node_modules/stringify-entities/lib/util/format-smart.js","./node_modules/stringify-entities/lib/index.js","./node_modules/hast-util-to-html/lib/handle/comment.js","./node_modules/hast-util-to-html/lib/handle/doctype.js","./node_modules/hast-util-to-html/node_modules/ccount/index.js","./node_modules/hast-util-to-html/node_modules/comma-separated-tokens/index.js","./node_modules/hast-util-to-html/node_modules/space-separated-tokens/index.js","./node_modules/hast-util-whitespace/lib/index.js","./node_modules/hast-util-to-html/lib/omission/util/siblings.js","./node_modules/hast-util-to-html/lib/omission/omission.js","./node_modules/hast-util-to-html/lib/omission/closing.js","./node_modules/hast-util-to-html/lib/omission/opening.js","./node_modules/hast-util-to-html/lib/handle/element.js","./node_modules/hast-util-to-html/lib/handle/text.js","./node_modules/hast-util-to-html/lib/handle/raw.js","./node_modules/hast-util-to-html/lib/handle/root.js","./node_modules/hast-util-to-html/lib/handle/index.js","./node_modules/hast-util-to-html/lib/index.js","./node_modules/rehype-stringify/lib/index.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/schema.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/merge.js","./node_modules/hast-util-raw/node_modules/property-information/lib/normalize.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/info.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/types.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/defined-info.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/create.js","./node_modules/hast-util-raw/node_modules/property-information/lib/xlink.js","./node_modules/hast-util-raw/node_modules/property-information/lib/xml.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/case-sensitive-transform.js","./node_modules/hast-util-raw/node_modules/property-information/lib/util/case-insensitive-transform.js","./node_modules/hast-util-raw/node_modules/property-information/lib/xmlns.js","./node_modules/hast-util-raw/node_modules/property-information/lib/aria.js","./node_modules/hast-util-raw/node_modules/property-information/lib/html.js","./node_modules/hast-util-raw/node_modules/property-information/lib/svg.js","./node_modules/hast-util-raw/node_modules/property-information/lib/find.js","./node_modules/hast-util-raw/node_modules/property-information/index.js","./node_modules/hast-util-raw/node_modules/comma-separated-tokens/index.js","./node_modules/hast-util-raw/node_modules/hast-util-parse-selector/lib/index.js","./node_modules/hast-util-raw/node_modules/space-separated-tokens/index.js","./node_modules/hast-util-raw/node_modules/hastscript/lib/create-h.js","./node_modules/hast-util-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","./node_modules/hast-util-raw/node_modules/hastscript/lib/index.js","./node_modules/hast-util-raw/node_modules/vfile-location/lib/index.js","./node_modules/hast-util-raw/node_modules/web-namespaces/index.js","./node_modules/hast-util-raw/node_modules/hast-util-from-parse5/lib/index.js","./node_modules/hast-util-to-parse5/node_modules/comma-separated-tokens/index.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/schema.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/merge.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/normalize.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/info.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/types.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/defined-info.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/create.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xlink.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xml.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-sensitive-transform.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-insensitive-transform.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/xmlns.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/aria.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/html.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/svg.js","./node_modules/hast-util-to-parse5/node_modules/property-information/lib/find.js","./node_modules/hast-util-to-parse5/node_modules/property-information/index.js","./node_modules/hast-util-to-parse5/node_modules/space-separated-tokens/index.js","./node_modules/hast-util-to-parse5/node_modules/web-namespaces/index.js","./node_modules/hast-util-to-parse5/node_modules/zwitch/index.js","./node_modules/hast-util-to-parse5/lib/index.js","./node_modules/hast-util-raw/node_modules/html-void-elements/index.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","./node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","./node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","./node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","./node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","./node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","./node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","./node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","./node_modules/hast-util-raw/node_modules/unist-util-position/lib/index.js","./node_modules/hast-util-raw/node_modules/zwitch/index.js","./node_modules/hast-util-raw/lib/index.js","./node_modules/rehype-raw/lib/index.js","./node_modules/style-to-object/node_modules/inline-style-parser/index.js","./node_modules/style-to-object/cjs/index.js","./node_modules/style-to-object/esm/index.mjs","./node_modules/color-name/index.js","./node_modules/hex-rgb/index.js","./node_modules/parse-css-color/dist/index.esm.js","./src/components/markdown/sanitize-style.ts","./src/components/markdown/image-markdown-plugin.ts","./src/components/markdown/link-markdown-plugin.ts","./src/components/markdown/markdown-parser.ts"],"sourcesContent":["import { LinkMarkAttrs } from './link-mark-spec';\n\nexport function getLinkAttributes(url: string): LinkMarkAttrs {\n    if (isExternalUrl(url)) {\n        return {\n            href: url,\n            title: url,\n            target: '_blank',\n            rel: 'noopener noreferrer',\n            referrerpolicy: 'noreferrer',\n        };\n    }\n\n    return {\n        href: url,\n        title: url,\n        target: null,\n        rel: null,\n        referrerpolicy: null,\n    };\n}\n\nfunction isExternalUrl(url: string): boolean {\n    try {\n        let urlObj: URL;\n\n        if (isProtocolRelativeUrl(url)) {\n            urlObj = new URL(window.location.protocol + url);\n        } else {\n            urlObj = new URL(url, window.location.origin);\n        }\n\n        return (\n            urlObj.protocol.startsWith('http') &&\n            urlObj.hostname !== window.location.hostname\n        );\n    } catch {\n        // Malformed URLs → internal\n        return false;\n    }\n}\n\nfunction isProtocolRelativeUrl(url: string) {\n    return url.startsWith('//');\n}\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) /* eslint-disable no-bitwise */ ||\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1_114_111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {Array<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","/**\n * @import {Root} from 'hast'\n * @import {ParserError} from 'parse5'\n * @import {Value} from 'vfile'\n * @import {ErrorCode, Options} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const parseFunction = settings.fragment ? parseFragment : parse\n  const document = String(file)\n  const p5Document = parseFunction(document, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5Document, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = document.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\n * @import {Parser, Processor} from 'unified'\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser<Root>}\n   */\n  function parser(document, file) {\n    return fromHtml(document, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","// Couple of ARIA attributes allowed in several, but not all, places.\nconst aria = ['ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy']\n\n/**\n * Default schema.\n *\n * Follows GitHub style sanitation.\n *\n * @type {import('./index.js').Schema}\n */\nexport const defaultSchema = {\n  ancestors: {\n    tbody: ['table'],\n    td: ['table'],\n    th: ['table'],\n    thead: ['table'],\n    tfoot: ['table'],\n    tr: ['table']\n  },\n  attributes: {\n    a: [\n      ...aria,\n      // Note: these 3 are used by GFM footnotes, they do work on all links.\n      'dataFootnoteBackref',\n      'dataFootnoteRef',\n      ['className', 'data-footnote-backref'],\n      'href'\n    ],\n    blockquote: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `code` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    code: [['className', /^language-./]],\n    del: ['cite'],\n    div: ['itemScope', 'itemType'],\n    dl: [...aria],\n    // Note: these 2 are used by GFM footnotes, they *sometimes* work.\n    h2: [\n      ['id', 'footnote-label'],\n      ['className', 'sr-only']\n    ],\n    img: [...aria, 'longDesc', 'src'],\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    input: [\n      ['disabled', true],\n      ['type', 'checkbox']\n    ],\n    ins: ['cite'],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `li` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    li: [['className', 'task-list-item']],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ol: [...aria, ['className', 'contains-task-list']],\n    q: ['cite'],\n    section: ['dataFootnotes', ['className', 'footnotes']],\n    source: ['srcSet'],\n    summary: [...aria],\n    table: [...aria],\n    // Note: this class is not normally allowed by GH, when manually writing\n    // `ol` as HTML in markdown, they adds it some other way.\n    // We can’t do that, so we have to allow it.\n    ul: [...aria, ['className', 'contains-task-list']],\n    '*': [\n      'abbr',\n      'accept',\n      'acceptCharset',\n      'accessKey',\n      'action',\n      'align',\n      'alt',\n      'axis',\n      'border',\n      'cellPadding',\n      'cellSpacing',\n      'char',\n      'charOff',\n      'charSet',\n      'checked',\n      'clear',\n      'colSpan',\n      'color',\n      'cols',\n      'compact',\n      'coords',\n      'dateTime',\n      'dir',\n      'disabled',\n      'encType',\n      'frame',\n      'hSpace',\n      'headers',\n      'height',\n      'hrefLang',\n      'htmlFor',\n      'id',\n      'isMap',\n      'itemProp',\n      'label',\n      'lang',\n      'maxLength',\n      'media',\n      'method',\n      'multiple',\n      'name',\n      'noHref',\n      'noShade',\n      'noWrap',\n      'open',\n      'prompt',\n      'readOnly',\n      'rel',\n      'rev',\n      'rowSpan',\n      'rows',\n      'rules',\n      'scope',\n      'selected',\n      'shape',\n      'size',\n      'span',\n      'start',\n      'summary',\n      'tabIndex',\n      'target',\n      'title',\n      'useMap',\n      'vAlign',\n      'value',\n      'width'\n    ]\n  },\n  clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name'],\n  clobberPrefix: 'user-content-',\n  protocols: {\n    cite: ['http', 'https'],\n    href: ['http', 'https', 'irc', 'ircs', 'mailto', 'xmpp'],\n    longDesc: ['http', 'https'],\n    src: ['http', 'https']\n  },\n  required: {\n    input: {disabled: true, type: 'checkbox'}\n  },\n  strip: ['script'],\n  tagNames: [\n    'a',\n    'b',\n    'blockquote',\n    'br',\n    'code',\n    'dd',\n    'del',\n    'details',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    // Note: `input` is not normally allowed by GH, when manually writing\n    // it in markdown, they add it from tasklists some other way.\n    // We can’t do that, so we have to allow it.\n    'input',\n    'ins',\n    'kbd',\n    'li',\n    'ol',\n    'p',\n    'picture',\n    'pre',\n    'q',\n    'rp',\n    'rt',\n    'ruby',\n    's',\n    'samp',\n    'section',\n    'source',\n    'span',\n    'strike',\n    'strong',\n    'sub',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'tr',\n    'tt',\n    'ul',\n    'var'\n  ]\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n */\n\n/**\n * @typedef {[string, ...Array<Exclude<Properties[keyof Properties], Array<any>> | RegExp>] | string} PropertyDefinition\n *   Definition for a property.\n *\n * @typedef Schema\n *   Schema that defines what nodes and properties are allowed.\n *\n *   The default schema is `defaultSchema`, which follows how GitHub cleans.\n *   If any top-level key is missing in the given schema, the corresponding\n *   value of the default schema is used.\n *\n *   To extend the standard schema with a few changes, clone `defaultSchema`\n *   like so:\n *\n *   ```js\n *   import deepmerge from 'deepmerge'\n *   import {h} from 'hastscript'\n *   import {defaultSchema, sanitize} from 'hast-util-sanitize'\n *\n *   // This allows `className` on all elements.\n *   const schema = deepmerge(defaultSchema, {attributes: {'*': ['className']}})\n *\n *   const tree = sanitize(h('div', {className: ['foo']}), schema)\n *\n *   // `tree` still has `className`.\n *   console.log(tree)\n *   // {\n *   //   type: 'element',\n *   //   tagName: 'div',\n *   //   properties: {className: ['foo']},\n *   //   children: []\n *   // }\n *   ```\n * @property {boolean | null | undefined} [allowComments=false]\n *   Whether to allow comment nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowComments: true\n *   ```\n * @property {boolean | null | undefined} [allowDoctypes=false]\n *   Whether to allow doctype nodes (default: `false`).\n *\n *   For example:\n *\n *   ```js\n *   allowDoctypes: true\n *   ```\n * @property {Record<string, Array<string>> | null | undefined} [ancestors]\n *   Map of tag names to a list of tag names which are required ancestors\n *   (default: `defaultSchema.ancestors`).\n *\n *   Elements with these tag names will be ignored if they occur outside of one\n *   of their allowed parents.\n *\n *   For example:\n *\n *   ```js\n *   ancestors: {\n *     tbody: ['table'],\n *     // …\n *     tr: ['table']\n *   }\n *   ```\n * @property {Record<string, Array<PropertyDefinition>> | null | undefined} [attributes]\n *   Map of tag names to allowed property names (default:\n *   `defaultSchema.attributes`).\n *\n *   The special key `'*'` as a tag name defines property names allowed on all\n *   elements.\n *\n *   The special value `'data*'` as a property name can be used to allow all\n *   `data` properties.\n *\n *   For example:\n *\n *   ```js\n *   attributes: {\n *     'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', …, 'href'\n *     // …\n *     '*': [\n *       'abbr',\n *       'accept',\n *       'acceptCharset',\n *       // …\n *       'vAlign',\n *       'value',\n *       'width'\n *     ]\n *   }\n *   ```\n *\n *   Instead of a single string in the array, which allows any property value\n *   for the field, you can use an array to allow several values.\n *   For example, `input: ['type']` allows `type` set to any value on `input`s.\n *   But `input: [['type', 'checkbox', 'radio']]` allows `type` when set to\n *   `'checkbox'` or `'radio'`.\n *\n *   You can use regexes, so for example `span: [['className', /^hljs-/]]`\n *   allows any class that starts with `hljs-` on `span`s.\n *\n *   When comma- or space-separated values are used (such as `className`), each\n *   value in is checked individually.\n *   For example, to allow certain classes on `span`s for syntax highlighting,\n *   use `span: [['className', 'number', 'operator', 'token']]`.\n *   This will allow `'number'`, `'operator'`, and `'token'` classes, but drop\n *   others.\n * @property {Array<string> | null | undefined} [clobber]\n *   List of property names that clobber (default: `defaultSchema.clobber`).\n *\n *   For example:\n *\n *   ```js\n *   clobber: ['ariaDescribedBy', 'ariaLabelledBy', 'id', 'name']\n *   ```\n * @property {string | null | undefined} [clobberPrefix]\n *   Prefix to use before clobbering properties (default:\n *   `defaultSchema.clobberPrefix`).\n *\n *   For example:\n *\n *   ```js\n *   clobberPrefix: 'user-content-'\n *   ```\n * @property {Record<string, Array<string> | null | undefined> | null | undefined} [protocols]\n *   Map of *property names* to allowed protocols (default:\n *   `defaultSchema.protocols`).\n *\n *   This defines URLs that are always allowed to have local URLs (relative to\n *   the current website, such as `this`, `#this`, `/this`, or `?this`), and\n *   only allowed to have remote URLs (such as `https://example.com`) if they\n *   use a known protocol.\n *\n *   For example:\n *\n *   ```js\n *   protocols: {\n *     cite: ['http', 'https'],\n *     // …\n *     src: ['http', 'https']\n *   }\n *   ```\n * @property {Record<string, Record<string, Properties[keyof Properties]>> | null | undefined} [required]\n *   Map of tag names to required property names with a default value\n *   (default: `defaultSchema.required`).\n *\n *   This defines properties that must be set.\n *   If a field does not exist (after the element was made safe), these will be\n *   added with the given value.\n *\n *   For example:\n *\n *   ```js\n *   required: {\n *     input: {disabled: true, type: 'checkbox'}\n *   }\n *   ```\n *\n *   > 👉 **Note**: properties are first checked based on `schema.attributes`,\n *   > then on `schema.required`.\n *   > That means properties could be removed by `attributes` and then added\n *   > again with `required`.\n * @property {Array<string> | null | undefined} [strip]\n *   List of tag names to strip from the tree (default: `defaultSchema.strip`).\n *\n *   By default, unsafe elements (those not in `schema.tagNames`) are replaced\n *   by what they contain.\n *   This option can drop their contents.\n *\n *   For example:\n *\n *   ```js\n *   strip: ['script']\n *   ```\n * @property {Array<string> | null | undefined} [tagNames]\n *   List of allowed tag names (default: `defaultSchema.tagNames`).\n *\n *   For example:\n *\n *   ```js\n *   tagNames: [\n *     'a',\n *     'b',\n *     // …\n *     'ul',\n *     'var'\n *   ]\n *   ```\n *\n * @typedef State\n *   Info passed around.\n * @property {Readonly<Schema>} schema\n *   Schema.\n * @property {Array<string>} stack\n *   Tag names of ancestors.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {position} from 'unist-util-position'\nimport {defaultSchema} from './schema.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Sanitize a tree.\n *\n * @param {Readonly<Nodes>} node\n *   Unsafe tree.\n * @param {Readonly<Schema> | null | undefined} [options]\n *   Configuration (default: `defaultSchema`).\n * @returns {Nodes}\n *   New, safe tree.\n */\nexport function sanitize(node, options) {\n  /** @type {Nodes} */\n  let ctx = {type: 'root', children: []}\n\n  /** @type {State} */\n  const state = {\n    schema: options ? {...defaultSchema, ...options} : defaultSchema,\n    stack: []\n  }\n  const replace = transform(state, node)\n\n  if (replace) {\n    if (Array.isArray(replace)) {\n      if (replace.length === 1) {\n        ctx = replace[0]\n      } else {\n        ctx.children = replace\n      }\n    } else {\n      ctx = replace\n    }\n  }\n\n  return ctx\n}\n\n/**\n * Sanitize `node`.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} node\n *   Unsafe node.\n * @returns {Array<ElementContent> | Nodes | undefined}\n *   Safe result.\n */\nfunction transform(state, node) {\n  if (node && typeof node === 'object') {\n    const unsafe = /** @type {Record<string, Readonly<unknown>>} */ (node)\n    const type = typeof unsafe.type === 'string' ? unsafe.type : ''\n\n    switch (type) {\n      case 'comment': {\n        return comment(state, unsafe)\n      }\n\n      case 'doctype': {\n        return doctype(state, unsafe)\n      }\n\n      case 'element': {\n        return element(state, unsafe)\n      }\n\n      case 'root': {\n        return root(state, unsafe)\n      }\n\n      case 'text': {\n        return text(state, unsafe)\n      }\n\n      default:\n    }\n  }\n}\n\n/**\n * Make a safe comment.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe comment-like value.\n * @returns {Comment | undefined}\n *   Safe comment (if with `allowComments`).\n */\nfunction comment(state, unsafe) {\n  if (state.schema.allowComments) {\n    // See <https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments>\n    const result = typeof unsafe.value === 'string' ? unsafe.value : ''\n    const index = result.indexOf('-->')\n    const value = index < 0 ? result : result.slice(0, index)\n\n    /** @type {Comment} */\n    const node = {type: 'comment', value}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe doctype.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe doctype-like value.\n * @returns {Doctype | undefined}\n *   Safe doctype (if with `allowDoctypes`).\n */\nfunction doctype(state, unsafe) {\n  if (state.schema.allowDoctypes) {\n    /** @type {Doctype} */\n    const node = {type: 'doctype'}\n\n    patch(node, unsafe)\n\n    return node\n  }\n}\n\n/**\n * Make a safe element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe element-like value.\n * @returns {Array<ElementContent> | Element | undefined}\n *   Safe element.\n */\nfunction element(state, unsafe) {\n  const name = typeof unsafe.tagName === 'string' ? unsafe.tagName : ''\n\n  state.stack.push(name)\n\n  const content = /** @type {Array<ElementContent>} */ (\n    children(state, unsafe.children)\n  )\n  const props = properties(state, unsafe.properties)\n\n  state.stack.pop()\n\n  let safeElement = false\n\n  if (\n    name.length > 0 &&\n    name !== '*' &&\n    (!state.schema.tagNames || state.schema.tagNames.includes(name))\n  ) {\n    safeElement = true\n\n    // Some nodes can break out of their context if they don’t have a certain\n    // ancestor.\n    if (state.schema.ancestors && own.call(state.schema.ancestors, name)) {\n      const ancestors = state.schema.ancestors[name]\n      let index = -1\n\n      safeElement = false\n\n      while (++index < ancestors.length) {\n        if (state.stack.includes(ancestors[index])) {\n          safeElement = true\n        }\n      }\n    }\n  }\n\n  if (!safeElement) {\n    return state.schema.strip && !state.schema.strip.includes(name)\n      ? content\n      : undefined\n  }\n\n  /** @type {Element} */\n  const node = {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: content\n  }\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe root-like value.\n * @returns {Root}\n *   Safe root.\n */\nfunction root(state, unsafe) {\n  const content = /** @type {Array<RootContent>} */ (\n    children(state, unsafe.children)\n  )\n\n  /** @type {Root} */\n  const node = {type: 'root', children: content}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make a safe text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe text-like value.\n * @returns {Text}\n *   Safe text.\n */\nfunction text(_, unsafe) {\n  const value = typeof unsafe.value === 'string' ? unsafe.value : ''\n  /** @type {Text} */\n  const node = {type: 'text', value}\n\n  patch(node, unsafe)\n\n  return node\n}\n\n/**\n * Make children safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} children\n *   Unsafe value.\n * @returns {Array<Nodes>}\n *   Safe children.\n */\nfunction children(state, children) {\n  /** @type {Array<Nodes>} */\n  const results = []\n\n  if (Array.isArray(children)) {\n    const childrenUnknown = /** @type {Array<Readonly<unknown>>} */ (children)\n    let index = -1\n\n    while (++index < childrenUnknown.length) {\n      const value = transform(state, childrenUnknown[index])\n\n      if (value) {\n        if (Array.isArray(value)) {\n          results.push(...value)\n        } else {\n          results.push(value)\n        }\n      }\n    }\n  }\n\n  return results\n}\n\n/**\n * Make element properties safe.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<unknown>} properties\n *   Unsafe value.\n * @returns {Properties}\n *   Safe value.\n */\nfunction properties(state, properties) {\n  const tagName = state.stack[state.stack.length - 1]\n  const attributes = state.schema.attributes\n  const required = state.schema.required\n  const specific =\n    attributes && own.call(attributes, tagName)\n      ? attributes[tagName]\n      : undefined\n  const defaults =\n    attributes && own.call(attributes, '*') ? attributes['*'] : undefined\n  const props = /** @type {Readonly<Record<string, Readonly<unknown>>>} */ (\n    properties && typeof properties === 'object' ? properties : {}\n  )\n  /** @type {Properties} */\n  const result = {}\n  /** @type {string} */\n  let key\n\n  for (key in props) {\n    if (own.call(props, key)) {\n      /** @type {Readonly<PropertyDefinition> | undefined} */\n      let definition\n\n      if (specific) definition = findDefinition(specific, key)\n      if (!definition && defaults) definition = findDefinition(defaults, key)\n\n      if (definition) {\n        const unsafe = props[key]\n        const safe = Array.isArray(unsafe)\n          ? propertyValues(state, definition, key, unsafe)\n          : propertyValue(state, definition, key, unsafe)\n\n        if (safe !== null && safe !== undefined) {\n          result[key] = safe\n        }\n      }\n    }\n  }\n\n  if (required && own.call(required, tagName)) {\n    const properties = required[tagName]\n\n    for (key in properties) {\n      if (own.call(properties, key) && !own.call(result, key)) {\n        result[key] = properties[key]\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value which is a list.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<Array<Readonly<unknown>>>} values\n *   Unsafe value (but an array).\n * @returns {Array<number | string>}\n *   Safe value.\n */\nfunction propertyValues(state, definition, key, values) {\n  let index = -1\n  /** @type {Array<number | string>} */\n  const result = []\n\n  while (++index < values.length) {\n    const value = propertyValue(state, definition, key, values[index])\n\n    if (typeof value === 'number' || typeof value === 'string') {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Sanitize a property value.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Readonly<PropertyDefinition>} definition\n *   Definition.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value (but not an array).\n * @returns {boolean | number | string | undefined}\n *   Safe value.\n */\nfunction propertyValue(state, definition, key, value) {\n  if (\n    typeof value !== 'boolean' &&\n    typeof value !== 'number' &&\n    typeof value !== 'string'\n  ) {\n    return\n  }\n\n  if (!safeProtocol(state, key, value)) {\n    return\n  }\n\n  // Just a string, or only one item in an array, means all values are OK.\n  // More than one item means an allow list.\n  if (typeof definition === 'object' && definition.length > 1) {\n    let ok = false\n    let index = 0 // Ignore `key`, which is the first item.\n\n    while (++index < definition.length) {\n      const allowed = definition[index]\n\n      // Expression.\n      if (allowed && typeof allowed === 'object' && 'flags' in allowed) {\n        if (allowed.test(String(value))) {\n          ok = true\n          break\n        }\n      }\n      // Primitive.\n      else if (allowed === value) {\n        ok = true\n        break\n      }\n    }\n\n    if (!ok) return\n  }\n\n  return state.schema.clobber &&\n    state.schema.clobberPrefix &&\n    state.schema.clobber.includes(key)\n    ? state.schema.clobberPrefix + value\n    : value\n}\n\n/**\n * Check whether `value` is a safe URL.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} key\n *   Field name.\n * @param {Readonly<unknown>} value\n *   Unsafe value.\n * @returns {boolean}\n *   Whether it’s a safe value.\n */\nfunction safeProtocol(state, key, value) {\n  const protocols =\n    state.schema.protocols && own.call(state.schema.protocols, key)\n      ? state.schema.protocols[key]\n      : undefined\n\n  // No protocols defined? Then everything is fine.\n  if (!protocols || protocols.length === 0) {\n    return true\n  }\n\n  const url = String(value)\n  const colon = url.indexOf(':')\n  const questionMark = url.indexOf('?')\n  const numberSign = url.indexOf('#')\n  const slash = url.indexOf('/')\n\n  if (\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign)\n  ) {\n    return true\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length) === protocol\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Add data and position.\n *\n * @param {Nodes} node\n *   Node to patch safe data and position on.\n * @param {Readonly<Record<string, Readonly<unknown>>>} unsafe\n *   Unsafe node-like value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(node, unsafe) {\n  const cleanPosition = position(\n    // @ts-expect-error: looks like a node.\n    unsafe\n  )\n\n  if (unsafe.data) {\n    node.data = structuredClone(unsafe.data)\n  }\n\n  if (cleanPosition) node.position = cleanPosition\n}\n\n/**\n *\n * @param {Readonly<Array<PropertyDefinition>>} definitions\n * @param {string} key\n * @returns {Readonly<PropertyDefinition> | undefined}\n */\nfunction findDefinition(definitions, key) {\n  /** @type {PropertyDefinition | undefined} */\n  let dataDefault\n  let index = -1\n\n  while (++index < definitions.length) {\n    const entry = definitions[index]\n    const name = typeof entry === 'string' ? entry : entry[0]\n\n    if (name === key) {\n      return entry\n    }\n\n    if (name === 'data*') dataDefault = entry\n  }\n\n  if (key.length > 4 && key.slice(0, 4).toLowerCase() === 'data') {\n    return dataDefault\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-sanitize').Schema} Schema\n */\n\nimport {sanitize} from 'hast-util-sanitize'\n\n/**\n * Sanitize HTML.\n *\n * @param {Schema | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSanitize(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (sanitize(tree, options))\n    return result\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n","/**\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== null && props[key] !== undefined) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('../index.js').State} State\n */\n\n// Make VS code see references to the above types.\n''\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('../index.js').State} State\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('stringify-entities').Options} StringifyEntitiesOptions\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Settings} settings\n *   User configuration.\n * @property {Schema} schema\n *   Current schema.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Quote} alternative\n *   Alternative quote.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options} from 'hast-util-to-html'\n * @import {Compiler, Processor} from 'unified'\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler<Root, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nconst hexCharacters = 'a-f\\\\d';\nconst match3or4Hex = `#?[${hexCharacters}]{3}[${hexCharacters}]?`;\nconst match6or8Hex = `#?[${hexCharacters}]{6}([${hexCharacters}]{2})?`;\nconst nonHexChars = new RegExp(`[^#${hexCharacters}]`, 'gi');\nconst validHexSize = new RegExp(`^${match3or4Hex}$|^${match6or8Hex}$`, 'i');\n\nmodule.exports = (hex, options = {}) => {\n\tif (typeof hex !== 'string' || nonHexChars.test(hex) || !validHexSize.test(hex)) {\n\t\tthrow new TypeError('Expected a valid hex string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\tlet alphaFromHex = 1;\n\n\tif (hex.length === 8) {\n\t\talphaFromHex = Number.parseInt(hex.slice(6, 8), 16) / 255;\n\t\thex = hex.slice(0, 6);\n\t}\n\n\tif (hex.length === 4) {\n\t\talphaFromHex = Number.parseInt(hex.slice(3, 4).repeat(2), 16) / 255;\n\t\thex = hex.slice(0, 3);\n\t}\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tconst number = Number.parseInt(hex, 16);\n\tconst red = number >> 16;\n\tconst green = (number >> 8) & 255;\n\tconst blue = number & 255;\n\tconst alpha = typeof options.alpha === 'number' ? options.alpha : alphaFromHex;\n\n\tif (options.format === 'array') {\n\t\treturn [red, green, blue, alpha];\n\t}\n\n\tif (options.format === 'css') {\n\t\tconst alphaString = alpha === 1 ? '' : ` / ${Number((alpha * 100).toFixed(2))}%`;\n\t\treturn `rgb(${red} ${green} ${blue}${alphaString})`;\n\t}\n\n\treturn {red, green, blue, alpha};\n};\n","import colorName from 'color-name';\nimport hex2Rgb from 'hex-rgb';\n\nconst pattern = /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\\b$/;\nvar hexRe = new RegExp(pattern, 'i');\n\nconst float = '-?\\\\d*(?:\\\\.\\\\d+)';\n\nconst number = `(${float}?)`;\nconst percentage = `(${float}?%)`;\nconst numberOrPercentage = `(${float}?%?)`;\n\nconst pattern$1 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl3Re = new RegExp(pattern$1);\n\nconst pattern$2 = `^\n  hsla?\\\\(\n    \\\\s*(-?\\\\d*(?:\\\\.\\\\d+)?(?:deg|rad|turn)?)\\\\s*\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar hsl4Re = new RegExp(pattern$2);\n\nconst pattern$3 = `^\n  rgba?\\\\(\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*,\n    \\\\s*${number}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3NumberRe = new RegExp(pattern$3);\n\nconst pattern$4 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*,\n    \\\\s*${percentage}\\\\s*\n    (?:,\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n  $\n`.replace(/\\n|\\s/g, '');\n\nvar rgb3PercentageRe = new RegExp(pattern$4);\n\nconst pattern$5 = `^\n  rgba?\\\\(\n    \\\\s*${number}\n    \\\\s+${number}\n    \\\\s+${number}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4NumberRe = new RegExp(pattern$5);\n\nconst pattern$6 = `^\n  rgba?\\\\(\n    \\\\s*${percentage}\n    \\\\s+${percentage}\n    \\\\s+${percentage}\n    \\\\s*(?:\\\\s*\\\\/\\\\s*${numberOrPercentage}\\\\s*)?\n  \\\\)\n$\n`.replace(/\\n|\\s/g, '');\n\nvar rgb4PercentageRe = new RegExp(pattern$6);\n\nconst pattern$7 = /^transparent$/;\nvar transparentRe = new RegExp(pattern$7, 'i');\n\nconst clamp = (num, min, max) => Math.min(Math.max(min, num), max);\n\n/* 500 => 255, -10 => 0, 128 => 128 */\nconst parseRGB = (num) => {\n  let n = num;\n  if (typeof n !== 'number') n = n.endsWith('%') ? (parseFloat(n) * 255) / 100 : parseFloat(n);\n  return clamp(Math.round(n), 0, 255);\n};\n\n/* 200 => 100, -100 => 0, 50 => 50 */\nconst parsePercentage = (percentage) => clamp(parseFloat(percentage), 0, 100);\n\n/* '50%' => 5.0, 200 => 1, -10 => 0 */\nfunction parseAlpha(alpha) {\n  let a = alpha;\n  if (typeof a !== 'number') a = a.endsWith('%') ? parseFloat(a) / 100 : parseFloat(a);\n  return clamp(a, 0, 1);\n}\n\nfunction getHEX(hex) {\n  const [r, g, b, a] = hex2Rgb(hex, { format: 'array' });\n  return getRGB([null, ...[r, g, b, a]]);\n}\n\nfunction getHSL([, h, s, l, a = 1]) {\n  let hh = h;\n  if (hh.endsWith('turn')) {\n    hh = (parseFloat(hh) * 360) / 1;\n  } else if (hh.endsWith('rad')) {\n    hh = Math.round((parseFloat(hh) * 180) / Math.PI);\n  } else {\n    hh = parseFloat(hh);\n  }\n  return {\n    type: 'hsl',\n    values: [hh, parsePercentage(s), parsePercentage(l)],\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\nfunction getRGB([, r, g, b, a = 1]) {\n  return {\n    type: 'rgb',\n    values: [r, g, b].map(parseRGB),\n    alpha: parseAlpha(a === null ? 1 : a)\n  };\n}\n\n/**\n * parse-css-color\n * @version v0.2.1\n * @link http://github.com/noeldelgado/parse-css-color/\n * @license MIT\n */\n\nconst parseCSSColor = (str) => {\n  if (typeof str !== 'string') return null;\n\n  const hex = hexRe.exec(str);\n  if (hex) return getHEX(hex[0]);\n\n  const hsl = hsl4Re.exec(str) || hsl3Re.exec(str);\n  if (hsl) return getHSL(hsl);\n\n  const rgb =\n    rgb4NumberRe.exec(str) ||\n    rgb4PercentageRe.exec(str) ||\n    rgb3NumberRe.exec(str) ||\n    rgb3PercentageRe.exec(str);\n  if (rgb) return getRGB(rgb);\n\n  if (transparentRe.exec(str)) return getRGB([null, 0, 0, 0, 0]);\n\n  const cn = colorName[str.toLowerCase()];\n  if (cn) return getRGB([null, cn[0], cn[1], cn[2], 1]);\n\n  return null;\n};\n\nexport default parseCSSColor;\n","import parse from 'style-to-object';\nimport parseCSSColor from 'parse-css-color';\nimport { allowedCssProperties } from './allowed-css-properties';\n\n/**\n * Checks a node for a `style` attribute and, if found, sanitizes it.\n *\n * @param node - node to check\n */\nexport function sanitizeStyle(node: any) {\n    if (node.tagName && node.properties?.style) {\n        // Sanitize the 'style' attribute of the node.\n        node.properties.style = sanitizeStyleValue(node.properties.style);\n    }\n}\n\n/**\n * Applies a whitelist to the CSS properties in the input string.\n * Any CSS properties not in the whitelist will be removed.\n *\n * @param styleValue - a string with CSS properties and values\n * @returns a sanitized version of the input string\n */\n\nexport function sanitizeStyleValue(styleValue: string): string {\n    try {\n        const css = parse(styleValue);\n        const normalizedCss = normalizeBackgroundColor(css);\n\n        return Object.entries(normalizedCss)\n            .filter(([key]) => allowedCssProperties.includes(key))\n            .map(([key, value]) => `${key}: ${value}`)\n            .join('; ');\n    } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Failed to parse style value', styleValue, error);\n\n        return '';\n    }\n}\n\n/**\n * Returns a copy of the input object with the `background` property removed.\n * If the `background` property's value was a valid CSS color value, the\n * returned object will have a `background-color` property with the same value.\n *\n * @param css - an object with CSS properties as keys and CSS values as values\n * @returns a modified copy of the input object\n */\n\nexport function normalizeBackgroundColor(css: Record<string, string>) {\n    const result = { ...css };\n    delete result.background;\n\n    if ('background' in css && isValidCssColorValue(css.background)) {\n        result['background-color'] = css.background;\n    }\n\n    return result;\n}\n\n/**\n * Check if a value is a valid CSS color value.\n * Note that this function is not 100% comprehensive. It does not support\n * `currentColor` or `inherit`. It also does not support `var(--variable)` or\n * `rgb(var(--variable))`, for example.\n *\n * @param value - a string to check\n * @returns `true` if the value is a valid CSS color value, `false` otherwise\n */\nexport function isValidCssColorValue(value: string): boolean {\n    return parseCSSColor(value) !== null;\n}\n","import { visit } from 'unist-util-visit';\nimport { Node } from 'unist';\nimport { Plugin, Transformer } from 'unified';\n\n/**\n * Creates a unified.js plugin that transforms image elements for lazy loading\n *\n * @param lazyLoadImages - Whether to enable lazy loading for images\n * @returns A unified.js plugin function\n */\nexport function createLazyLoadImagesPlugin(lazyLoadImages = false): Plugin {\n    return (): Transformer => {\n        if (!lazyLoadImages) {\n            return (tree: Node) => tree;\n        }\n\n        return (tree: Node) => {\n            visit(tree, 'element', (node: any) => {\n                if (node.tagName === 'img') {\n                    node.properties = node.properties || {};\n                    node.properties.loading = 'lazy';\n\n                    if (node.properties.src) {\n                        node.properties['data-src'] = node.properties.src;\n                        node.properties.src = undefined;\n                    }\n                }\n            });\n\n            return tree;\n        };\n    };\n}\n","import { visit } from 'unist-util-visit';\nimport { Node } from 'unist';\nimport { Plugin, Transformer } from 'unified';\nimport { getLinkAttributes } from '../text-editor/prosemirror-adapter/plugins/link/utils';\n\n/**\n * Creates a unified.js plugin that transforms link elements\n * to add target, rel, and referrerpolicy attributes.\n *\n * @returns A unified.js plugin function\n */\nexport function createLinksPlugin(): Plugin {\n    return (): Transformer => {\n        return (tree: Node) => {\n            visit(tree, 'element', (node: any) => {\n                if (node.tagName === 'a') {\n                    const href = node.properties?.href as string;\n\n                    if (!href) {\n                        return;\n                    }\n\n                    const attributes = getLinkAttributes(href);\n                    node.properties.target = attributes.target;\n                    node.properties.rel = attributes.rel;\n                    node.properties.referrerpolicy = attributes.referrerpolicy;\n                }\n            });\n\n            return tree;\n        };\n    };\n}\n","import { unified } from 'unified';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport remarkGfm from 'remark-gfm';\nimport rehypeParse from 'rehype-parse';\nimport rehypeSanitize, { defaultSchema } from 'rehype-sanitize';\nimport rehypeStringify from 'rehype-stringify';\nimport rehypeRaw from 'rehype-raw';\nimport { visit } from 'unist-util-visit';\nimport { sanitizeStyle } from './sanitize-style';\nimport { Node } from 'unist';\nimport { Schema } from 'rehype-sanitize/lib';\nimport { createLazyLoadImagesPlugin } from './image-markdown-plugin';\nimport { CustomElementDefinition } from '../../global/shared-types/custom-element.types';\nimport { createLinksPlugin } from './link-markdown-plugin';\n\n/**\n * Takes a string as input and returns a new string\n * where the text has been converted to HTML.\n *\n * If the text is formatted with .md markdown, it will\n * be transformed to HTML.\n *\n * If the text already is in HTML it will be sanitized and\n * \"dangerous\" tags such as <script> will be removed.\n *\n * @param text - The string to convert.\n * @param options - Options for the conversions.\n * @returns The resulting HTML.\n */\nexport async function markdownToHTML(\n    text: string,\n    options?: MarkdownToHTMLOptions,\n): Promise<string> {\n    if (options?.forceHardLineBreaks) {\n        text = text.replace(/(?<!\\\\)([\\n\\r])/g, '  $1');\n    }\n\n    const file = await unified()\n        .use(remarkParse)\n        .use(remarkGfm)\n        .use(remarkRehype, { allowDangerousHtml: true })\n        .use(rehypeRaw)\n        .use(createLinksPlugin())\n        .use(rehypeSanitize, {\n            ...getWhiteList(options?.whitelist ?? []),\n        })\n        .use(() => {\n            return (tree: Node) => {\n                // Run the sanitizeStyle function on all elements, to sanitize\n                // the value of the `style` attribute, if there is one.\n                visit(tree, 'element', sanitizeStyle);\n            };\n        })\n        .use(createLazyLoadImagesPlugin(options?.lazyLoadImages))\n        .use(rehypeStringify)\n        .process(text);\n\n    return file.toString();\n}\n\n/**\n * Sanitizes a given HTML string by removing dangerous tags and attributes.\n *\n * @param html - The string containing HTML to sanitize.\n * @param whitelist - Optional whitelist of custom components.\n * @returns The sanitized HTML string.\n */\nexport async function sanitizeHTML(\n    html: string,\n    whitelist?: CustomElementDefinition[],\n): Promise<string> {\n    const file = await unified()\n        .use(rehypeParse)\n        .use(rehypeSanitize, {\n            ...getWhiteList(whitelist ?? []),\n        })\n        .use(() => {\n            return (tree: Node) => {\n                // Run the sanitizeStyle function on all elements, to sanitize\n                // the value of the `style` attribute, if there is one.\n                visit(tree, 'element', sanitizeStyle);\n            };\n        })\n        .use(rehypeStringify)\n        .process(html);\n\n    return file.toString();\n}\n\nfunction getWhiteList(allowedComponents: CustomElementDefinition[]): Schema {\n    const defaultSchemaClone = [...(defaultSchema.attributes['*'] ?? [])];\n    const asteriskAttributeWhitelist = defaultSchemaClone.filter((attr) => {\n        return attr !== 'height';\n    });\n    asteriskAttributeWhitelist.push('style');\n\n    const whitelist: Schema = {\n        ...defaultSchema,\n        tagNames: [\n            ...(defaultSchema.tagNames || []),\n            ...allowedComponents.map((component) => component.tagName),\n        ],\n        attributes: {\n            ...defaultSchema.attributes,\n            p: [\n                ...(defaultSchema.attributes.p ?? []),\n                ['className', 'MsoNormal'],\n            ], // Allow the class 'MsoNormal' on <p> elements\n            a: [...(defaultSchema.attributes.a ?? []), 'referrerpolicy'], // Allow referrerpolicy on <a> elements\n            '*': asteriskAttributeWhitelist,\n        },\n    };\n\n    for (const component of allowedComponents) {\n        whitelist.attributes[component.tagName] = component.attributes;\n    }\n\n    return whitelist;\n}\n\n/**\n * Options for markdownToHTML.\n */\nexport interface MarkdownToHTMLOptions {\n    /**\n     * Set to `true` to convert all soft line breaks to hard line breaks.\n     */\n    forceHardLineBreaks?: boolean;\n    whitelist?: CustomElementDefinition[];\n    lazyLoadImages?: boolean;\n}\n"],"mappings":"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CxC,OAAOgqF,GAAQr6J,IAAS,aAAaqxE,KAAK76E,OAAOG,aAAaqJ,IAC1D3D,EACAA,EAAQ,GACd,CCLO,SAASi+J,GAAUpjK,EAAM8I,EAAMq6J,GACpC,MAAMh+J,EAAQ,KAAO7F,OAAOU,GAC5B,OAAOmjK,GAAQr6J,IAAS,KAAKqxE,KAAK76E,OAAOG,aAAaqJ,IAClD3D,EACAA,EAAQ,GACd,CCRO,MAAMk+J,GAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GK,MAAMC,GAAyB,CACpCh5G,KAAM,IACNhR,MAAO,IACPxU,KAAM,IACN8zB,MAAO,IACP5vB,OAAQ,IACRwtC,IAAK,IACL3zC,OAAQ,IACRmgC,KAAM,IACN8M,IAAK,IACLpoE,KAAM,IACNiuD,KAAM,IACNvX,MAAO,IACP4P,IAAK,IACL6V,IAAK,IACLvF,IAAK,IACLxX,KAAM,IACNvc,IAAK,IACL+tB,OAAQ,IACR8Q,KAAM,IACNC,KAAM,IACNnwC,MAAO,IACP2uB,MAAO,IACP6O,KAAM,IACN1O,OAAQ,IACRpjB,MAAO,IACPukC,KAAM,IACNvT,KAAM,IACNoG,MAAO,IACPtpB,OAAQ,IACRF,OAAQ,IACRQ,OAAQ,IACRuI,OAAQ,IACRznC,OA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"}