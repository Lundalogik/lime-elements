{"version":3,"names":["buttonDisabledVsHiddenCss","ButtonDisabledVsHideExample","this","items","text","icon","disabledItem","disabled","handleDoNotSubmit","doNotSubmitClicked","setChecked","event","stopPropagation","value","detail","isClicked","clicked","isClickedDontExample","clickedDontExample","render","h","Host","doDescription","doNotDescription","slot","label","required","onChange","checked","invalid","onClick","id","elementId","style","padding","name","size","class","borderLeft"],"sources":["./src/design-guidelines/disabled-hidden/examples/button-disabled-vs-hidden.scss?tag=limel-example-button-disabled-vs-hidden&encapsulation=shadow","./src/design-guidelines/disabled-hidden/examples/disabled-vs-hidden.tsx"],"sourcesContent":[".do,\n.do-not {\n    .relevant-button,\n    limel-button {\n        margin: 1rem;\n    }\n\n    .assign {\n        padding-bottom: 0;\n    }\n}\n\n#tooltip-example {\n    width: 5rem;\n}\n\n#tooltip {\n    cursor: help;\n}\n\n.button-icon {\n    display: flex;\n    align-items: center;\n}\n\n.split-example,\n.relevant-buttons-example {\n    limel-split-button {\n        margin: 1rem;\n    }\n}\n","import { Component, h, Host, State } from '@stencil/core';\nimport { ListSeparator } from '../../../components/list-item/list-item.types';\nimport { MenuItem } from '../../../components/menu/menu.types';\n\n@Component({\n    tag: 'limel-example-button-disabled-vs-hidden',\n    shadow: true,\n    styleUrl: 'button-disabled-vs-hidden.scss',\n})\nexport class ButtonDisabledVsHideExample {\n    @State()\n    private value: boolean = false;\n\n    @State()\n    private clicked: boolean = false;\n\n    @State()\n    private clickedDontExample: boolean = false;\n\n    @State()\n    public required: boolean;\n\n    @State()\n    private doNotSubmitClicked: boolean = false;\n\n    private readonly items: Array<ListSeparator | MenuItem> = [\n        { text: 'Save as', icon: 'save_as' },\n    ];\n\n    private readonly disabledItem: Array<ListSeparator | MenuItem> = [\n        { text: 'Save as', icon: 'save_as', disabled: true },\n    ];\n\n    private readonly handleDoNotSubmit = () => {\n        this.doNotSubmitClicked = true;\n    };\n\n    public render() {\n        return (\n            <Host>\n                <h3>Disabled vs. Hidden</h3>\n                <p>\n                    When should an interactive element –like a button– be\n                    \"Disabled\" and when should we avoid displaying it? This is a\n                    crucial question in user interface design, and the choice\n                    between the two should always be context-dependent. These\n                    guidelines provide insights into when to apply each approach\n                    to optimize user experiences.\n                    <br />\n                    <br />\n                    <b> Disabling an interactive element:</b>\n                </p>\n                <p>\n                    Use button disabling when the action the button represents\n                    is not currently available but may become available in the\n                    future. For example, you can disable a \"Submit\" button until\n                    all required form fields are filled out. Keep in mind that\n                    in such cases, users should be able to do something to\n                    enable the <code>disabled</code> element!\n                </p>\n                <limel-example-do-do-not\n                    doDescription=\"The submit button is disabled until required fields are filled in.\"\n                    doNotDescription=\"The submit button is enabled. Clicking it only makes required fields invalid.\"\n                >\n                    <limel-checkbox\n                        slot=\"do\"\n                        label=\"Accept terms and conditions\"\n                        required\n                        onChange={this.setChecked}\n                        checked={this.value}\n                    />\n                    <limel-button\n                        slot=\"do\"\n                        label=\"Submit\"\n                        disabled={!this.value}\n                    />\n                    <limel-checkbox\n                        slot=\"do-not\"\n                        label=\"Accept terms and conditions\"\n                        required\n                        invalid={this.doNotSubmitClicked}\n                    />\n                    <limel-button\n                        slot=\"do-not\"\n                        label=\"Submit\"\n                        onClick={this.handleDoNotSubmit}\n                    />\n                </limel-example-do-do-not>\n                <p>\n                    Simply showing a disabled element in the user interface\n                    might not be enough for the user to realize what they should\n                    do to enable it. Therefore, it's very helpful to communicate\n                    to the user why they can't perform that certain action.\n                    Disabled buttons for instance, could have a tooltip or\n                    message explaining why they are disabled.\n                </p>\n                <p>\n                    Another idea could be to display a more noticeable visual\n                    element next to the disabled element, which hints about an\n                    explanation or further information. For example, indicating\n                    to the user that they need to complete a certain step or\n                    meet specific conditions before proceeding.\n                </p>\n                <limel-example-do-do-not\n                    doDescription=\"Disabled button together with a Tooltip that clarifies why the button is disabled.\"\n                    doNotDescription=\"Disabled button without any explanation\"\n                >\n                    <div slot=\"do\">\n                        <limel-button\n                            id=\"tooltip-example\"\n                            disabled\n                            icon=\"phone\"\n                            label=\"Call\"\n                        />\n                        <limel-tooltip\n                            label=\"Select a recipient to make a call\"\n                            elementId=\"tooltip-example\"\n                        />\n                    </div>\n                    <span slot=\"do\" style={{ padding: '0 2rem' }}>\n                        or\n                    </span>\n                    <div slot=\"do\">\n                        <limel-button\n                            disabled\n                            icon=\"plus_math\"\n                            label=\"Add recipient\"\n                        />\n                        <limel-icon name=\"info\" id=\"tooltip\" size=\"x-small\" />\n                        <limel-tooltip\n                            label=\"To activate this feature, call our support!\"\n                            elementId=\"tooltip\"\n                        />\n                    </div>\n                    <div slot=\"do-not\">\n                        <limel-button disabled icon=\"phone\" label=\"Call\" />\n                    </div>\n                </limel-example-do-do-not>\n                <h3>Hiding an interactive element:</h3>\n                <p>\n                    Sometimes, displaying a disabled element does not make\n                    sense. This could be of course due to various reasons, but a\n                    common scenario is coexistence of another \"enabled\" element\n                    that does the opposite of what the disabled element does.{' '}\n                    <br /> In this example, there is no point to show two\n                    buttons, one for \"assigning\" and one for \"un-assigning\". The\n                    \"Assign\" button should be hidden if it's not relevant to a\n                    context. If the user is already assigned there is no sense\n                    in having the assign button, it is better to show the{' '}\n                    <b> unassign</b> button instead.\n                </p>\n                <limel-example-do-do-not>\n                    <limel-button\n                        slot=\"do\"\n                        class=\"relevant-button\"\n                        icon={this.clicked ? '' : 'whole_hand_right'}\n                        label={this.clicked ? 'Unassign me' : 'Assign me'}\n                        onClick={this.isClicked}\n                    />\n                    <limel-button\n                        slot=\"do-not\"\n                        class=\"relevant-button assign\"\n                        icon=\"whole_hand_right\"\n                        label=\"Assign me\"\n                        disabled={this.clickedDontExample}\n                        onClick={this.isClickedDontExample}\n                    />\n                    <limel-button\n                        slot=\"do-not\"\n                        class=\"relevant-button\"\n                        label=\"Unassign me\"\n                        disabled={!this.clickedDontExample}\n                        onClick={this.isClickedDontExample}\n                    />\n                </limel-example-do-do-not>\n                <p>\n                    When an action is permanently unavailable or not allowed for\n                    a particular user role (e.g., an admin-only action), it's\n                    best to hide the button rather than disabling it.\n                </p>\n                <limel-example-do-do-not>\n                    <div slot=\"do-not\">\n                        <p>What users & admins both see</p>\n                        <limel-split-button\n                            slot=\"do-not\"\n                            label=\"Save\"\n                            icon=\"save\"\n                            items={this.disabledItem}\n                        />\n                    </div>\n                    <div slot=\"do\">\n                        <p>What users see</p>\n                        <limel-split-button label=\"Save\" icon=\"save\" />\n                    </div>\n                    <div\n                        slot=\"do\"\n                        style={{\n                            borderLeft: '1px dashed rgb(var(--contrast-600))',\n                        }}\n                    />\n                    <div slot=\"do\">\n                        <p>What admins see</p>\n                        <limel-split-button\n                            label=\"Save\"\n                            icon=\"save\"\n                            items={this.items}\n                        />\n                    </div>\n                </limel-example-do-do-not>\n            </Host>\n        );\n    }\n\n    private readonly setChecked = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.value = event.detail;\n    };\n\n    private readonly isClicked = () => {\n        this.clicked = !this.clicked;\n    };\n\n    private readonly isClickedDontExample = () => {\n        this.clickedDontExample = !this.clickedDontExample;\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAA4B,yU,MCSrBC,EAA2B,M,yBAgBnBC,KAAAC,MAAyC,CACtD,CAAEC,KAAM,UAAWC,KAAM,YAGZH,KAAAI,aAAgD,CAC7D,CAAEF,KAAM,UAAWC,KAAM,UAAWE,SAAU,OAGjCL,KAAAM,kBAAoB,KACjCN,KAAKO,mBAAqB,IAAI,EAmLjBP,KAAAQ,WAAcC,IAC3BA,EAAMC,kBACNV,KAAKW,MAAQF,EAAMG,MAAM,EAGZZ,KAAAa,UAAY,KACzBb,KAAKc,SAAWd,KAAKc,OAAO,EAGfd,KAAAe,qBAAuB,KACpCf,KAAKgB,oBAAsBhB,KAAKgB,kBAAkB,E,WApN7B,M,aAGE,M,wBAGW,M,gDAMA,K,CAc/BC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,iCACAA,EAAA,6UAOIA,EAAA,WACAA,EAAA,WACAA,EAAA,gDAEJA,EAAA,4TAMeA,EAAA,wBAAqB,aAEpCA,EAAA,2BACIE,cAAc,qEACdC,iBAAiB,iFAEjBH,EAAA,kBACII,KAAK,KACLC,MAAM,8BACNC,SAAQ,KACRC,SAAUzB,KAAKQ,WACfkB,QAAS1B,KAAKW,QAElBO,EAAA,gBACII,KAAK,KACLC,MAAM,SACNlB,UAAWL,KAAKW,QAEpBO,EAAA,kBACII,KAAK,SACLC,MAAM,8BACNC,SAAQ,KACRG,QAAS3B,KAAKO,qBAElBW,EAAA,gBACII,KAAK,SACLC,MAAM,SACNK,QAAS5B,KAAKM,qBAGtBY,EAAA,uVAQAA,EAAA,kSAOAA,EAAA,2BACIE,cAAc,qFACdC,iBAAiB,2CAEjBH,EAAA,OAAKI,KAAK,MACNJ,EAAA,gBACIW,GAAG,kBACHxB,SAAQ,KACRF,KAAK,QACLoB,MAAM,SAEVL,EAAA,iBACIK,MAAM,oCACNO,UAAU,qBAGlBZ,EAAA,QAAMI,KAAK,KAAKS,MAAO,CAAEC,QAAS,WAAU,MAG5Cd,EAAA,OAAKI,KAAK,MACNJ,EAAA,gBACIb,SAAQ,KACRF,KAAK,YACLoB,MAAM,kBAEVL,EAAA,cAAYe,KAAK,OAAOJ,GAAG,UAAUK,KAAK,YAC1ChB,EAAA,iBACIK,MAAM,8CACNO,UAAU,aAGlBZ,EAAA,OAAKI,KAAK,UACNJ,EAAA,gBAAcb,SAAQ,KAACF,KAAK,QAAQoB,MAAM,WAGlDL,EAAA,4CACAA,EAAA,qPAI8D,IAC1DA,EAAA,WAAM,4RAIgD,IACtDA,EAAA,sBAAgB,oBAEpBA,EAAA,+BACIA,EAAA,gBACII,KAAK,KACLa,MAAM,kBACNhC,KAAMH,KAAKc,QAAU,GAAK,mBAC1BS,MAAOvB,KAAKc,QAAU,cAAgB,YACtCc,QAAS5B,KAAKa,YAElBK,EAAA,gBACII,KAAK,SACLa,MAAM,yBACNhC,KAAK,mBACLoB,MAAM,YACNlB,SAAUL,KAAKgB,mBACfY,QAAS5B,KAAKe,uBAElBG,EAAA,gBACII,KAAK,SACLa,MAAM,kBACNZ,MAAM,cACNlB,UAAWL,KAAKgB,mBAChBY,QAAS5B,KAAKe,wBAGtBG,EAAA,qLAKAA,EAAA,+BACIA,EAAA,OAAKI,KAAK,UACNJ,EAAA,yCACAA,EAAA,sBACII,KAAK,SACLC,MAAM,OACNpB,KAAK,OACLF,MAAOD,KAAKI,gBAGpBc,EAAA,OAAKI,KAAK,MACNJ,EAAA,2BACAA,EAAA,sBAAoBK,MAAM,OAAOpB,KAAK,UAE1Ce,EAAA,OACII,KAAK,KACLS,MAAO,CACHK,WAAY,yCAGpBlB,EAAA,OAAKI,KAAK,MACNJ,EAAA,4BACAA,EAAA,sBACIK,MAAM,OACNpB,KAAK,OACLF,MAAOD,KAAKC,U"}