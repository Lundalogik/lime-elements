{"version":3,"names":["TextEditorWithHtmlExample","this","setReadonly","event","stopPropagation","readonly","detail","handleChange","value","render","h","onChange","contentType","checked","label"],"sources":["./src/components/text-editor/examples/text-editor-with-html.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n/**\n * Text editor in HTML mode.\n *\n * When using the text editor in HTML mode the `value` property is expected to contain\n * an html formatted string and the output will likewise be html.\n */\n@Component({\n    tag: 'limel-example-text-editor-with-html',\n    shadow: true,\n})\nexport class TextEditorWithHtmlExample {\n    @State()\n    private value: string = '<em>Hello</em>, <strong>html</strong>!';\n\n    @State()\n    private readonly = false;\n\n    public render() {\n        return [\n            <limel-text-editor\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                contentType=\"html\"\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAWaA,EAAyB,M,yBA0B1BC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,aAAgBJ,IACpBF,KAAKO,MAAQL,EAAMG,MAAM,E,WA9BL,yC,cAGL,K,CAEZG,SACH,MAAO,CACHC,EAAA,qBACIF,MAAOP,KAAKO,MACZG,SAAUV,KAAKM,aACfF,SAAUJ,KAAKI,SACfO,YAAY,SAEhBF,EAAA,8BACIA,EAAA,kBACIG,QAASZ,KAAKI,SACdS,MAAM,WACNH,SAAUV,KAAKC,eAGvBQ,EAAA,uBAAqBF,MAAOP,KAAKO,Q"}