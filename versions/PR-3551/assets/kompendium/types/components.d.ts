/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { JsonDocs, JsonDocsComponent, JsonDocsTag } from "./stencil-public-runtime";
import { MatchResults } from "@stencil/router";
import { KompendiumData, MenuItem } from "./kompendium/config";
import { ProplistItem } from "./components/proplist/proplist";
export namespace Components {
    interface KompendiumApp {
        /**
          * Path to `kompendium.json`
         */
        "path": string;
    }
    interface KompendiumCode {
        /**
          * Source code
         */
        "code": string;
        /**
          * The language of the code
         */
        "language": string;
        /**
          * @ignore
         */
        "random": number;
    }
    interface KompendiumComponent {
        /**
          * The generated documentation data
         */
        "docs": JsonDocs;
        /**
          * Matched route parameters
         */
        "match": MatchResults;
    }
    interface KompendiumExampleCode {
    }
    interface KompendiumExampleMarkdown {
    }
    interface KompendiumGuide {
        "data": KompendiumData;
    }
    interface KompendiumMarkdown {
        /**
          * The text to render
         */
        "text": string;
    }
    interface KompendiumNavigation {
        /**
          * Title to display at the top of the navigation
         */
        "header": string;
        /**
          * The menu to display
         */
        "menu": MenuItem[];
    }
    interface KompendiumPlayground {
        /**
          * The component to display
         */
        "component": JsonDocsComponent;
    }
    interface KompendiumProplist {
        /**
          * List of properties
         */
        "items": ProplistItem[];
    }
    interface KompendiumSearch {
    }
    interface KompendiumTaglist {
        /**
          * Set to `true` if the list should be rendered in compact mode
         */
        "compact": boolean;
        /**
          * List of tags to render
         */
        "tags": JsonDocsTag[];
    }
}
declare global {
    interface HTMLKompendiumAppElement extends Components.KompendiumApp, HTMLStencilElement {
    }
    var HTMLKompendiumAppElement: {
        prototype: HTMLKompendiumAppElement;
        new (): HTMLKompendiumAppElement;
    };
    interface HTMLKompendiumCodeElement extends Components.KompendiumCode, HTMLStencilElement {
    }
    var HTMLKompendiumCodeElement: {
        prototype: HTMLKompendiumCodeElement;
        new (): HTMLKompendiumCodeElement;
    };
    interface HTMLKompendiumComponentElement extends Components.KompendiumComponent, HTMLStencilElement {
    }
    var HTMLKompendiumComponentElement: {
        prototype: HTMLKompendiumComponentElement;
        new (): HTMLKompendiumComponentElement;
    };
    interface HTMLKompendiumExampleCodeElement extends Components.KompendiumExampleCode, HTMLStencilElement {
    }
    var HTMLKompendiumExampleCodeElement: {
        prototype: HTMLKompendiumExampleCodeElement;
        new (): HTMLKompendiumExampleCodeElement;
    };
    interface HTMLKompendiumExampleMarkdownElement extends Components.KompendiumExampleMarkdown, HTMLStencilElement {
    }
    var HTMLKompendiumExampleMarkdownElement: {
        prototype: HTMLKompendiumExampleMarkdownElement;
        new (): HTMLKompendiumExampleMarkdownElement;
    };
    interface HTMLKompendiumGuideElement extends Components.KompendiumGuide, HTMLStencilElement {
    }
    var HTMLKompendiumGuideElement: {
        prototype: HTMLKompendiumGuideElement;
        new (): HTMLKompendiumGuideElement;
    };
    interface HTMLKompendiumMarkdownElement extends Components.KompendiumMarkdown, HTMLStencilElement {
    }
    var HTMLKompendiumMarkdownElement: {
        prototype: HTMLKompendiumMarkdownElement;
        new (): HTMLKompendiumMarkdownElement;
    };
    interface HTMLKompendiumNavigationElement extends Components.KompendiumNavigation, HTMLStencilElement {
    }
    var HTMLKompendiumNavigationElement: {
        prototype: HTMLKompendiumNavigationElement;
        new (): HTMLKompendiumNavigationElement;
    };
    interface HTMLKompendiumPlaygroundElement extends Components.KompendiumPlayground, HTMLStencilElement {
    }
    var HTMLKompendiumPlaygroundElement: {
        prototype: HTMLKompendiumPlaygroundElement;
        new (): HTMLKompendiumPlaygroundElement;
    };
    interface HTMLKompendiumProplistElement extends Components.KompendiumProplist, HTMLStencilElement {
    }
    var HTMLKompendiumProplistElement: {
        prototype: HTMLKompendiumProplistElement;
        new (): HTMLKompendiumProplistElement;
    };
    interface HTMLKompendiumSearchElement extends Components.KompendiumSearch, HTMLStencilElement {
    }
    var HTMLKompendiumSearchElement: {
        prototype: HTMLKompendiumSearchElement;
        new (): HTMLKompendiumSearchElement;
    };
    interface HTMLKompendiumTaglistElement extends Components.KompendiumTaglist, HTMLStencilElement {
    }
    var HTMLKompendiumTaglistElement: {
        prototype: HTMLKompendiumTaglistElement;
        new (): HTMLKompendiumTaglistElement;
    };
    interface HTMLElementTagNameMap {
        "kompendium-app": HTMLKompendiumAppElement;
        "kompendium-code": HTMLKompendiumCodeElement;
        "kompendium-component": HTMLKompendiumComponentElement;
        "kompendium-example-code": HTMLKompendiumExampleCodeElement;
        "kompendium-example-markdown": HTMLKompendiumExampleMarkdownElement;
        "kompendium-guide": HTMLKompendiumGuideElement;
        "kompendium-markdown": HTMLKompendiumMarkdownElement;
        "kompendium-navigation": HTMLKompendiumNavigationElement;
        "kompendium-playground": HTMLKompendiumPlaygroundElement;
        "kompendium-proplist": HTMLKompendiumProplistElement;
        "kompendium-search": HTMLKompendiumSearchElement;
        "kompendium-taglist": HTMLKompendiumTaglistElement;
    }
}
declare namespace LocalJSX {
    interface KompendiumApp {
        /**
          * Path to `kompendium.json`
         */
        "path"?: string;
    }
    interface KompendiumCode {
        /**
          * Source code
         */
        "code"?: string;
        /**
          * The language of the code
         */
        "language"?: string;
        /**
          * @ignore
         */
        "random"?: number;
    }
    interface KompendiumComponent {
        /**
          * The generated documentation data
         */
        "docs"?: JsonDocs;
        /**
          * Matched route parameters
         */
        "match"?: MatchResults;
    }
    interface KompendiumExampleCode {
    }
    interface KompendiumExampleMarkdown {
    }
    interface KompendiumGuide {
        "data"?: KompendiumData;
    }
    interface KompendiumMarkdown {
        /**
          * The text to render
         */
        "text"?: string;
    }
    interface KompendiumNavigation {
        /**
          * Title to display at the top of the navigation
         */
        "header"?: string;
        /**
          * The menu to display
         */
        "menu"?: MenuItem[];
    }
    interface KompendiumPlayground {
        /**
          * The component to display
         */
        "component"?: JsonDocsComponent;
    }
    interface KompendiumProplist {
        /**
          * List of properties
         */
        "items"?: ProplistItem[];
    }
    interface KompendiumSearch {
    }
    interface KompendiumTaglist {
        /**
          * Set to `true` if the list should be rendered in compact mode
         */
        "compact"?: boolean;
        /**
          * List of tags to render
         */
        "tags"?: JsonDocsTag[];
    }
    interface IntrinsicElements {
        "kompendium-app": KompendiumApp;
        "kompendium-code": KompendiumCode;
        "kompendium-component": KompendiumComponent;
        "kompendium-example-code": KompendiumExampleCode;
        "kompendium-example-markdown": KompendiumExampleMarkdown;
        "kompendium-guide": KompendiumGuide;
        "kompendium-markdown": KompendiumMarkdown;
        "kompendium-navigation": KompendiumNavigation;
        "kompendium-playground": KompendiumPlayground;
        "kompendium-proplist": KompendiumProplist;
        "kompendium-search": KompendiumSearch;
        "kompendium-taglist": KompendiumTaglist;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kompendium-app": LocalJSX.KompendiumApp & JSXBase.HTMLAttributes<HTMLKompendiumAppElement>;
            "kompendium-code": LocalJSX.KompendiumCode & JSXBase.HTMLAttributes<HTMLKompendiumCodeElement>;
            "kompendium-component": LocalJSX.KompendiumComponent & JSXBase.HTMLAttributes<HTMLKompendiumComponentElement>;
            "kompendium-example-code": LocalJSX.KompendiumExampleCode & JSXBase.HTMLAttributes<HTMLKompendiumExampleCodeElement>;
            "kompendium-example-markdown": LocalJSX.KompendiumExampleMarkdown & JSXBase.HTMLAttributes<HTMLKompendiumExampleMarkdownElement>;
            "kompendium-guide": LocalJSX.KompendiumGuide & JSXBase.HTMLAttributes<HTMLKompendiumGuideElement>;
            "kompendium-markdown": LocalJSX.KompendiumMarkdown & JSXBase.HTMLAttributes<HTMLKompendiumMarkdownElement>;
            "kompendium-navigation": LocalJSX.KompendiumNavigation & JSXBase.HTMLAttributes<HTMLKompendiumNavigationElement>;
            "kompendium-playground": LocalJSX.KompendiumPlayground & JSXBase.HTMLAttributes<HTMLKompendiumPlaygroundElement>;
            "kompendium-proplist": LocalJSX.KompendiumProplist & JSXBase.HTMLAttributes<HTMLKompendiumProplistElement>;
            "kompendium-search": LocalJSX.KompendiumSearch & JSXBase.HTMLAttributes<HTMLKompendiumSearchElement>;
            "kompendium-taglist": LocalJSX.KompendiumTaglist & JSXBase.HTMLAttributes<HTMLKompendiumTaglistElement>;
        }
    }
}
