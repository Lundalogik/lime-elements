{"version":3,"names":["TextEditorCompositeExample","this","availableUis","text","value","setReadonly","event","stopPropagation","readonly","detail","setRequired","required","setInvalid","invalid","setDisabled","disabled","setAllowResize","allowResize","handleLabelChange","label","handleHelperTextChange","helperText","handlePlaceholderChange","placeholder","handleChange","handleNewSelection","selectedUi","render","h","onChange","ui","checked","options","style","checkValidity"],"sources":["./src/components/text-editor/examples/text-editor-composite.tsx"],"sourcesContent":["import { Option, LimelSelectCustomEvent } from '@limetech/lime-elements';\nimport { Component, h, State, Watch } from '@stencil/core';\n/**\n * Composite example\n */\n@Component({\n    tag: 'limel-example-text-editor-composite',\n    shadow: true,\n})\nexport class TextEditorCompositeExample {\n    @State()\n    private value: string = 'Hello, world!';\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private allowResize = false;\n\n    @State()\n    private label: string;\n\n    @State()\n    private placeholder: string;\n\n    @State()\n    private helperText: string;\n\n    @State()\n    private selectedUi: Option<'standard' | 'minimal'> = {\n        text: 'standard',\n        value: 'standard',\n    };\n\n    private availableUis: Array<Option<'standard' | 'minimal'>> = [\n        { text: 'standard', value: 'standard' },\n        { text: 'minimal', value: 'minimal' },\n    ];\n\n    public render() {\n        return [\n            <limel-text-editor\n                label={this.label}\n                helperText={this.helperText}\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                required={this.required}\n                disabled={this.disabled}\n                invalid={this.invalid}\n                placeholder={this.placeholder}\n                allowResize={this.allowResize}\n                ui={this.selectedUi.value}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.allowResize}\n                    label=\"Allow resize\"\n                    onChange={this.setAllowResize}\n                />\n                <limel-select\n                    label=\"ui\"\n                    options={this.availableUis}\n                    value={this.selectedUi}\n                    onChange={this.handleNewSelection}\n                />\n                <hr\n                    style={{\n                        'grid-column': '1/-1',\n                    }}\n                />\n                <limel-input-field\n                    label=\"label\"\n                    value={this.label}\n                    onChange={this.handleLabelChange}\n                />\n                <limel-input-field\n                    label=\"helperText\"\n                    value={this.helperText}\n                    onChange={this.handleHelperTextChange}\n                />\n                <limel-input-field\n                    label=\"placeholder\"\n                    value={this.placeholder}\n                    onChange={this.handlePlaceholderChange}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    @Watch('required')\n    @Watch('value')\n    protected checkValidity() {\n        this.invalid = this.required && !this.value;\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setAllowResize = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.allowResize = event.detail;\n    };\n\n    private handleLabelChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.label = event.detail;\n    };\n\n    private handleHelperTextChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.helperText = event.detail;\n    };\n\n    private handlePlaceholderChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.placeholder = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n\n    private handleNewSelection = (\n        event: LimelSelectCustomEvent<Option<'standard' | 'minimal'>>,\n    ) => {\n        this.selectedUi = event.detail;\n    };\n}\n"],"mappings":"qDASaA,EAA0B,M,yBAkC3BC,KAAAC,aAAsD,CAC1D,CAAEC,KAAM,WAAYC,MAAO,YAC3B,CAAED,KAAM,UAAWC,MAAO,YAiFtBH,KAAAI,YAAeC,IACnBA,EAAMC,kBACNN,KAAKO,SAAWF,EAAMG,MAAM,EAGxBR,KAAAS,YAAeJ,IACnBA,EAAMC,kBACNN,KAAKU,SAAWL,EAAMG,MAAM,EAGxBR,KAAAW,WAAcN,IAClBA,EAAMC,kBACNN,KAAKY,QAAUP,EAAMG,MAAM,EAGvBR,KAAAa,YAAeR,IACnBA,EAAMC,kBACNN,KAAKc,SAAWT,EAAMG,MAAM,EAGxBR,KAAAe,eAAkBV,IACtBA,EAAMC,kBACNN,KAAKgB,YAAcX,EAAMG,MAAM,EAG3BR,KAAAiB,kBAAqBZ,IACzBA,EAAMC,kBACNN,KAAKkB,MAAQb,EAAMG,MAAM,EAGrBR,KAAAmB,uBAA0Bd,IAC9BA,EAAMC,kBACNN,KAAKoB,WAAaf,EAAMG,MAAM,EAG1BR,KAAAqB,wBAA2BhB,IAC/BA,EAAMC,kBACNN,KAAKsB,YAAcjB,EAAMG,MAAM,EAG3BR,KAAAuB,aAAgBlB,IACpBL,KAAKG,MAAQE,EAAMG,MAAM,EAGrBR,KAAAwB,mBACJnB,IAEAL,KAAKyB,WAAapB,EAAMG,MAAM,E,WAlKV,gB,cAGL,M,aAGD,M,cAGC,M,cAGA,M,iBAGG,M,0FAY+B,CACjDN,KAAM,WACNC,MAAO,W,CAQJuB,SACH,MAAO,CACHC,EAAA,qBACIT,MAAOlB,KAAKkB,MACZE,WAAYpB,KAAKoB,WACjBjB,MAAOH,KAAKG,MACZyB,SAAU5B,KAAKuB,aACfhB,SAAUP,KAAKO,SACfG,SAAUV,KAAKU,SACfI,SAAUd,KAAKc,SACfF,QAASZ,KAAKY,QACdU,YAAatB,KAAKsB,YAClBN,YAAahB,KAAKgB,YAClBa,GAAI7B,KAAKyB,WAAWtB,QAExBwB,EAAA,8BACIA,EAAA,kBACIG,QAAS9B,KAAKO,SACdW,MAAM,WACNU,SAAU5B,KAAKI,cAEnBuB,EAAA,kBACIG,QAAS9B,KAAKY,QACdM,MAAM,UACNU,SAAU5B,KAAKW,aAEnBgB,EAAA,kBACIG,QAAS9B,KAAKU,SACdQ,MAAM,WACNU,SAAU5B,KAAKS,cAEnBkB,EAAA,kBACIG,QAAS9B,KAAKc,SACdI,MAAM,WACNU,SAAU5B,KAAKa,cAEnBc,EAAA,kBACIG,QAAS9B,KAAKgB,YACdE,MAAM,eACNU,SAAU5B,KAAKe,iBAEnBY,EAAA,gBACIT,MAAM,KACNa,QAAS/B,KAAKC,aACdE,MAAOH,KAAKyB,WACZG,SAAU5B,KAAKwB,qBAEnBG,EAAA,MACIK,MAAO,CACH,cAAe,UAGvBL,EAAA,qBACIT,MAAM,QACNf,MAAOH,KAAKkB,MACZU,SAAU5B,KAAKiB,oBAEnBU,EAAA,qBACIT,MAAM,aACNf,MAAOH,KAAKoB,WACZQ,SAAU5B,KAAKmB,yBAEnBQ,EAAA,qBACIT,MAAM,cACNf,MAAOH,KAAKsB,YACZM,SAAU5B,KAAKqB,2BAGvBM,EAAA,uBAAqBxB,MAAOH,KAAKG,Q,CAM/B8B,gBACNjC,KAAKY,QAAUZ,KAAKU,WAAaV,KAAKG,K"}