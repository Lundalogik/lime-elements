{"version":3,"names":["chipLoadingCss","ChipLoadingExample","this","setDisabled","event","stopPropagation","disabled","detail","setReadonly","readonly","setLoading","loading","setInvalid","invalid","render","h","text","icon","onClick","badge","removable","label","checked","onChange","console","log"],"sources":["./src/components/chip/examples/chip-loading.scss?tag=limel-example-chip-loading&encapsulation=shadow","./src/components/chip/examples/chip-loading.tsx"],"sourcesContent":[":host {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n","import { Component, State, h } from '@stencil/core';\n\n/**\n * Loading state\n * Setting the `loading` to `true` puts the component in the `loading` state,\n * and renders an indeterminate progress indicator inside the chip.\n *\n * :::note\n * Note that this does _not_ disable the interactivity of the chip,\n * and most probably you do not need it to be disabled either.\n * If the chip should be disabled while loading, the\n * `disabled` property should separately be set to `true` as well.\n * :::\n * :::tip\n * Consider using [aria-live](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live)\n * where appropriate, or to inform the user about what is being loaded\n * use a [tooltip](#/component/limel-tooltip) on the component.\n * This is mainly to improve the accessibility for users of assistive technologies.\n * :::\n */\n@Component({\n    tag: 'limel-example-chip-loading',\n    shadow: true,\n    styleUrl: 'chip-loading.scss',\n})\nexport class ChipLoadingExample {\n    @State()\n    private disabled: boolean = false;\n\n    @State()\n    private readonly: boolean = false;\n\n    @State()\n    private invalid: boolean = false;\n\n    @State()\n    public loading = false;\n\n    public render() {\n        return [\n            <limel-chip\n                text=\"FunnyCats\"\n                icon=\"hashtag\"\n                onClick={this.onClick}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                invalid={this.invalid}\n                loading={this.loading}\n                badge={this.loading ? null : '123'}\n            />,\n            <limel-chip\n                text={this.loading ? 'Loading...' : 'FunnyCats'}\n                onClick={this.onClick}\n                disabled={this.disabled}\n                removable={true}\n                readonly={this.readonly}\n                invalid={this.invalid}\n                loading={this.loading}\n                aria-live=\"polite\"\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    label=\"Loading\"\n                    checked={this.loading}\n                    onChange={this.setLoading}\n                />\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n            </limel-example-controls>,\n        ];\n    }\n\n    private onClick() {\n        console.log('Chip is clicked.');\n    }\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setLoading = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.loading = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAiB,qD,MCyBVC,EAAkB,M,yBAgEnBC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,YAAeJ,IACnBA,EAAMC,kBACNH,KAAKO,SAAWL,EAAMG,MAAM,EAGxBL,KAAAQ,WAAcN,IAClBA,EAAMC,kBACNH,KAAKS,QAAUP,EAAMG,MAAM,EAGvBL,KAAAU,WAAcR,IAClBA,EAAMC,kBACNH,KAAKW,QAAUT,EAAMG,MAAM,E,cA/EH,M,cAGA,M,aAGD,M,aAGV,K,CAEVO,SACH,MAAO,CACHC,EAAA,cACIC,KAAK,YACLC,KAAK,UACLC,QAAShB,KAAKgB,QACdZ,SAAUJ,KAAKI,SACfG,SAAUP,KAAKO,SACfI,QAASX,KAAKW,QACdF,QAAST,KAAKS,QACdQ,MAAOjB,KAAKS,QAAU,KAAO,QAEjCI,EAAA,cACIC,KAAMd,KAAKS,QAAU,aAAe,YACpCO,QAAShB,KAAKgB,QACdZ,SAAUJ,KAAKI,SACfc,UAAW,KACXX,SAAUP,KAAKO,SACfI,QAASX,KAAKW,QACdF,QAAST,KAAKS,QAAO,YACX,WAEdI,EAAA,8BACIA,EAAA,kBACIM,MAAM,UACNC,QAASpB,KAAKS,QACdY,SAAUrB,KAAKQ,aAEnBK,EAAA,kBACIO,QAASpB,KAAKI,SACde,MAAM,WACNE,SAAUrB,KAAKC,cAEnBY,EAAA,kBACIO,QAASpB,KAAKO,SACdY,MAAM,WACNE,SAAUrB,KAAKM,cAEnBO,EAAA,kBACIO,QAASpB,KAAKW,QACdQ,MAAM,UACNE,SAAUrB,KAAKU,c,CAMvBM,UACJM,QAAQC,IAAI,mB"}