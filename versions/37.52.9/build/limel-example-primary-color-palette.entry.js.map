{"version":3,"names":["primaryColorPaletteCss","PaletteExample","this","colors","renderSwatches","map","color","h","class","toggleMode","brandColors","render","label","onChange","checked"],"sources":["./src/design-guidelines/color-system/examples/primary-color-palette.scss?tag=limel-example-primary-color-palette&encapsulation=shadow","./src/design-guidelines/color-system/examples/primary-color-palette.tsx"],"sourcesContent":["@use './shared-styles';\n\n.color-palette {\n    grid-template-rows: repeat(2, 1fr) auto;\n    grid-template-columns: repeat(20, 1fr) auto;\n}\n","import { Component, h, State } from '@stencil/core';\n\n@Component({\n    tag: 'limel-example-primary-color-palette',\n    shadow: true,\n    styleUrl: 'primary-color-palette.scss',\n})\nexport class PaletteExample {\n    @State()\n    private brandColors: boolean = false;\n\n    private colors = [\n        'red',\n        'pink',\n        'magenta',\n        'purple',\n        'violet',\n        'indigo',\n        'blue',\n        'sky',\n        'cyan',\n        'teal',\n        'green',\n        'lime',\n        'grass',\n        'yellow',\n        'amber',\n        'orange',\n        'coral',\n        'brown',\n        'gray',\n        'glaucous',\n    ];\n\n    public render() {\n        return (\n            <div class={{ 'brand-colors': this.brandColors }}>\n                <div class=\"color-palette\">\n                    {this.renderSwatches()}\n                    <div class=\"brightness-label\">light</div>\n                    <div class=\"brightness-label\">default</div>\n                </div>\n                <limel-checkbox\n                    label=\"Highlight Lime's brand colors\"\n                    onChange={this.toggleMode}\n                    checked={this.brandColors}\n                />\n                <div class=\"brand-colors-tips\">\n                    Most of the brand colors are included in the subset for \"\n                    <b>dark mode</b>\". Switch between dark & light mode to see\n                    all of them.\n                </div>\n            </div>\n        );\n    }\n\n    private renderSwatches = (): JSX.Element[][] => {\n        return this.colors.map((color) => {\n            return [\n                <div class={`swatch --color-${color}-light`}></div>,\n                <div class={`swatch --color-${color}-default`}>Â·</div>,\n                <div class=\"swatch hue\">{color}</div>,\n            ];\n        });\n    };\n\n    private toggleMode = () => {\n        this.brandColors = !this.brandColors;\n    };\n}\n"],"mappings":"0CAAA,MAAMA,EAAyB,yhU,MCOlBC,EAAc,M,yBAIfC,KAAAC,OAAS,CACb,MACA,OACA,UACA,SACA,SACA,SACA,OACA,MACA,OACA,OACA,QACA,OACA,QACA,SACA,QACA,SACA,QACA,QACA,OACA,YAyBID,KAAAE,eAAiB,IACdF,KAAKC,OAAOE,KAAKC,GACb,CACHC,EAAA,OAAKC,MAAO,kBAAkBF,YAC9BC,EAAA,OAAKC,MAAO,kBAAkBF,aAAe,KAC7CC,EAAA,OAAKC,MAAM,cAAcF,MAK7BJ,KAAAO,WAAa,KACjBP,KAAKQ,aAAeR,KAAKQ,WAAW,E,iBA1DT,K,CAyBxBC,SACH,OACIJ,EAAA,OAAKC,MAAO,CAAE,eAAgBN,KAAKQ,cAC/BH,EAAA,OAAKC,MAAM,iBACNN,KAAKE,iBACNG,EAAA,OAAKC,MAAM,oBAAkB,SAC7BD,EAAA,OAAKC,MAAM,oBAAkB,YAEjCD,EAAA,kBACIK,MAAM,gCACNC,SAAUX,KAAKO,WACfK,QAASZ,KAAKQ,cAElBH,EAAA,OAAKC,MAAM,qBAAmB,4DAE1BD,EAAA,sBAAgB,2D"}