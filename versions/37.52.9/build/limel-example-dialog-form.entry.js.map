{"version":3,"names":["MIN_NAME_LENGTH","MIN_AGE","MAX_AGE","DialogFormExample","this","submitForm","alert","name","age","closeDialog","openDialog","isOpen","onClosing","console","log","isConfirmationOpen","nameOnChange","event","detail","ageOnChange","closeConfirmation","onConfirmPositive","onConfirmNegative","render","h","primary","label","onClick","heading","open","onClose","value","required","invalid","nameValid","onChange","ageValid","type","unit","percentage","slot","disabled","length"],"sources":["./src/components/dialog/examples/dialog-form.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\nconst MIN_NAME_LENGTH = 5;\nconst MIN_AGE = 20;\nconst MAX_AGE = 50;\n\n/**\n * Dialog with form and header\n */\n@Component({\n    tag: 'limel-example-dialog-form',\n    shadow: true,\n})\nexport class DialogFormExample {\n    @State()\n    private isOpen = false;\n\n    @State()\n    private name = '';\n\n    @State()\n    private age: string;\n\n    @State()\n    private percentage = 45;\n\n    @State()\n    private isConfirmationOpen = false;\n\n    public render() {\n        return [\n            <limel-button\n                primary={true}\n                label=\"Open\"\n                onClick={this.openDialog}\n            />,\n            <limel-dialog\n                heading=\"Registration\"\n                open={this.isOpen}\n                onClose={this.closeDialog}\n                onClosing={this.onClosing}\n            >\n                <form>\n                    <p>\n                        <limel-input-field\n                            label=\"Name\"\n                            value={this.name}\n                            required={true}\n                            invalid={!this.nameValid()}\n                            onChange={this.nameOnChange}\n                        />\n                    </p>\n                    <p>\n                        <limel-input-field\n                            label=\"Age\"\n                            value={this.age}\n                            required={true}\n                            invalid={!this.ageValid()}\n                            onChange={this.ageOnChange}\n                            type=\"number\"\n                        />\n                    </p>\n                    <p>\n                        <limel-slider unit=\"%\" value={this.percentage} />\n                    </p>\n                </form>\n                <limel-button\n                    label=\"Cancel\"\n                    onClick={this.closeDialog}\n                    slot=\"button\"\n                />\n                <limel-button\n                    primary={true}\n                    label=\"Save\"\n                    disabled={!this.nameValid() || !this.ageValid()}\n                    onClick={this.submitForm}\n                    slot=\"button\"\n                />\n            </limel-dialog>,\n            <limel-dialog\n                open={this.isConfirmationOpen}\n                onClose={this.closeConfirmation}\n            >\n                <p>Are you sure you want to close this? </p>\n                <limel-button\n                    label=\"No\"\n                    onClick={this.onConfirmNegative}\n                    slot=\"button\"\n                />\n                <limel-button\n                    label=\"Yes\"\n                    onClick={this.onConfirmPositive}\n                    slot=\"button\"\n                />\n            </limel-dialog>,\n        ];\n    }\n\n    private nameValid() {\n        return this.name.length >= MIN_NAME_LENGTH;\n    }\n\n    private ageValid() {\n        return +this.age > MIN_AGE && +this.age < MAX_AGE;\n    }\n\n    private submitForm = () => {\n        alert(`${this.name} is ${this.age} years old`);\n        this.closeDialog();\n    };\n\n    private openDialog = () => {\n        this.isOpen = true;\n    };\n\n    private closeDialog = () => {\n        this.isOpen = false;\n    };\n\n    private onClosing = () => {\n        console.log('dialog is closing now!');\n        this.isConfirmationOpen = true;\n    };\n\n    private nameOnChange = (event) => {\n        this.name = event.detail;\n    };\n\n    private ageOnChange = (event) => {\n        this.age = event.detail;\n    };\n\n    private closeConfirmation = () => {\n        this.isConfirmationOpen = false;\n    };\n\n    private onConfirmPositive = () => {\n        this.isConfirmationOpen = false;\n        this.isOpen = false;\n    };\n\n    private onConfirmNegative = () => {\n        this.isOpen = true;\n        this.isConfirmationOpen = false;\n    };\n}\n"],"mappings":"+CAEA,MAAMA,EAAkB,EACxB,MAAMC,EAAU,GAChB,MAAMC,EAAU,G,MASHC,EAAiB,M,yBA6FlBC,KAAAC,WAAa,KACjBC,MAAM,GAAGF,KAAKG,WAAWH,KAAKI,iBAC9BJ,KAAKK,aAAa,EAGdL,KAAAM,WAAa,KACjBN,KAAKO,OAAS,IAAI,EAGdP,KAAAK,YAAc,KAClBL,KAAKO,OAAS,KAAK,EAGfP,KAAAQ,UAAY,KAChBC,QAAQC,IAAI,0BACZV,KAAKW,mBAAqB,IAAI,EAG1BX,KAAAY,aAAgBC,IACpBb,KAAKG,KAAOU,EAAMC,MAAM,EAGpBd,KAAAe,YAAeF,IACnBb,KAAKI,IAAMS,EAAMC,MAAM,EAGnBd,KAAAgB,kBAAoB,KACxBhB,KAAKW,mBAAqB,KAAK,EAG3BX,KAAAiB,kBAAoB,KACxBjB,KAAKW,mBAAqB,MAC1BX,KAAKO,OAAS,KAAK,EAGfP,KAAAkB,kBAAoB,KACxBlB,KAAKO,OAAS,KACdP,KAAKW,mBAAqB,KAAK,E,YAhIlB,M,UAGF,G,mCAMM,G,wBAGQ,K,CAEtBQ,SACH,MAAO,CACHC,EAAA,gBACIC,QAAS,KACTC,MAAM,OACNC,QAASvB,KAAKM,aAElBc,EAAA,gBACII,QAAQ,eACRC,KAAMzB,KAAKO,OACXmB,QAAS1B,KAAKK,YACdG,UAAWR,KAAKQ,WAEhBY,EAAA,YACIA,EAAA,SACIA,EAAA,qBACIE,MAAM,OACNK,MAAO3B,KAAKG,KACZyB,SAAU,KACVC,SAAU7B,KAAK8B,YACfC,SAAU/B,KAAKY,gBAGvBQ,EAAA,SACIA,EAAA,qBACIE,MAAM,MACNK,MAAO3B,KAAKI,IACZwB,SAAU,KACVC,SAAU7B,KAAKgC,WACfD,SAAU/B,KAAKe,YACfkB,KAAK,YAGbb,EAAA,SACIA,EAAA,gBAAcc,KAAK,IAAIP,MAAO3B,KAAKmC,eAG3Cf,EAAA,gBACIE,MAAM,SACNC,QAASvB,KAAKK,YACd+B,KAAK,WAEThB,EAAA,gBACIC,QAAS,KACTC,MAAM,OACNe,UAAWrC,KAAK8B,cAAgB9B,KAAKgC,WACrCT,QAASvB,KAAKC,WACdmC,KAAK,YAGbhB,EAAA,gBACIK,KAAMzB,KAAKW,mBACXe,QAAS1B,KAAKgB,mBAEdI,EAAA,kDACAA,EAAA,gBACIE,MAAM,KACNC,QAASvB,KAAKkB,kBACdkB,KAAK,WAEThB,EAAA,gBACIE,MAAM,MACNC,QAASvB,KAAKiB,kBACdmB,KAAK,Y,CAMbN,YACJ,OAAO9B,KAAKG,KAAKmC,QAAU1C,C,CAGvBoC,WACJ,OAAQhC,KAAKI,IAAMP,IAAYG,KAAKI,IAAMN,C"}