{"version":3,"names":["mapTag","setTag","objectProto","Object","prototype","hasOwnProperty","isEmpty","value","isArrayLike","isArray","splice","isBuffer","isTypedArray","isArguments","length","tag","getTag","size","isPrototype","baseKeys","key","call"],"sources":["./node_modules/lodash-es/isEmpty.js"],"sourcesContent":["import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n"],"mappings":"yKAUA,IAAIA,EAAS,eACTC,EAAS,eAGb,IAAIC,EAAcC,OAAOC,UAGzB,IAAIC,EAAiBH,EAAYG,eAmCjC,SAASC,EAAQC,GACf,GAAIA,GAAS,KAAM,CACjB,OAAO,IACX,CACE,GAAIC,EAAYD,KACXE,EAAQF,WAAiBA,GAAS,iBAAmBA,EAAMG,QAAU,YACpEC,EAASJ,IAAUK,EAAaL,IAAUM,EAAYN,IAAS,CACnE,OAAQA,EAAMO,MAClB,CACE,IAAIC,EAAMC,EAAOT,GACjB,GAAIQ,GAAOf,GAAUe,GAAOd,EAAQ,CAClC,OAAQM,EAAMU,IAClB,CACE,GAAIC,EAAYX,GAAQ,CACtB,OAAQY,EAASZ,GAAOO,MAC5B,CACE,IAAK,IAAIM,KAAOb,EAAO,CACrB,GAAIF,EAAegB,KAAKd,EAAOa,GAAM,CACnC,OAAO,KACb,CACA,CACE,OAAO,IACT,Q"}