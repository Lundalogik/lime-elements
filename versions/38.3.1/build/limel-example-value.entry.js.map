{"version":3,"names":["dateTag","baseIsDate","value","isObjectLike","baseGetTag","nodeIsDate","nodeUtil","isDate","baseUnary","isUndefined","undefined","exampleValueCss","ExampleValue","render","h","this","label","format","val","toString","isObject","isArray","JSON","stringify"],"sources":["./node_modules/lodash-es/_baseIsDate.js","./node_modules/lodash-es/isDate.js","./node_modules/lodash-es/isUndefined.js","./src/examples/example-value.scss?tag=limel-example-value","./src/examples/example-value.tsx"],"sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nexport default baseIsDate;\n","import baseIsDate from './_baseIsDate.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nexport default isDate;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","@use '../style/functions';\n\ncode {\n    font-family: 'Source Code Pro', monospace;\n    font-size: functions.pxToRem(12);\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n\n    display: inline-block;\n    border-radius: functions.pxToRem(3);\n    padding: functions.pxToRem(1) functions.pxToRem(5);\n    color: rgb(var(--kompendium-contrast-1300));\n    background-color: rgb(var(--kompendium-contrast-600));\n}\n\npre > code {\n    display: block;\n    border-radius: functions.pxToRem(8);\n    margin: functions.pxToRem(8) 0;\n    padding: functions.pxToRem(16);\n    overflow: auto;\n    white-space: pre-wrap;\n\n    color: rgb(var(--kompendium-contrast-800));\n    background-color: rgb(var(--kompendium-contrast-1600));\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { isDate, isObject, isArray, isUndefined } from 'lodash-es';\n\n/**\n * The `limel-example-value` component is a utility component\n * used internally in the Lime Elements documentation to display\n * property values and component states in a formatted way.\n *\n * ## Purpose\n * This component helps visualize different types of values in\n * our component examples and documentation.\n * It's particularly useful for:\n * - Displaying primitive values\n * - Formatting dates\n * - Pretty-printing objects and arrays\n * - Showing undefined values\n *\n * ## Usage\n * ```tsx\n * <limel-example-value label=\"Selected item\" value={this.selectedItem} />\n * ```\n *\n * Display Formatting\n * The component automatically formats different value types:\n * - `undefined` values are displayed as `undefined`\n * - `Date` objects are converted to strings using `toString()`\n * - Objects and arrays are pretty-printed using `JSON.stringify` with indentation\n * - Primitive values are displayed within `<code>` tags.\n *\n * @private\n */\n@Component({\n    tag: 'limel-example-value',\n    styleUrl: 'example-value.scss',\n})\nexport class ExampleValue {\n    /**\n     * A label describing the value.\n     */\n    @Prop({ reflect: true })\n    public label? = 'Value';\n\n    /**\n     * The value that should be displayed.\n     */\n    @Prop()\n    public value: any;\n\n    public render() {\n        return (\n            <p>\n                {this.label}: {this.format(this.value)}\n            </p>\n        );\n    }\n\n    private format(val: any) {\n        if (isUndefined(val)) {\n            return <code>undefined</code>;\n        }\n\n        if (isDate(val)) {\n            return <code>{val.toString()}</code>;\n        }\n\n        if (isObject(val) || isArray(val)) {\n            return (\n                <pre>\n                    <code>{JSON.stringify(val, null, 2)}</code>\n                </pre>\n            );\n        }\n\n        return <code>{JSON.stringify(val, null, 2)}</code>;\n    }\n}\n"],"mappings":"+QAIA,IAAIA,EAAU,gBASd,SAASC,EAAWC,GAClB,OAAOC,EAAaD,IAAUE,EAAWF,IAAUF,CACrD,CCVA,IAAIK,EAAaC,GAAYA,EAASC,OAmBtC,IAAIA,EAASF,EAAaG,EAAUH,GAAcJ,ECPlD,SAASQ,EAAYP,GACnB,OAAOA,IAAUQ,SACnB,CCnBA,MAAMC,EAAkB,siB,MCmCXC,EAAY,M,oCAKL,Q,qBAQTC,SACH,OACIC,EAAA,SACKC,KAAKC,MAAK,KAAID,KAAKE,OAAOF,KAAKb,O,CAKpCe,OAAOC,GACX,GAAIT,EAAYS,GAAM,CAClB,OAAOJ,EAAA,wB,CAGX,GAAIP,EAAOW,GAAM,CACb,OAAOJ,EAAA,YAAOI,EAAIC,W,CAGtB,GAAIC,EAASF,IAAQG,EAAQH,GAAM,CAC/B,OACIJ,EAAA,WACIA,EAAA,YAAOQ,KAAKC,UAAUL,EAAK,KAAM,I,CAK7C,OAAOJ,EAAA,YAAOQ,KAAKC,UAAUL,EAAK,KAAM,G"}