{"version":3,"names":["PickerBasicExample","this","allItems","text","value","onChange","event","selectedItem","detail","onInteract","console","log","render","h","label","emptyResultMessage"],"sources":["./src/components/picker/examples/picker-basic.tsx"],"sourcesContent":["import { LimelPickerCustomEvent, ListItem } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * Single value can be picked.\n *\n * Since all items are already loaded from the server, we can use the\n * `allItems` property to provide the picker with all the items at once.\n * The picker uses a default search function that filters the items based on\n * the `text` and `secondaryText` properties of the items.\n *\n * :::note\n * For performance reasons, the default searcher will never return more\n * than 20 items, but if there are more than 20 items, the rest can be\n * found by typing more characters in the search field.\n * :::\n */\n@Component({\n    tag: 'limel-example-picker-basic',\n    shadow: true,\n})\nexport class PickerBasicExample {\n    @State()\n    private selectedItem: ListItem<number>;\n\n    private allItems: Array<ListItem<number>> = [\n        { text: 'Admiral Swiggins', value: 1 },\n        { text: 'Ayla', value: 2 },\n        { text: 'Clunk', value: 3 },\n        { text: 'Coco', value: 4 },\n        { text: 'Derpl', value: 5 },\n        { text: 'Froggy G', value: 6 },\n        { text: 'Gnaw', value: 7 },\n        { text: 'Lonestar', value: 8 },\n        { text: 'Leon', value: 9 },\n        { text: 'Raelynn', value: 10 },\n        { text: 'Sk√∏lldir', value: 11 },\n        { text: 'Voltar', value: 12 },\n        { text: 'Yuri', value: 13 },\n    ];\n\n    public render() {\n        return [\n            <limel-picker\n                label=\"Favorite awesomenaut\"\n                value={this.selectedItem}\n                allItems={this.allItems}\n                emptyResultMessage=\"No matching awesomenauts found\"\n                onChange={this.onChange}\n                onInteract={this.onInteract}\n            />,\n            <limel-example-value value={this.selectedItem} />,\n        ];\n    }\n\n    private onChange = (event: LimelPickerCustomEvent<ListItem<number>>) => {\n        this.selectedItem = event.detail;\n    };\n\n    private onInteract = (event: LimelPickerCustomEvent<ListItem<number>>) => {\n        console.log('Value interacted with:', event.detail);\n    };\n}\n"],"mappings":"qDAqBaA,EAAkB,M,yBAInBC,KAAAC,SAAoC,CACxC,CAAEC,KAAM,mBAAoBC,MAAO,GACnC,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,UAAWC,MAAO,IAC1B,CAAED,KAAM,WAAYC,MAAO,IAC3B,CAAED,KAAM,SAAUC,MAAO,IACzB,CAAED,KAAM,OAAQC,MAAO,KAiBnBH,KAAAI,SAAYC,IAChBL,KAAKM,aAAeD,EAAME,MAAM,EAG5BP,KAAAQ,WAAcH,IAClBI,QAAQC,IAAI,yBAA0BL,EAAME,OAAO,E,4BAnBhDI,SACH,MAAO,CACHC,EAAA,gBACIC,MAAM,uBACNV,MAAOH,KAAKM,aACZL,SAAUD,KAAKC,SACfa,mBAAmB,iCACnBV,SAAUJ,KAAKI,SACfI,WAAYR,KAAKQ,aAErBI,EAAA,uBAAqBT,MAAOH,KAAKM,e"}