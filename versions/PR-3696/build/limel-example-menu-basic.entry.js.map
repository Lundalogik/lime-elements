{"version":3,"names":["MenuBasicExample","this","items","text","separator","handleSelect","event","lastSelectedItem","detail","render","h","onSelect","label","slot","value"],"sources":["./src/components/menu/examples/menu-basic.tsx"],"sourcesContent":["import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * Basic example\n *\n * With a simple `onSelect` handler.\n */\n@Component({\n    tag: 'limel-example-menu-basic',\n    shadow: true,\n})\nexport class MenuBasicExample {\n    @State()\n    private lastSelectedItem: string;\n\n    private items: Array<MenuItem | ListSeparator> = [\n        { text: 'Copy' },\n        { text: 'Cut' },\n        { separator: true },\n        { text: 'Paste' },\n    ];\n\n    public render() {\n        return [\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-button label=\"Menu\" slot=\"trigger\" />\n            </limel-menu>,\n            <limel-example-value\n                label=\"Last selected item\"\n                value={this.lastSelectedItem}\n            />,\n        ];\n    }\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.lastSelectedItem = event.detail.text;\n    };\n}\n"],"mappings":"qDAgBaA,EAAgB,M,yBAIjBC,KAAAC,MAAyC,CAC7C,CAAEC,KAAM,QACR,CAAEA,KAAM,OACR,CAAEC,UAAW,MACb,CAAED,KAAM,UAeJF,KAAAI,aAAgBC,IACpBL,KAAKM,iBAAmBD,EAAME,OAAOL,IAAI,E,gCAbtCM,SACH,MAAO,CACHC,EAAA,cAAYR,MAAOD,KAAKC,MAAOS,SAAUV,KAAKI,cAC1CK,EAAA,gBAAcE,MAAM,OAAOC,KAAK,aAEpCH,EAAA,uBACIE,MAAM,qBACNE,MAAOb,KAAKM,mB"}