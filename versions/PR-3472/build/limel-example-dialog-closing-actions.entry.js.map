{"version":3,"names":["DialogClosingActionsExample","this","openDialog","isOpen","handleConfirmClick","closeDialog","render","h","primary","label","onClick","open","closingActions","escapeKey","scrimClick","onClose","slot"],"sources":["./src/components/dialog/examples/dialog-closing-actions.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * Custom closing actions\n *\n * Action buttons in dialogs can be used to add a clear visual indication for\n * the sighted users to realize that the dialog can be closed by pressing\n * a button as well.\n * This may sometimes be considered an unnecessary usage of action buttons for\n * sighted users. Because majority of them users know that clicking or tapping\n * outside the dialog closes it.\n *\n * Such buttons are usually labeled ***OK***, ***Dismiss*** or ***Close***.\n *\n * :::tip\n * When to use action buttons for simple \"close\" actions?\n * - In fullscreen dialogs where clicking outside to close is hard.\n * - When big dialogs are opened on phones, which make tapping outside hard for users.\n * - When designing with accessibility in mind, and for those users who\n * use screen readers to navigate the user interface.\n * :::\n *\n * But sometimes, depending on the importance of the message which is displayed,\n * you have to choose to display a close button, and disable other means of\n * dismissing the dialog.\n *\n * :::tip\n * When to use custom closing actions?\n * - To make sure that the user really reads and understands the dialog's content.\n * - To make sure that the user does not accidentally click outside and close the dialog.\n * :::\n *\n * For such cases, avoid generic labels like ***OK***, or ***Close*** which unconsciously\n * motivate users to dismiss the message; and instead use more purposeful labels\n * such as ***I understand***, ***Looks good!***, ***Continue***, and similar;\n * like in the example below.\n */\n\n@Component({\n    tag: 'limel-example-dialog-closing-actions',\n    shadow: true,\n})\nexport class DialogClosingActionsExample {\n    @State()\n    private isOpen = false;\n\n    public render() {\n        return [\n            <limel-button\n                primary={true}\n                label=\"Open\"\n                onClick={this.openDialog}\n            />,\n            <limel-dialog\n                open={this.isOpen}\n                closingActions={{ escapeKey: false, scrimClick: false }}\n                onClose={this.closeDialog}\n            >\n                <p>\n                    This dialog doesn't close by clicking the scrim or pressing\n                    the escape key. Only the button triggers a close event.\n                </p>\n                <limel-button\n                    label=\"I understand\"\n                    onClick={this.handleConfirmClick}\n                    slot=\"button\"\n                />\n            </limel-dialog>,\n        ];\n    }\n\n    private openDialog = () => {\n        this.isOpen = true;\n    };\n\n    private handleConfirmClick = () => {\n        this.isOpen = false;\n    };\n\n    private closeDialog = () => {\n        this.isOpen = false;\n    };\n}\n"],"mappings":"qDA0CaA,EAA2B,M,yBA6B5BC,KAAAC,WAAa,KACjBD,KAAKE,OAAS,IAAI,EAGdF,KAAAG,mBAAqB,KACzBH,KAAKE,OAAS,KAAK,EAGfF,KAAAI,YAAc,KAClBJ,KAAKE,OAAS,KAAK,E,YApCN,K,CAEVG,SACH,MAAO,CACHC,EAAA,gBACIC,QAAS,KACTC,MAAM,OACNC,QAAST,KAAKC,aAElBK,EAAA,gBACII,KAAMV,KAAKE,OACXS,eAAgB,CAAEC,UAAW,MAAOC,WAAY,OAChDC,QAASd,KAAKI,aAEdE,EAAA,gIAIAA,EAAA,gBACIE,MAAM,eACNC,QAAST,KAAKG,mBACdY,KAAK,Y"}