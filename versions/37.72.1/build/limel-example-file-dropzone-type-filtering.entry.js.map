{"version":3,"names":["fileDropzoneTypeFilteringCss","FileDropzoneTypeFilteringExample","this","handleChange","event","value","detail","handleAcceptedFiles","files","concat","handleRejectedFiles","rejectedFiles","render","MAX_LENGTH","h","onFilesSelected","onFilesRejected","accept","text","label","type","placeholder","helperText","maxlength","required","onChange","disabled","readonly","map","file","filename","icon"],"sources":["./src/components/file-dropzone/examples/file-dropzone-type-filtering.scss?tag=limel-example-file-dropzone-type-filtering&encapsulation=shadow","./src/components/file-dropzone/examples/file-dropzone-type-filtering.tsx"],"sourcesContent":[":host {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\ndiv {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid rgb(var(--contrast-800));\n    border-radius: 0.5rem;\n    min-height: 10rem;\n}\n","import { FileInfo } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * File type filtering\n * The component allows you to specify the types of files that the dropzone will accept.\n * By default, it accepts all file types (`*`).\n *\n * For media files, it is possible to specify any format, using:\n * `audio/*`, `video/*`, `image/*`.\n *\n * Additionally, you can use unique file type specifiers, such as:\n * `.jpg`, or `.pdf`; or use a comma-separated list of file extensions or MIME types,\n * for instance: `image/png, image/jpeg` or `.png, .jpg, .jpeg`.\n *\n * Read more about\n * [HTML attribute: accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept)\n */\n@Component({\n    tag: 'limel-example-file-dropzone-type-filtering',\n    shadow: true,\n    styleUrl: 'file-dropzone-type-filtering.scss',\n})\nexport class FileDropzoneTypeFilteringExample {\n    @State()\n    private files: FileInfo[] = [];\n\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private value: string;\n\n    @State()\n    private rejectedFiles: FileInfo[] = [];\n\n    public render() {\n        const MAX_LENGTH = 500;\n\n        return [\n            <limel-file-dropzone\n                onFilesSelected={this.handleAcceptedFiles}\n                onFilesRejected={this.handleRejectedFiles}\n                accept=\"image/*\"\n                text=\"Drop pictures here\"\n            >\n                <limel-input-field\n                    label=\"Dream pet description\"\n                    type=\"textarea\"\n                    placeholder=\"What is your dream pet? Describe it here and attach a picture of it.\"\n                    helperText=\"To attach files, simply drag & drop them here!\"\n                    maxlength={MAX_LENGTH}\n                    value={this.value}\n                    required={this.required}\n                    onChange={this.handleChange}\n                    disabled={this.disabled}\n                    readonly={this.readonly}\n                />\n            </limel-file-dropzone>,\n            <limel-file-dropzone\n                onFilesSelected={this.handleAcceptedFiles}\n                onFilesRejected={this.handleRejectedFiles}\n                text=\"Drop video or pictures here\"\n                helperText=\"Only image and video files are accepted!\"\n                accept=\"image/*, video/*\"\n            >\n                <div>\n                    <p>Upload a picture or a video</p>\n                </div>\n            </limel-file-dropzone>,\n            this.files.map((file) => (\n                <limel-chip text={file.filename} icon={file.icon} />\n            )),\n            <limel-example-value value={this.files} />,\n            <limel-example-value value={this.rejectedFiles} />,\n        ];\n    }\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n\n    private handleAcceptedFiles = (event: CustomEvent<FileInfo[]>) => {\n        this.files = [...this.files.concat(event.detail)];\n    };\n\n    private handleRejectedFiles = (event: CustomEvent<FileInfo[]>) => {\n        this.rejectedFiles = [...this.rejectedFiles.concat(event.detail)];\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA+B,kM,MCuBxBC,EAAgC,M,yBA6DjCC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,MAAM,EAGrBJ,KAAAK,oBAAuBH,IAC3BF,KAAKM,MAAQ,IAAIN,KAAKM,MAAMC,OAAOL,EAAME,QAAQ,EAG7CJ,KAAAQ,oBAAuBN,IAC3BF,KAAKS,cAAgB,IAAIT,KAAKS,cAAcF,OAAOL,EAAME,QAAQ,E,WApEzC,G,cAGT,M,cAGA,M,cAGA,M,wCAMiB,E,CAE7BM,SACH,MAAMC,EAAa,IAEnB,MAAO,CACHC,EAAA,uBACIC,gBAAiBb,KAAKK,oBACtBS,gBAAiBd,KAAKQ,oBACtBO,OAAO,UACPC,KAAK,sBAELJ,EAAA,qBACIK,MAAM,wBACNC,KAAK,WACLC,YAAY,uEACZC,WAAW,iDACXC,UAAWV,EACXR,MAAOH,KAAKG,MACZmB,SAAUtB,KAAKsB,SACfC,SAAUvB,KAAKC,aACfuB,SAAUxB,KAAKwB,SACfC,SAAUzB,KAAKyB,YAGvBb,EAAA,uBACIC,gBAAiBb,KAAKK,oBACtBS,gBAAiBd,KAAKQ,oBACtBQ,KAAK,8BACLI,WAAW,2CACXL,OAAO,oBAEPH,EAAA,WACIA,EAAA,0CAGRZ,KAAKM,MAAMoB,KAAKC,GACZf,EAAA,cAAYI,KAAMW,EAAKC,SAAUC,KAAMF,EAAKE,SAEhDjB,EAAA,uBAAqBT,MAAOH,KAAKM,QACjCM,EAAA,uBAAqBT,MAAOH,KAAKS,gB"}