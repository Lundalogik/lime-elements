{"version":3,"names":["TextEditorWithTablesExample","this","setReadonly","event","stopPropagation","readonly","detail","handleChange","value","render","h","onChange","contentType","enableTables","checked","label"],"sources":["./src/components/text-editor/examples/text-editor-with-tables.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n/**\n * Text editor with tables (HTML mode only).\n *\n * When using the text editor in HTML mode, it is possible to paste and\n * display tables in the text editor.\n * Basic interaction with the table is supported, but you cannot do\n * complex operations\n */\n@Component({\n    tag: 'limel-example-text-editor-with-tables',\n    shadow: true,\n})\nexport class TextEditorWithTablesExample {\n    @State()\n    private value: string =\n        '<table><tbody><tr><td style=\"background-color: rgb(25, 107, 36);color: white;\"><p><strong>Column1</strong></p></td><td style=\"background-color: rgb(25, 107, 36);color: white;\"><p><strong>Column2</strong></p></td></tr><tr><td style=\"background-color: rgb(193, 240, 200);color: black;\"><p>Cell A1</p></td><td style=\"background-color: rgb(193, 240, 200);color: black;\"><p>Cell B1</p></td></tr><tr><td style=\"color: green;\"><p>Cell A2</p></td><td style=\"background-color: yellow;color: red;\"><p>Cell B2</p></td></tr></tbody></table>';\n\n    @State()\n    private readonly = false;\n\n    public render() {\n        return [\n            <limel-text-editor\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                contentType=\"html\"\n                enableTables={true}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAaaA,EAA2B,M,yBA4B5BC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,aAAgBJ,IACpBF,KAAKO,MAAQL,EAAMG,MAAM,E,WA/BzB,mhB,cAGe,K,CAEZG,SACH,MAAO,CACHC,EAAA,qBACIF,MAAOP,KAAKO,MACZG,SAAUV,KAAKM,aACfF,SAAUJ,KAAKI,SACfO,YAAY,OACZC,aAAc,OAElBH,EAAA,8BACIA,EAAA,kBACII,QAASb,KAAKI,SACdU,MAAM,WACNJ,SAAUV,KAAKC,eAGvBQ,EAAA,uBAAqBF,MAAOP,KAAKO,Q"}