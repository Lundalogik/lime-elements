{"version":3,"names":["listItemBasicCss","ListItemInteractiveExample","this","onInteract","event","lastEvent","detail","selected","console","log","setDisabled","disabled","setSelected","render","h","Host","tabindex","text","secondaryText","icon","type","label","value","onChange"],"sources":["./src/components/list-item/examples/list-item-basic.scss?tag=limel-example-list-item-interactive&encapsulation=shadow","./src/components/list-item/examples/list-item-interactive.tsx"],"sourcesContent":["@use '../../../style/mixins';\n\n:host {\n    display: flex;\n    flex-direction: column;\n    border-radius: 0.25rem;\n}\n\nul {\n    position: relative;\n    list-style: none;\n    padding: 1rem 1rem 2rem 1rem;\n    margin: 0;\n\n    background: url(\"data:image/svg+xml;charset=utf-8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' style='fill-rule:evenodd;'><path fill='rgba(186,186,192,0.16)' d='M0 0h4v4H0zM4 4h4v4H4z'/></svg>\");\n    background-size: 0.5rem;\n\n    &.is-resizable {\n        overflow: hidden;\n        resize: horizontal;\n        max-width: calc(100% - 2rem);\n        min-width: 10rem;\n\n        &::after {\n            content: 'Resize me â¤µ';\n            font-size: 0.75rem;\n            position: absolute;\n            right: 0.25rem;\n            bottom: 0.25rem;\n        }\n    }\n}\n\nlimel-list-item {\n    min-height: 2.5rem;\n    @include mixins.visualize-keyboard-focus();\n\n    &:hover,\n    &:focus,\n    &:focus-within,\n    &:focus-visible,\n    &:active {\n        z-index: 1;\n        border-radius: 0.5rem;\n    }\n\n    &:first-of-type {\n        border-top-left-radius: 0.5rem;\n        border-top-right-radius: 0.5rem;\n    }\n\n    &:last-of-type {\n        border-bottom-left-radius: 0.5rem;\n        border-bottom-right-radius: 0.5rem;\n    }\n\n    &:not([disabled]):not([disabled='true']) {\n        cursor: pointer;\n    }\n\n    &[disabled]:not([disabled='false']) {\n        cursor: not-allowed;\n    }\n}\n","import { Component, h, Host, State } from '@stencil/core';\n\n/**\n * Interactive list item example\n *\n * A list item with the default type (`type=\"listitem\"`) shows a simpler visual feedback when hovered.\n * Once it is clicked, it emits an event with details about the item.\n *\n * However, certain `type`s are \"selectable\"; for instance `option`, `radio` and `checkbox`.\n * When users click them (or focus and press Enter/Space) they toggle selection.\n *\n * A `selected` item will both visually indicate that it is selected\n * and also informs assistive technology about its state, using proper ARIA attributes.\n *\n * Each of these types visualize the selected state differently.\n *\n * - `option`: The selected state is indicated by a tinted background,\n * colored by the consumer's defined accent color.\n * - `radio`: The selected state is indicated by a filled circle.\n * - `checkbox`: The selected state is indicated by a checked checkmark.\n *\n * Needless to say that a `disabled` item cannot be selected or interacted with.\n */\n@Component({\n    tag: 'limel-example-list-item-interactive',\n    shadow: true,\n    styleUrl: 'list-item-basic.scss',\n})\nexport class ListItemInteractiveExample {\n    @State()\n    private disabled = false;\n\n    @State()\n    private selected = false;\n\n    @State()\n    private lastEvent: string = 'No events yet';\n\n    public render() {\n        return (\n            <Host>\n                <limel-list-item\n                    tabindex={0}\n                    text=\"Interactive List Item, with `type='option'`\"\n                    secondaryText=\"Click me (or press Enter/Space) if I'm not disabled\"\n                    icon=\"star\"\n                    disabled={this.disabled}\n                    selected={this.selected}\n                    type=\"option\"\n                    onInteract={this.onInteract}\n                />\n                <limel-example-controls>\n                    <limel-switch\n                        label=\"Disabled\"\n                        value={this.disabled}\n                        onChange={this.setDisabled}\n                    />\n                    <limel-switch\n                        label=\"Selected\"\n                        value={this.selected}\n                        onChange={this.setSelected}\n                    />\n                </limel-example-controls>\n                <limel-example-value\n                    label=\"Last event\"\n                    value={this.lastEvent}\n                />\n            </Host>\n        );\n    }\n\n    private onInteract = (event: CustomEvent) => {\n        this.lastEvent = `Item clicked - Selected: ${event.detail.selected}`;\n        this.selected = event.detail.selected;\n        console.log('List item interacted:', event.detail);\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        this.disabled = event.detail;\n    };\n\n    private setSelected = (event: CustomEvent<boolean>) => {\n        this.selected = event.detail;\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAAmB,8sC,MC4BZC,EAA0B,M,yBA2C3BC,KAAAC,WAAcC,IAClBF,KAAKG,UAAY,4BAA4BD,EAAME,OAAOC,WAC1DL,KAAKK,SAAWH,EAAME,OAAOC,SAC7BC,QAAQC,IAAI,wBAAyBL,EAAME,OAAO,EAG9CJ,KAAAQ,YAAeN,IACnBF,KAAKS,SAAWP,EAAME,MAAM,EAGxBJ,KAAAU,YAAeR,IACnBF,KAAKK,SAAWH,EAAME,MAAM,E,cApDb,M,cAGA,M,eAGS,e,CAErBO,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,mBACIE,SAAU,EACVC,KAAK,8CACLC,cAAc,sDACdC,KAAK,OACLR,SAAUT,KAAKS,SACfJ,SAAUL,KAAKK,SACfa,KAAK,SACLjB,WAAYD,KAAKC,aAErBW,EAAA,8BACIA,EAAA,gBACIO,MAAM,WACNC,MAAOpB,KAAKS,SACZY,SAAUrB,KAAKQ,cAEnBI,EAAA,gBACIO,MAAM,WACNC,MAAOpB,KAAKK,SACZgB,SAAUrB,KAAKU,eAGvBE,EAAA,uBACIO,MAAM,aACNC,MAAOpB,KAAKG,Y"}