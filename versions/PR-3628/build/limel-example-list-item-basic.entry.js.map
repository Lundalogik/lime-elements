{"version":3,"names":["listItemBasicCss","ListItemBasicExample","render","h","value","tabindex","text","secondaryText"],"sources":["./src/components/list-item/examples/list-item-basic.scss?tag=limel-example-list-item-basic&encapsulation=shadow","./src/components/list-item/examples/list-item-basic.tsx"],"sourcesContent":["@use '../../../style/mixins';\n\n:host {\n    display: flex;\n    flex-direction: column;\n    border-radius: 0.25rem;\n}\n\nul {\n    position: relative;\n    list-style: none;\n    padding: 1rem 1rem 2rem 1rem;\n    margin: 0;\n\n    background: url(\"data:image/svg+xml;charset=utf-8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' style='fill-rule:evenodd;'><path fill='rgba(186,186,192,0.16)' d='M0 0h4v4H0zM4 4h4v4H4z'/></svg>\");\n    background-size: 0.5rem;\n\n    &.is-resizable {\n        overflow: hidden;\n        resize: horizontal;\n        max-width: calc(100% - 2rem);\n        min-width: 10rem;\n\n        &::after {\n            content: 'Resize me â¤µ';\n            font-size: 0.75rem;\n            position: absolute;\n            right: 0.25rem;\n            bottom: 0.25rem;\n        }\n    }\n}\n\nlimel-list-item:not([disabled]):not([disabled='true']) {\n    @include mixins.is-flat-clickable(\n        $background-color: rgb(var(--contrast-100))\n    );\n    @include mixins.visualize-keyboard-focus();\n\n    &:hover,\n    &:focus,\n    &:focus-within,\n    &:focus-visible,\n    &:active {\n        z-index: 1;\n    }\n\n    &:first-of-type {\n        border-top-left-radius: 0.5rem;\n        border-top-right-radius: 0.5rem;\n    }\n\n    &:last-of-type {\n        border-bottom-left-radius: 0.5rem;\n        border-bottom-right-radius: 0.5rem;\n    }\n}\n","import { Component, h } from '@stencil/core';\n\n/**\n * Basic list item\n *\n * This example demonstrates the basic usage of the `limel-list-item`\n * component with text and secondary text.\n *\n * :::important\n * The list items are not focusable by default.\n * The consumer should handle the focusability of the list items\n * by dynamically setting and altering the `tabindex` attribute.\n *\n * Also, it's the consumer component that needs to implement the\n * `is-flat-clickable` and `visualize-keyboard-focus` mixins appropriately.\n * **Note** this is because of how these mixins are written by us,\n * and as a result they cannot be applied to the `:host` element\n * directly in the SCSS,\n * not because the component cannot take care of such interactive\n * styles by its own.\n *\n * The style implementation on the consumer side could include\n * setting the background color, isolating the parent's stacking context,\n * and handling border-radius for the first and last items.\n *\n * Check the example styles file for further info.\n * :::\n */\n@Component({\n    tag: 'limel-example-list-item-basic',\n    shadow: true,\n    styleUrl: 'list-item-basic.scss',\n})\nexport class ListItemBasicExample {\n    public render() {\n        return (\n            <ul>\n                <limel-list-item\n                    value={1}\n                    tabindex=\"0\"\n                    text=\"Basic List Item\"\n                />\n                <limel-list-item\n                    value={2}\n                    tabindex=\"0\"\n                    text=\"This is the `text`\"\n                    secondaryText=\"This is the `secondaryText`\"\n                />\n            </ul>\n        );\n    }\n}\n"],"mappings":"+CAAA,MAAMA,EAAmB,mtF,MCiCZC,EAAoB,M,yBACtBC,SACH,OACIC,EAAA,UACIA,EAAA,mBACIC,MAAO,EACPC,SAAS,IACTC,KAAK,oBAETH,EAAA,mBACIC,MAAO,EACPC,SAAS,IACTC,KAAK,qBACLC,cAAc,gC"}