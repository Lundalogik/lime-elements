{"version":3,"names":["RadioButtonTemplate","props","h","class","checked","disabled","type","id","onChange","htmlFor","label","listItemCss","ListItem","constructor","hostRef","this","renderLabel","labelId","text","renderDescription","secondaryText","descriptionId","renderIcon","iconName","getIconName","icon","iconColor","iconBackgroundColor","title","color","backgroundColor","iconProps","name","style","badge","badgeIcon","size","iconSize","Object","assign","renderPrimaryComponent","primary","primaryComponent","PrimaryComponent","renderImage","image","src","alt","loading","renderActionMenu","actions","length","items","openDirection","slot","actionMenuLabel","renderRadioButton","selected","renderCheckbox","CheckboxTemplate","onClick","event","target","cameFromActionTrigger","closest","cameFromNoToggle","cameFromMenu","isSelectableType","handleInteraction","onKeyDown","shadowRoot","host","activeEl","activeElement","isEnter","key","isSpace","code","repeat","preventDefault","click","newSelected","item","value","interact","emit","translate","get","language","createRandomString","componentWillLoad","disconnectedCallback","render","ariaProps","undefined","Host","role","getHostRole","_a"],"sources":["./src/components/radio-button-group/radio-button.template.tsx","./src/components/list-item/list-item.scss?tag=limel-list-item&encapsulation=shadow","./src/components/list-item/list-item.tsx"],"sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\n\n/**\n * Radio Button Template\n *\n * This is a low-level template component that renders individual radio button elements\n * using Material Design Components (MDC) styling and structure. It's used internally\n * by the list component to render radio buttons when `type=\"radio\"` is specified.\n *\n * ## Usage in the Library\n *\n * This template is primarily used by:\n * - `limel-list` component when `type=\"radio\"`\n * - `limel-radio-button-group` component (which wraps `limel-list`)\n *\n * ## Why This Exists\n *\n * While we have `limel-radio-button-group` for most use cases, this template provides\n * the actual radio button HTML structure with proper MDC classes and accessibility\n * attributes. It ensures consistent styling and behavior across all radio button\n * implementations in the library.\n *\n * ## Design Philosophy\n *\n * This follows the principle that individual radio buttons should not be standalone\n * components, as a single radio button is never useful in a UI. Instead, this template\n * is used to build groups of radio buttons through higher-level components.\n *\n * @internal\n */\ninterface RadioButtonTemplateProps {\n    disabled?: boolean;\n    id: string;\n    checked?: boolean;\n    onChange?: (event: Event) => void;\n    label?: string;\n}\n\nexport const RadioButtonTemplate: FunctionalComponent<\n    RadioButtonTemplateProps\n> = (props) => {\n    return (\n        <div\n            class={{\n                'boolean-input': true,\n                'radio-button': true,\n                checked: props.checked,\n                disabled: props.disabled,\n            }}\n        >\n            <input\n                type=\"radio\"\n                id={props.id}\n                checked={props.checked}\n                disabled={props.disabled}\n                onChange={props.onChange}\n            />\n            <div class=\"box\" />\n            <label class=\"boolean-input-label\" htmlFor={props.id}>\n                {props.label}\n            </label>\n        </div>\n    );\n};\n","@use '../../style/mixins';\n@forward '../checkbox/checkbox.scss';\n@forward '../radio-button-group/radio-button.scss';\n\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n:host(limel-list-item:hover) {\n    transition: background-color 0.2s ease;\n}\n\n:host(limel-list-item) {\n    transition: background-color 0.6s ease;\n    position: relative;\n    isolation: isolate;\n    box-sizing: border-box;\n\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n\n    padding: 0 1rem;\n    background-color: rgb(var(--contrast-100));\n}\n\n:host(limel-list-item[disabled]:not([disabled='false'])) {\n    cursor: not-allowed;\n\n    .text,\n    limel-icon,\n    img {\n        opacity: 0.4;\n    }\n}\n\n:host(limel-list-item:not([disabled]):not([disabled='true']):hover),\n:host(limel-list-item:not([disabled]):not([disabled='true']):focus-visible),\n:host(limel-list-item:not([disabled]):not([disabled='true']):focus-within) {\n    background-color: rgb(var(--contrast-400));\n}\n\n:host(limel-list-item[type='option'][selected]:not([selected='false'])):before {\n    content: '';\n    position: absolute;\n    inset: 0;\n\n    background-color: var(--limel-theme-primary-color);\n    opacity: 0.2;\n    border-radius: inherit;\n}\n\n.text,\nlimel-icon,\nimg {\n    pointer-events: none;\n}\n\n.text {\n    flex-grow: 1;\n    min-width: 0;\n\n    display: flex;\n    flex-direction: column;\n\n    padding: 0.5rem 0;\n\n    color: var(--limel-theme-text-primary-on-background-color);\n}\n\nlabel {\n    font-size: var(--limel-theme-default-font-size);\n    line-height: 1rem;\n\n    :host(limel-list-item[role='menuitem']) & {\n        font-size: var(--limel-theme-default-small-font-size);\n    }\n}\n\n.description {\n    font-size: var(--limel-theme-default-small-font-size);\n    opacity: 0.6;\n}\n\nlimel-icon {\n    color: var(--limel-theme-text-secondary-on-background-color);\n    flex-shrink: 0;\n    margin-left: -0.5rem;\n\n    &:has(+ img) {\n        margin-left: 0;\n        position: absolute;\n        top: 0.125rem;\n        left: 0.125rem;\n        padding: 0.1875rem;\n        width: 1.25rem;\n        background-color: rgb(var(--contrast-200), 0.8);\n    }\n}\n\nimg {\n    flex-shrink: 0;\n    object-fit: cover;\n    border-radius: 50%;\n    width: 2rem;\n    height: 2rem;\n    box-shadow: 0 0 0 1px rgb(var(--contrast-800), 0.5);\n}\n\n:host(limel-list-item) {\n    label {\n        @include mixins.truncate-text();\n    }\n\n    .description {\n        @include mixins.truncate-text-on-line(var(--maxLinesSecondaryText));\n        line-height: 1rem;\n    }\n}\n\nlimel-menu {\n    margin-right: -0.5rem;\n    // Sometimes, `primaryComponent`s in list items need to get\n    // `order: 2;` to be placed after the text. But since the default `order`\n    // of all lit item children is `0`, we need to push the menu to the far right\n    // by giving it a bigger order number. Also, by making this into a variable\n    // we can handle other edge-cases in consuming components.\n    order: var(--limel-list-item-menu-order, 3);\n}\n\n// Checkbox and radios\n.boolean-input {\n    width: var(--limel-boolean-input-box-size);\n    margin-left: -0.25rem;\n    &.checkbox {\n        margin-right: 0.25rem;\n    }\n\n    :host:has(limel-icon) &,\n    :host:has(img) & {\n        margin-right: -0.25rem;\n        margin-left: 0;\n        order: 2;\n    }\n}\n\nlabel.boolean-input-label {\n    @include mixins.truncate-text();\n    opacity: 0;\n    width: var(--limel-boolean-input-box-size);\n}\n// ====================\n","import {\n    Component,\n    Host,\n    Prop,\n    h,\n    Event,\n    EventEmitter,\n    Element,\n} from '@stencil/core';\nimport { getIconName } from '../icon/get-icon-props';\nimport type { IconSize } from '../icon/icon.types';\nimport { createRandomString } from '../../util/random-string';\nimport { ListItem as ListItemInterface } from '../list/list-item.types';\nimport { MenuItem } from '../menu/menu.types';\nimport { ListSeparator } from '../../global/shared-types/separator.types';\nimport { CheckboxTemplate } from '../checkbox/checkbox.template';\nimport { RadioButtonTemplate } from '../radio-button-group/radio-button.template';\nimport translate from '../../global/translations';\nimport { Languages } from '../date-picker/date.types';\n\n/**\n * This components displays the list item.\n * This centralizes styles and functionality, and helps reduce redundant code\n * in consumer components such as `limel-list` and `limel-menu-list`.\n *\n * @exampleComponent limel-example-list-item-basic\n * @exampleComponent limel-example-list-item-icon\n * @exampleComponent limel-example-list-item-icon-size\n * @exampleComponent limel-example-list-item-pictures\n * @exampleComponent limel-example-list-item-multiple-lines\n * @exampleComponent limel-example-list-item-interactive\n * @exampleComponent limel-example-list-item-radio\n * @exampleComponent limel-example-list-item-checkbox\n * @exampleComponent limel-example-list-item-actions\n * @exampleComponent limel-example-list-item-primary-component\n * @exampleComponent limel-example-list-item-command-text\n *\n * @private\n */\n@Component({\n    tag: 'limel-list-item',\n    shadow: true,\n    styleUrl: 'list-item.scss',\n})\nexport class ListItem implements ListItemInterface {\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components.\n     */\n    @Prop({ reflect: true })\n    public language: Languages = 'en';\n\n    /** @inheritDoc */\n    @Prop()\n    public value?: any;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public text: string;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public secondaryText?: string;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /** @inheritDoc */\n    @Prop()\n    public icon?: string | ListItemInterface['icon'];\n\n    /**\n     * Size of the icon displayed for this item.\n     */\n    @Prop({ reflect: true })\n    public iconSize: IconSize = 'small';\n\n    /**\n     * Set to `true` if the list should display larger icons with a background\n     */\n    @Prop({ reflect: true })\n    public badgeIcon = false;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public selected = false;\n\n    /** @inheritDoc */\n    @Prop()\n    public actions?: ListItemInterface['actions'];\n\n    /** @inheritDoc */\n    @Prop()\n    public primaryComponent?: ListItemInterface['primaryComponent'];\n\n    /** @inheritDoc */\n    @Prop()\n    public image?: ListItemInterface['image'];\n\n    /**\n     * The semantic role of the list item. This affects the ARIA role\n     * and the interaction behavior.\n     *\n     * - 'option' → selectable via click/Enter/Space, aria-selected\n     * - 'radio'/'checkbox' → selectable, aria-checked\n     * - 'menuitem'/'listitem' → activation only, no selection toggle\n     */\n    @Prop({ reflect: true })\n    public type: 'listitem' | 'menuitem' | 'option' | 'radio' | 'checkbox' =\n        'listitem';\n\n    /**\n     * Emitted when the list item toggles selection (only for selectable types and not disabled).\n     */\n    @Event()\n    public interact: EventEmitter<{\n        selected: boolean;\n        item: ListItemInterface;\n    }>;\n\n    @Element()\n    private host: HTMLLimelListItemElement;\n\n    /**\n     * Used to describe the list item for assistive technology.\n     */\n    private readonly descriptionId: string;\n\n    /**\n     * Used to label the list item for assistive technology.\n     */\n    private readonly labelId: string;\n\n    constructor() {\n        this.labelId = createRandomString();\n        this.descriptionId = createRandomString();\n    }\n\n    public componentWillLoad() {}\n\n    public disconnectedCallback() {}\n\n    public render() {\n        const ariaProps: any = {\n            'aria-labelledby': this.labelId,\n            'aria-describedby': this.secondaryText\n                ? this.descriptionId\n                : undefined,\n            'aria-disabled': this.disabled ? 'true' : 'false',\n        };\n\n        // ARIA state depending on `role`/`type`\n        if (this.type === 'radio' || this.type === 'checkbox') {\n            ariaProps['aria-checked'] = this.selected ? 'true' : 'false';\n        } else if (this.type === 'option' || this.type === 'menuitem') {\n            // aria-selected for `option` (spec);\n            // also keep for `menuitem` for visual state consistency\n            ariaProps['aria-selected'] = this.selected ? 'true' : 'false';\n        }\n\n        return (\n            <Host\n                role={this.getHostRole()}\n                class={{\n                    'has-primary-component': !!this.primaryComponent?.name,\n                }}\n                {...ariaProps}\n                onClick={this.onClick}\n                onKeyDown={this.onKeyDown}\n            >\n                {this.renderRadioButton()}\n                {this.renderCheckbox()}\n                {this.renderIcon()}\n                {this.renderImage()}\n                {this.renderPrimaryComponent()}\n                <div class=\"text\">\n                    {this.renderLabel()}\n                    {this.renderDescription()}\n                </div>\n                {this.renderActionMenu(this.actions)}\n            </Host>\n        );\n    }\n\n    private renderLabel = () => {\n        return <label id={this.labelId}>{this.text}</label>;\n    };\n\n    private renderDescription = () => {\n        if (!this.secondaryText) {\n            return;\n        }\n\n        return (\n            <span class=\"description\" id={this.descriptionId}>\n                {this.secondaryText}\n            </span>\n        );\n    };\n\n    private renderIcon = () => {\n        const iconName = getIconName(this.icon);\n        if (!iconName) {\n            return;\n        }\n\n        let iconColor: string | undefined;\n        let iconBackgroundColor: string | undefined;\n        let title: string | undefined;\n\n        if (typeof this.icon === 'object') {\n            iconColor = this.icon.color;\n            iconBackgroundColor = this.icon.backgroundColor;\n            title = this.icon.title;\n        }\n\n        const iconProps = {\n            'aria-label': title,\n            'aria-hidden': title ? null : 'true',\n            name: iconName,\n            style: {\n                color: iconColor,\n                'background-color': iconBackgroundColor,\n            },\n            badge: this.badgeIcon,\n            size: this.iconSize,\n        };\n\n        return <limel-icon {...iconProps} />;\n    };\n\n    private renderPrimaryComponent = () => {\n        const primary = this.primaryComponent;\n        if (!primary?.name) {\n            return;\n        }\n\n        const PrimaryComponent: any = primary.name;\n        const props = primary.props || {};\n\n        return <PrimaryComponent {...props} />;\n    };\n\n    private renderImage = () => {\n        if (!this.image) {\n            return;\n        }\n\n        return <img src={this.image.src} alt={this.image.alt} loading=\"lazy\" />;\n    };\n\n    private renderActionMenu = (actions: Array<MenuItem | ListSeparator>) => {\n        if (!actions || actions.length === 0) {\n            return;\n        }\n\n        return (\n            <limel-menu\n                class=\"mdc-deprecated-list-item__meta\"\n                items={actions}\n                openDirection=\"left-start\"\n            >\n                <limel-icon-button\n                    class=\"action-menu-trigger\"\n                    slot=\"trigger\"\n                    icon=\"menu_2\"\n                    label={this.actionMenuLabel()}\n                />\n            </limel-menu>\n        );\n    };\n\n    private renderRadioButton = () => {\n        if (this.type !== 'radio') {\n            return;\n        }\n\n        return (\n            <RadioButtonTemplate\n                id={`radio_${this.labelId}`}\n                checked={this.selected}\n                disabled={this.disabled}\n            />\n        );\n    };\n\n    private renderCheckbox = () => {\n        if (this.type !== 'checkbox') {\n            return;\n        }\n\n        return (\n            <CheckboxTemplate\n                id={`checkbox_${this.labelId}`}\n                checked={this.selected}\n                disabled={this.disabled}\n            />\n        );\n    };\n\n    private onClick = (event: MouseEvent) => {\n        if (this.disabled) {\n            // Ignore toggling, but don't block embedded controls\n            return;\n        }\n\n        const target = event.target as HTMLElement | null;\n        const cameFromActionTrigger = !!target?.closest('.action-menu-trigger');\n        const cameFromNoToggle = !!target?.closest('[data-no-toggle]');\n        const cameFromMenu = !!target?.closest('limel-menu');\n        if (cameFromActionTrigger || cameFromNoToggle || cameFromMenu) {\n            return;\n        }\n\n        if (this.isSelectableType()) {\n            this.handleInteraction();\n        }\n        // For non-selectable types (menuitem/listitem), allow native click to bubble\n    };\n\n    private onKeyDown = (event: KeyboardEvent) => {\n        if (this.disabled) {\n            return;\n        }\n\n        // Only handle keyboard when the host itself has focus.\n        // This avoids toggling when Space/Enter is pressed on inner controls\n        // like the action menu trigger or any primary component.\n        const shadowRoot = this.host.shadowRoot;\n        const activeEl = shadowRoot\n            ? (shadowRoot.activeElement as HTMLElement | null)\n            : null;\n        if (activeEl && activeEl !== this.host) {\n            return;\n        }\n\n        const isEnter = event.key === 'Enter';\n        const isSpace =\n            event.key === ' ' ||\n            event.key === 'Space' ||\n            event.key === 'Spacebar' ||\n            event.code === 'Space';\n\n        if (!isEnter && !isSpace) {\n            return;\n        }\n\n        // Avoid re-triggering while key is held down and auto-repeats\n        if (event.repeat) {\n            // Also prevent default scroll on Space when repeating\n            if (isSpace) {\n                event.preventDefault();\n            }\n            return;\n        }\n\n        // Prevent page scroll and default button behavior on Space\n        if (isSpace) {\n            event.preventDefault();\n        }\n\n        if (this.isSelectableType()) {\n            this.handleInteraction();\n            return;\n        }\n\n        // For non-selectable items, treat Enter and Space as activation (simulate click)\n        if (isEnter || isSpace) {\n            this.host.click();\n        }\n    };\n\n    private isSelectableType(): boolean {\n        return (\n            this.type === 'option' ||\n            this.type === 'radio' ||\n            this.type === 'checkbox'\n        );\n    }\n\n    private getHostRole(): string {\n        switch (this.type) {\n            case 'option': {\n                return 'option';\n            }\n            case 'radio': {\n                return 'radio';\n            }\n            case 'checkbox': {\n                return 'checkbox';\n            }\n            case 'menuitem': {\n                return 'menuitem';\n            }\n            default: {\n                return 'listitem';\n            }\n        }\n    }\n\n    private handleInteraction = () => {\n        const newSelected = !this.selected;\n\n        const item: ListItemInterface = {\n            text: this.text,\n            secondaryText: this.secondaryText,\n            disabled: this.disabled,\n            icon: this.icon,\n            selected: newSelected,\n            value: this.value,\n            actions: this.actions,\n            primaryComponent: this.primaryComponent,\n            image: this.image,\n        };\n\n        this.interact.emit({\n            selected: newSelected,\n            item: item,\n        });\n    };\n\n    private actionMenuLabel = (): string => {\n        return translate.get('file-viewer.more-actions', this.language);\n    };\n}\n"],"mappings":"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"}