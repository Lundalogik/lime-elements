{"version":3,"names":["listItemCss","ListItem","constructor","hostRef","this","renderLabel","h","id","labelId","text","renderDescription","secondaryText","class","descriptionId","renderIcon","iconName","getIconName","icon","iconColor","iconBackgroundColor","title","color","backgroundColor","iconProps","name","style","Object","assign","renderImage","image","src","alt","loading","filterClickWhenDisabled","event","disabled","selectable","preventDefault","stopPropagation","handleInteraction","newSelected","selected","item","value","actions","primaryComponent","interact","emit","createRandomString","componentWillLoad","makeEnterClickable","host","disconnectedCallback","removeEnterClickable","render","Host","role","type","undefined","onClick"],"sources":["./src/components/list-item/list-item.scss?tag=limel-list-item&encapsulation=shadow","./src/components/list-item/list-item.tsx"],"sourcesContent":["@use '../../style/mixins';\n\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n:host(limel-list-item:hover) {\n    transition: background-color 0.2s ease;\n}\n\n:host(limel-list-item) {\n    transition: background-color 0.6s ease;\n    position: relative;\n    isolation: isolate;\n    box-sizing: border-box;\n\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n\n    padding: 0 1rem;\n    background-color: rgb(var(--contrast-100));\n}\n\n:host(limel-list-item[disabled]:not([disabled='false'])) {\n    cursor: not-allowed;\n    opacity: 0.4;\n}\n\n:host(limel-list-item:not([disabled]:not([disabled='true']))) {\n}\n\n:host(limel-list-item:not([disabled]:not([disabled='true'])):hover),\n:host(limel-list-item:not([disabled]:not([disabled='true'])):focus-visible),\n:host(limel-list-item:not([disabled]:not([disabled='true'])):focus-within) {\n    background-color: rgb(var(--contrast-400));\n}\n\n:host(limel-list-item[selected]:not([selected='false'])):before {\n    cursor: pointer;\n    content: '';\n    position: absolute;\n    inset: 0;\n\n    background-color: var(\n        --mdc-theme-primary\n    ); // TODO: replace with lime's own global props\n    opacity: 0.2;\n    border-radius: inherit;\n}\n\n.text,\nlimel-icon,\nimg {\n    pointer-events: none;\n}\n\n.text {\n    flex-grow: 1;\n\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    padding: 0.5rem 0;\n    // TODO: replace with lime's own global props\n    color: rgb(var(--contrast-1100));\n}\n\nlabel {\n    // TODO: replace with lime's own global props\n    font-size: 0.875rem; // 14px\n}\n\n.description {\n    font-size: 0.8125rem; // 13px\n    opacity: 0.6;\n}\n\nlimel-icon {\n    flex-shrink: 0;\n    width: 1.5rem;\n\n    &:has(+ img) {\n        position: absolute;\n        top: 0.125rem;\n        left: 0.125rem;\n        padding: 0.1875rem;\n        width: 1.25rem;\n        background-color: rgb(var(--contrast-200), 0.8);\n    }\n}\n\nimg {\n    flex-shrink: 0;\n    object-fit: cover;\n    border-radius: 50%;\n    width: 2rem;\n    height: 2rem;\n    box-shadow: 0 0 0 1px rgb(var(--contrast-800), 0.5);\n}\n","import {\n    Component,\n    Host,\n    Prop,\n    h,\n    Event,\n    EventEmitter,\n    Element,\n} from '@stencil/core';\nimport { getIconName } from '../icon/get-icon-props';\nimport { createRandomString } from '../../util/random-string';\nimport { ListItem as ListItemType } from '../list/list-item.types';\nimport {\n    makeEnterClickable,\n    removeEnterClickable,\n} from '../../util/make-enter-clickable';\n\n/**\n * This components displays the list item.\n * This centralizes styles and functionality, and helps reduce redundant code\n * in consumer components such as `limel-list` and `limel-menu-list`.\n * @exampleComponent limel-example-list-item-basic\n * @exampleComponent limel-example-list-item-icon\n * @exampleComponent limel-example-list-item-pictures\n * @exampleComponent limel-example-list-item-interactive\n * @private\n */\n@Component({\n    tag: 'limel-list-item',\n    shadow: { delegatesFocus: true },\n    styleUrl: 'list-item.scss',\n})\nexport class ListItem implements ListItemType {\n    /** @inheritDoc */\n    @Prop()\n    public value?: any;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public text: string;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public secondaryText?: string;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /** @inheritDoc */\n    @Prop()\n    public icon?: string | ListItemType['icon'];\n\n    /**\n     * A list item that is selectable can be selected by the user.\n     * This is used in lists where the user can select one or more items.\n     * Once the item is selected, it will have a visual and accessible\n     * indications of being selected.\n     */\n    @Prop({ reflect: true })\n    public selectable = false;\n\n    /** @inheritDoc */\n    @Prop({ reflect: true })\n    public selected = false;\n\n    /** @inheritDoc */\n    @Prop()\n    public actions?: ListItemType['actions'];\n\n    /** @inheritDoc */\n    @Prop()\n    public primaryComponent?: ListItemType['primaryComponent'];\n\n    /** @inheritDoc */\n    @Prop()\n    public image?: ListItemType['image'];\n\n    /**\n     * The semantic role of the list item. This affects the ARIA role\n     * and potentially the rendering behavior.\n     */\n    @Prop()\n    public type: 'listitem' | 'menuitem' | 'option' | 'radio' | 'checkbox' =\n        'listitem';\n\n    /**\n     * Emitted when the list item is clicked (only if selectable and not disabled).\n     */\n    @Event()\n    public interact: EventEmitter<{ selected: boolean; item: ListItemType }>;\n\n    @Element()\n    private host: HTMLLimelListItemElement;\n\n    /**\n     * Used to describe the list item for assistive technology.\n     */\n    private readonly descriptionId: string;\n\n    /**\n     * Used to label the list item for assistive technology.\n     */\n    private readonly labelId: string;\n\n    constructor() {\n        this.labelId = createRandomString();\n        this.descriptionId = createRandomString();\n    }\n\n    public componentWillLoad() {\n        makeEnterClickable(this.host);\n    }\n\n    public disconnectedCallback() {\n        removeEnterClickable(this.host);\n    }\n\n    public render() {\n        return (\n            <Host\n                role={this.type}\n                aria-labelledby={this.labelId}\n                aria-describedby={\n                    this.secondaryText ? this.descriptionId : undefined\n                }\n                aria-disabled={this.disabled ? 'true' : 'false'}\n                aria-selected={this.selected ? 'true' : 'false'}\n                onClick={this.filterClickWhenDisabled}\n            >\n                {this.renderIcon()}\n                {this.renderImage()}\n                <div class=\"text\">\n                    {this.renderLabel()}\n                    {this.renderDescription()}\n                </div>\n            </Host>\n        );\n    }\n\n    private renderLabel = () => {\n        return <label id={this.labelId}>{this.text}</label>;\n    };\n\n    private renderDescription = () => {\n        if (!this.secondaryText) {\n            return;\n        }\n\n        return (\n            <span class=\"description\" id={this.descriptionId}>\n                {this.secondaryText}\n            </span>\n        );\n    };\n\n    private renderIcon = () => {\n        const iconName = getIconName(this.icon);\n        if (!iconName) {\n            return;\n        }\n\n        let iconColor: string | undefined;\n        let iconBackgroundColor: string | undefined;\n        let title: string | undefined;\n\n        if (typeof this.icon === 'object') {\n            iconColor = this.icon.color;\n            iconBackgroundColor = this.icon.backgroundColor;\n            title = this.icon.title;\n        }\n\n        const iconProps = {\n            'aria-label': title,\n            'aria-hidden': title ? null : 'true',\n            name: iconName,\n            style: {\n                color: iconColor,\n                'background-color': iconBackgroundColor,\n            },\n        };\n\n        return <limel-icon {...iconProps} />;\n    };\n\n    private renderImage = () => {\n        if (!this.image) {\n            return;\n        }\n\n        return <img src={this.image.src} alt={this.image.alt} loading=\"lazy\" />;\n    };\n\n    private filterClickWhenDisabled = (event: MouseEvent) => {\n        if (this.disabled || !this.selectable) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n\n        this.handleInteraction();\n    };\n\n    private handleInteraction = () => {\n        // Calculate the new selected state (toggled)\n        const newSelected = !this.selected;\n\n        // Create the item object to emit\n        const item: ListItemType = {\n            text: this.text,\n            secondaryText: this.secondaryText,\n            disabled: this.disabled,\n            icon: this.icon,\n            selected: newSelected,\n            value: this.value,\n            actions: this.actions,\n            primaryComponent: this.primaryComponent,\n            image: this.image,\n        };\n\n        // Emit the interact event\n        this.interact.emit({\n            selected: newSelected,\n            item: item,\n        });\n    };\n}\n"],"mappings":"mOAAA,MAAMA,EAAc,q4C,MCgCPC,EAAQ,MAyEjBC,YAAAC,G,6CAmCQC,KAAAC,YAAc,IACXC,EAAA,SAAOC,GAAIH,KAAKI,SAAUJ,KAAKK,MAGlCL,KAAAM,kBAAoB,KACxB,IAAKN,KAAKO,cAAe,CACrB,M,CAGJ,OACIL,EAAA,QAAMM,MAAM,cAAcL,GAAIH,KAAKS,eAC9BT,KAAKO,cACH,EAIPP,KAAAU,WAAa,KACjB,MAAMC,EAAWC,EAAYZ,KAAKa,MAClC,IAAKF,EAAU,CACX,M,CAGJ,IAAIG,EACJ,IAAIC,EACJ,IAAIC,EAEJ,UAAWhB,KAAKa,OAAS,SAAU,CAC/BC,EAAYd,KAAKa,KAAKI,MACtBF,EAAsBf,KAAKa,KAAKK,gBAChCF,EAAQhB,KAAKa,KAAKG,K,CAGtB,MAAMG,EAAY,CACd,aAAcH,EACd,cAAeA,EAAQ,KAAO,OAC9BI,KAAMT,EACNU,MAAO,CACHJ,MAAOH,EACP,mBAAoBC,IAI5B,OAAOb,EAAA,aAAAoB,OAAAC,OAAA,GAAgBJ,GAAa,EAGhCnB,KAAAwB,YAAc,KAClB,IAAKxB,KAAKyB,MAAO,CACb,M,CAGJ,OAAOvB,EAAA,OAAKwB,IAAK1B,KAAKyB,MAAMC,IAAKC,IAAK3B,KAAKyB,MAAME,IAAKC,QAAQ,QAAS,EAGnE5B,KAAA6B,wBAA2BC,IAC/B,GAAI9B,KAAK+B,WAAa/B,KAAKgC,WAAY,CACnCF,EAAMG,iBACNH,EAAMI,kBACN,M,CAGJlC,KAAKmC,mBAAmB,EAGpBnC,KAAAmC,kBAAoB,KAExB,MAAMC,GAAepC,KAAKqC,SAG1B,MAAMC,EAAqB,CACvBjC,KAAML,KAAKK,KACXE,cAAeP,KAAKO,cACpBwB,SAAU/B,KAAK+B,SACflB,KAAMb,KAAKa,KACXwB,SAAUD,EACVG,MAAOvC,KAAKuC,MACZC,QAASxC,KAAKwC,QACdC,iBAAkBzC,KAAKyC,iBACvBhB,MAAOzB,KAAKyB,OAIhBzB,KAAK0C,SAASC,KAAK,CACfN,SAAUD,EACVE,KAAMA,GACR,E,oFAjLY,M,oCAaE,M,cAIF,M,sFAoBd,WAsBAtC,KAAKI,QAAUwC,IACf5C,KAAKS,cAAgBmC,G,CAGlBC,oBACHC,EAAmB9C,KAAK+C,K,CAGrBC,uBACHC,EAAqBjD,KAAK+C,K,CAGvBG,SACH,OACIhD,EAACiD,EAAI,CACDC,KAAMpD,KAAKqD,KAAI,kBACErD,KAAKI,QAAO,mBAEzBJ,KAAKO,cAAgBP,KAAKS,cAAgB6C,UAAS,gBAExCtD,KAAK+B,SAAW,OAAS,QAAO,gBAChC/B,KAAKqC,SAAW,OAAS,QACxCkB,QAASvD,KAAK6B,yBAEb7B,KAAKU,aACLV,KAAKwB,cACNtB,EAAA,OAAKM,MAAM,QACNR,KAAKC,cACLD,KAAKM,qB"}