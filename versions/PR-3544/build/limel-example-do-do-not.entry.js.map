{"version":3,"names":["exampleDoDoNotCss","ExampleDoDoNot","render","h","Host","this","renderSection","doDescription","doNotDescription","type","iconName","title","description","titleId","descriptionId","undefined","class","name","id","renderDescription","value"],"sources":["./src/examples/example-do-do-not.scss?tag=limel-example-do-do-not&encapsulation=shadow","./src/examples/example-do-do-not.tsx"],"sourcesContent":["/**\n * @prop --example-do-do-not-max-columns-width: Defines maximum width of columns.\n * @prop --example-do-do-not-column-layout: Defines how columns take up the available space. By default, it is set to be `auto-fill`, which fills the row with as many columns as it can. But it can also be set it to `auto-fit` stretches the columns to occupy all the available space.\n */\n\n:host(limel-example-do-do-not) {\n    display: grid;\n    grid-template-columns: repeat(\n        var(--example-do-do-not-column-layout, auto-fill),\n        minmax(var(--example-do-do-not-max-columns-width, 20rem), 1fr)\n    );\n    gap: 1.25rem 0.75rem;\n\n    margin: 1rem 0;\n}\n\nsection {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\ndiv {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n\n    border-radius: 0.5rem;\n    padding: 0.25rem;\n\n    .do & {\n        background-color: rgb(var(--color-green-lighter));\n    }\n    .do-not & {\n        background-color: rgb(var(--color-red-lighter));\n    }\n}\n\nslot {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 0.375rem;\n\n    padding: 1rem;\n    gap: 0.5rem;\n    min-height: 1rem;\n    background-color: rgb(var(--contrast-100));\n}\n\n::slotted([slot='do']),\n::slotted([slot='do-not']) {\n    border-radius: 0.375rem;\n}\n\nfooter {\n    display: flex;\n    gap: 0.25rem;\n    align-items: center;\n\n    color: rgb(var(--color-glaucous-darker));\n    padding: 0.125rem 0.25rem;\n}\n\nh1 {\n    all: unset;\n    font-size: 0.75rem;\n}\n\nlimel-icon {\n    width: 1rem;\n\n    .do & {\n        color: rgb(var(--color-green-darker));\n    }\n    .do-not & {\n        color: rgb(var(--color-red-darker));\n    }\n}\n\nlimel-markdown {\n    padding: 0 0.5rem;\n}\n","import { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * This component is only used in our documentations\n * to provide a container for enriching the guidelines with\n * good and bad examples.\n *\n * @private\n */\n@Component({\n    tag: 'limel-example-do-do-not',\n    shadow: true,\n    styleUrl: 'example-do-do-not.scss',\n})\nexport class ExampleDoDoNot {\n    /**\n     * Supports markdown and can be used to add a description\n     * to the \"Do\" section.\n     */\n    @Prop()\n    public doDescription?: string;\n\n    /**\n     * Supports markdown and can be used to add a description\n     * to the \"Don't\" section.\n     */\n    @Prop()\n    public doNotDescription?: string;\n\n    public render() {\n        return (\n            <Host>\n                {this.renderSection(\n                    'do',\n                    'checkmark',\n                    'Do',\n                    this.doDescription,\n                )}\n                {this.renderSection(\n                    'do-not',\n                    'multiply',\n                    \"Don't\",\n                    this.doNotDescription,\n                )}\n            </Host>\n        );\n    }\n\n    private renderSection(\n        type: string,\n        iconName: string,\n        title: string,\n        description?: string,\n    ) {\n        const titleId = `${type}-title`;\n        const descriptionId = description ? `${type}-description` : undefined;\n\n        return (\n            <section\n                class={type}\n                aria-labelledby={titleId}\n                aria-describedby={descriptionId}\n            >\n                <div>\n                    <slot name={type} />\n                    <footer>\n                        <limel-icon name={iconName} aria-hidden=\"true\" />\n                        <h1 id={titleId}>{title}</h1>\n                    </footer>\n                </div>\n                {this.renderDescription(description, descriptionId)}\n            </section>\n        );\n    }\n\n    private renderDescription(description?: string, id?: string) {\n        if (!description) {\n            return;\n        }\n\n        return <limel-markdown id={id} value={description} />;\n    }\n}\n"],"mappings":"sDAAA,MAAMA,EAAoB,ggC,MCcbC,EAAc,M,sFAehBC,SACH,OACIC,EAACC,EAAI,KACAC,KAAKC,cACF,KACA,YACA,KACAD,KAAKE,eAERF,KAAKC,cACF,SACA,WACA,QACAD,KAAKG,kB,CAMbF,cACJG,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAU,GAAGJ,UACnB,MAAMK,EAAgBF,EAAc,GAAGH,gBAAqBM,UAE5D,OACIZ,EAAA,WACIa,MAAOP,EAAI,kBACMI,EAAO,mBACNC,GAElBX,EAAA,WACIA,EAAA,QAAMc,KAAMR,IACZN,EAAA,cACIA,EAAA,cAAYc,KAAMP,EAAQ,cAAc,SACxCP,EAAA,MAAIe,GAAIL,GAAUF,KAGzBN,KAAKc,kBAAkBP,EAAaE,G,CAKzCK,kBAAkBP,EAAsBM,GAC5C,IAAKN,EAAa,CACd,M,CAGJ,OAAOT,EAAA,kBAAgBe,GAAIA,EAAIE,MAAOR,G"}