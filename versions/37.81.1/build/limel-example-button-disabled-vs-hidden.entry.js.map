{"version":3,"names":["buttonDisabledVsHiddenCss","ButtonDisabledVsHideExample","this","items","text","icon","disabledItem","disabled","setChecked","event","stopPropagation","value","detail","isClicked","clicked","isClickedDontExample","clickedDontExample","render","h","class","heading","label","required","onChange","checked","id","elementId","name","size","onClick"],"sources":["./src/design-guidelines/disabled-hidden/examples/button-disabled-vs-hidden.scss?tag=limel-example-button-disabled-vs-hidden&encapsulation=shadow","./src/design-guidelines/disabled-hidden/examples/disabled-vs-hidden.tsx"],"sourcesContent":["@import '../../../design-guidelines/_generic-example-styles/do-dont';\n\n.do,\n.do-not {\n    .relevant-button,\n    limel-button {\n        margin: 1rem;\n    }\n\n    .assign {\n        padding-bottom: 0;\n    }\n}\n\n#tooltip-example {\n    width: 5rem;\n}\n\n#tooltip {\n    cursor: help;\n}\n\n.button-icon {\n    display: flex;\n    align-items: center;\n}\n\n.split-example,\n.relevant-buttons-example {\n    limel-split-button {\n        margin: 1rem;\n    }\n}\n","import { Component, h, State } from '@stencil/core';\nimport { ListSeparator } from '../../../components/list/list-item.types';\nimport { MenuItem } from '../../../components/menu/menu.types';\n\n@Component({\n    tag: 'limel-example-button-disabled-vs-hidden',\n    shadow: true,\n    styleUrl: 'button-disabled-vs-hidden.scss',\n})\nexport class ButtonDisabledVsHideExample {\n    @State()\n    private value: boolean = false;\n\n    @State()\n    private clicked: boolean = false;\n\n    @State()\n    private clickedDontExample: boolean = false;\n\n    @State()\n    public required: boolean;\n\n    private items: Array<ListSeparator | MenuItem> = [\n        { text: 'Save as', icon: 'save_as' },\n    ];\n    private disabledItem: Array<ListSeparator | MenuItem> = [\n        { text: 'Save as', icon: 'save_as', disabled: true },\n    ];\n\n    public render() {\n        return [\n            <h3>Disabled vs. Hidden</h3>,\n            <p>\n                When should an interactive element –like a button– be \"Disabled\"\n                and when should we avoid displaying it? This is a crucial\n                question in user interface design, and the choice between the\n                two should always be context-dependent. These guidelines provide\n                insights into when to apply each approach to optimize user\n                experiences.\n                <br />\n                <br />\n                <b> Disabling an interactive element:</b>\n            </p>,\n            <p>\n                Use button disabling when the action the button represents is\n                not currently available but may become available in the future.\n                For example, you can disable a \"Submit\" button until all\n                required form fields are filled out. Keep in mind that in such\n                cases, users should be able to do something to enable the\n                <code>disabled</code> element!\n            </p>,\n            <div class=\"do-dont-container\">\n                <div class=\"do\">\n                    <limel-header\n                        icon=\"ok\"\n                        heading=\"Disabled button in the form\"\n                    />\n                    <limel-checkbox\n                        label=\"Accept terms and conditions\"\n                        required\n                        onChange={this.setChecked}\n                        checked={this.value}\n                    />\n                    <limel-button\n                        label=\"Submit\"\n                        disabled={this.value ? false : true}\n                    />\n                </div>\n            </div>,\n            <p>\n                Simply showing a disabled element in the user interface might\n                not be enough for the user to realize what they should do to\n                enable it. Therefore, it's very helpful to communicate to the\n                user why they can't perform that certain action. Disabled\n                buttons for instance, could have a tooltip or message explaining\n                why they are disabled.\n            </p>,\n            <div class=\"do-dont-container\">\n                <div class=\"do\">\n                    <limel-header\n                        icon=\"ok\"\n                        heading=\"Disabled button together with a Tooltip\"\n                    />\n                    <div id=\"tooltip-example\">\n                        <limel-button disabled icon=\"phone\" label=\"Call\" />\n                    </div>\n                    <limel-tooltip\n                        label=\"Select a recipient to make a call\"\n                        elementId=\"tooltip-example\"\n                    />\n                </div>\n            </div>,\n\n            <p>\n                Another idea could be to display a more noticeable visual\n                element next to the disabled element, which hints about an\n                explanation or further information. For example, indicating to\n                the user that they need to complete a certain step or meet\n                specific conditions before proceeding.\n            </p>,\n\n            <div class=\"do-dont-container\">\n                <div class=\"do\">\n                    <limel-header\n                        icon=\"ok\"\n                        heading=\"Disabled button together with an info icon\"\n                    />\n                    <div class=\"button-icon\">\n                        <limel-button\n                            disabled\n                            icon=\"plus_math\"\n                            label=\"Add recipient\"\n                        />\n                        <limel-icon name=\"info\" id=\"tooltip\" size=\"x-small\" />\n                    </div>\n                    <limel-tooltip\n                        label=\"To activate this feature, call our support!\"\n                        elementId=\"tooltip\"\n                    />\n                </div>\n            </div>,\n            <h3>Hiding an interactive element:</h3>,\n            <p>\n                Sometimes, displaying a disabled element does not make sense.\n                This could be of course due to various reasons, but a common\n                scenario is coexistence of another \"enabled\" element that does\n                the opposite of what the disabled element does. <br /> In this\n                example, there is no point to show two buttons, one for\n                \"assigning\" and one for \"un-assigning\". The \"Assign\" button\n                should be hidden if it's not relevant to a context. If the user\n                is already assigned there is no sense in having the assign\n                button, it is better to show the <b> unassign</b> button\n                instead.\n            </p>,\n            <div class=\"do-dont-container relevant-buttons-example\">\n                <div class=\"do-not\">\n                    <limel-header icon=\"brake_warning\" heading=\"Don't\" />\n                    <limel-button\n                        class=\"relevant-button assign\"\n                        icon=\"whole_hand_right\"\n                        label=\"Assign me\"\n                        disabled={this.clickedDontExample}\n                        onClick={this.isClickedDontExample}\n                    />\n                    <limel-button\n                        class=\"relevant-button\"\n                        label=\"Unassign me\"\n                        disabled={!this.clickedDontExample}\n                        onClick={this.isClickedDontExample}\n                    />\n                </div>\n                <div class=\"do\">\n                    <limel-header icon=\"ok\" heading=\"Do\" />\n                    <limel-button\n                        class=\"relevant-button\"\n                        icon={this.clicked ? '' : 'whole_hand_right'}\n                        label={this.clicked ? 'Unassign me' : 'Assign me'}\n                        onClick={this.isClicked}\n                    />\n                </div>\n            </div>,\n\n            <p>\n                When an action is permanently unavailable or not allowed for a\n                particular user role (e.g., an admin-only action), it's best to\n                hide the button rather than disabling it.\n            </p>,\n            <div class=\"do-dont-container split-example\">\n                <div class=\"do-not\">\n                    <limel-header\n                        icon=\"brake_warning\"\n                        heading=\"Don't - Users & Admins mixed\"\n                    />\n                    <limel-split-button\n                        label=\"Save\"\n                        icon=\"save\"\n                        items={this.disabledItem}\n                    />\n                </div>\n                <div class=\"do\">\n                    <limel-header icon=\"ok\" heading=\"Do - What users see\" />\n                    <limel-split-button label=\"Save\" icon=\"save\" />\n                </div>\n                <div class=\"do\">\n                    <limel-header\n                        icon=\"admin_settings\"\n                        heading=\"Do - What admins see\"\n                    />\n                    <limel-split-button\n                        label=\"Save\"\n                        icon=\"save\"\n                        items={this.items}\n                    />\n                </div>\n            </div>,\n        ];\n    }\n\n    private setChecked = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.value = event.detail;\n    };\n\n    private isClicked = () => {\n        this.clicked = !this.clicked;\n    };\n\n    private isClickedDontExample = () => {\n        this.clickedDontExample = !this.clickedDontExample;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA4B,m6B,MCSrBC,EAA2B,M,yBAa5BC,KAAAC,MAAyC,CAC7C,CAAEC,KAAM,UAAWC,KAAM,YAErBH,KAAAI,aAAgD,CACpD,CAAEF,KAAM,UAAWC,KAAM,UAAWE,SAAU,OA4K1CL,KAAAM,WAAcC,IAClBA,EAAMC,kBACNR,KAAKS,MAAQF,EAAMG,MAAM,EAGrBV,KAAAW,UAAY,KAChBX,KAAKY,SAAWZ,KAAKY,OAAO,EAGxBZ,KAAAa,qBAAuB,KAC3Bb,KAAKc,oBAAsBd,KAAKc,kBAAkB,E,WArM7B,M,aAGE,M,wBAGW,M,wBAY/BC,SACH,MAAO,CACHC,EAAA,iCACAA,EAAA,6UAOIA,EAAA,WACAA,EAAA,WACAA,EAAA,gDAEJA,EAAA,2TAMIA,EAAA,wBAAqB,aAEzBA,EAAA,OAAKC,MAAM,qBACPD,EAAA,OAAKC,MAAM,MACPD,EAAA,gBACIb,KAAK,KACLe,QAAQ,gCAEZF,EAAA,kBACIG,MAAM,8BACNC,SAAQ,KACRC,SAAUrB,KAAKM,WACfgB,QAAStB,KAAKS,QAElBO,EAAA,gBACIG,MAAM,SACNd,SAAUL,KAAKS,MAAQ,MAAQ,SAI3CO,EAAA,uVAQAA,EAAA,OAAKC,MAAM,qBACPD,EAAA,OAAKC,MAAM,MACPD,EAAA,gBACIb,KAAK,KACLe,QAAQ,4CAEZF,EAAA,OAAKO,GAAG,mBACJP,EAAA,gBAAcX,SAAQ,KAACF,KAAK,QAAQgB,MAAM,UAE9CH,EAAA,iBACIG,MAAM,oCACNK,UAAU,sBAKtBR,EAAA,kSAQAA,EAAA,OAAKC,MAAM,qBACPD,EAAA,OAAKC,MAAM,MACPD,EAAA,gBACIb,KAAK,KACLe,QAAQ,+CAEZF,EAAA,OAAKC,MAAM,eACPD,EAAA,gBACIX,SAAQ,KACRF,KAAK,YACLgB,MAAM,kBAEVH,EAAA,cAAYS,KAAK,OAAOF,GAAG,UAAUG,KAAK,aAE9CV,EAAA,iBACIG,MAAM,8CACNK,UAAU,cAItBR,EAAA,4CACAA,EAAA,sPAIoDA,EAAA,WAAM,6RAKrBA,EAAA,sBAAgB,oBAGrDA,EAAA,OAAKC,MAAM,8CACPD,EAAA,OAAKC,MAAM,UACPD,EAAA,gBAAcb,KAAK,gBAAgBe,QAAQ,UAC3CF,EAAA,gBACIC,MAAM,yBACNd,KAAK,mBACLgB,MAAM,YACNd,SAAUL,KAAKc,mBACfa,QAAS3B,KAAKa,uBAElBG,EAAA,gBACIC,MAAM,kBACNE,MAAM,cACNd,UAAWL,KAAKc,mBAChBa,QAAS3B,KAAKa,wBAGtBG,EAAA,OAAKC,MAAM,MACPD,EAAA,gBAAcb,KAAK,KAAKe,QAAQ,OAChCF,EAAA,gBACIC,MAAM,kBACNd,KAAMH,KAAKY,QAAU,GAAK,mBAC1BO,MAAOnB,KAAKY,QAAU,cAAgB,YACtCe,QAAS3B,KAAKW,cAK1BK,EAAA,qLAKAA,EAAA,OAAKC,MAAM,mCACPD,EAAA,OAAKC,MAAM,UACPD,EAAA,gBACIb,KAAK,gBACLe,QAAQ,iCAEZF,EAAA,sBACIG,MAAM,OACNhB,KAAK,OACLF,MAAOD,KAAKI,gBAGpBY,EAAA,OAAKC,MAAM,MACPD,EAAA,gBAAcb,KAAK,KAAKe,QAAQ,wBAChCF,EAAA,sBAAoBG,MAAM,OAAOhB,KAAK,UAE1Ca,EAAA,OAAKC,MAAM,MACPD,EAAA,gBACIb,KAAK,iBACLe,QAAQ,yBAEZF,EAAA,sBACIG,MAAM,OACNhB,KAAK,OACLF,MAAOD,KAAKC,U"}