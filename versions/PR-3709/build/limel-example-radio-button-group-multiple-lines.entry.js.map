{"version":3,"names":["RadioButtonGroupMultipleLinesExample","this","maxLinesOptions","text","value","items","secondaryText","selected","handlePlanChange","event","item","detail","selectedItem","undefined","handleMaxLinesChange","maxLines","componentWillLoad","find","render","h","maxLinesSecondaryText","onChange","style","label","getSelectedMaxLines","options","_a","option","toString"],"sources":["./src/components/radio-button-group/examples/radio-button-group-multiple-lines.tsx"],"sourcesContent":["import {\n    ListItem,\n    LimelRadioButtonGroupCustomEvent,\n    LimelSelectCustomEvent,\n    Option,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * With secondary text for items\n *\n * It is possible to add more descriptive text to each radio button option\n * using the `secondaryText` property.\n *\n * You can also use the `maxLinesSecondaryText` prop to control how many lines of\n * secondary text are displayed before they get truncated.\n * By default, radio buttons will display 3 lines of secondary text.\n */\n@Component({\n    tag: 'limel-example-radio-button-group-multiple-lines',\n    shadow: true,\n})\nexport class RadioButtonGroupMultipleLinesExample {\n    @State()\n    private selectedItem: ListItem<string>;\n\n    @State()\n    private maxLines: number = 2;\n\n    private maxLinesOptions: Option<string>[] = [\n        { text: '1 line', value: '1' },\n        { text: '2 lines', value: '2' },\n        { text: '3 lines', value: '3' },\n        { text: '5 lines', value: '5' },\n    ];\n\n    private items: Array<ListItem<string>> = [\n        {\n            text: 'Basic Plan',\n            secondaryText:\n                'Perfect for individuals and small teams just getting started. Includes basic features, 5GB storage, and email support.',\n            value: 'basic',\n            selected: true,\n        },\n        {\n            text: 'Professional Plan',\n            secondaryText:\n                'Ideal for growing businesses that need more advanced features. Includes everything in Basic plus 100GB storage, priority support, advanced analytics, team collaboration tools, and custom integrations.',\n            value: 'professional',\n        },\n        {\n            text: 'Enterprise Plan',\n            secondaryText:\n                'Designed for large organizations with complex needs. Includes unlimited storage, dedicated account manager, 24/7 phone support, advanced security features, custom branding, API access, and enterprise-grade compliance tools.',\n            value: 'enterprise',\n        },\n    ];\n\n    public componentWillLoad() {\n        this.selectedItem = this.items.find((item) => item.selected);\n    }\n\n    public render() {\n        return [\n            <limel-radio-button-group\n                items={this.items}\n                selectedItem={this.selectedItem}\n                maxLinesSecondaryText={this.maxLines}\n                onChange={this.handlePlanChange}\n            />,\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-select\n                    label=\"Max lines of secondary text\"\n                    value={this.getSelectedMaxLines()}\n                    options={this.maxLinesOptions}\n                    onChange={this.handleMaxLinesChange}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.selectedItem?.value} />,\n        ];\n    }\n\n    private getSelectedMaxLines() {\n        return this.maxLinesOptions.find(\n            (option) => option.value === this.maxLines.toString()\n        );\n    }\n\n    private handlePlanChange = (\n        event: LimelRadioButtonGroupCustomEvent<ListItem<string>>\n    ) => {\n        const item = event.detail;\n        this.selectedItem = item.selected === false ? undefined : item!;\n    };\n\n    private handleMaxLinesChange = (\n        event: LimelSelectCustomEvent<Option<string>>\n    ) => {\n        this.maxLines = +event.detail.value;\n    };\n}\n"],"mappings":"qDAsBaA,EAAoC,M,yBAOrCC,KAAAC,gBAAoC,CACxC,CAAEC,KAAM,SAAUC,MAAO,KACzB,CAAED,KAAM,UAAWC,MAAO,KAC1B,CAAED,KAAM,UAAWC,MAAO,KAC1B,CAAED,KAAM,UAAWC,MAAO,MAGtBH,KAAAI,MAAiC,CACrC,CACIF,KAAM,aACNG,cACI,yHACJF,MAAO,QACPG,SAAU,MAEd,CACIJ,KAAM,oBACNG,cACI,2MACJF,MAAO,gBAEX,CACID,KAAM,kBACNG,cACI,kOACJF,MAAO,eAoCPH,KAAAO,iBACJC,IAEA,MAAMC,EAAOD,EAAME,OACnBV,KAAKW,aAAeF,EAAKH,WAAa,MAAQM,UAAYH,CAAK,EAG3DT,KAAAa,qBACJL,IAEAR,KAAKc,UAAYN,EAAME,OAAOP,KAAK,E,0CAzEZ,C,CA+BpBY,oBACHf,KAAKW,aAAeX,KAAKI,MAAMY,MAAMP,GAASA,EAAKH,U,CAGhDW,S,MACH,MAAO,CACHC,EAAA,4BACId,MAAOJ,KAAKI,MACZO,aAAcX,KAAKW,aACnBQ,sBAAuBnB,KAAKc,SAC5BM,SAAUpB,KAAKO,mBAEnBW,EAAA,0BACIG,MAAO,CAAE,mCAAoC,aAE7CH,EAAA,gBACII,MAAM,8BACNnB,MAAOH,KAAKuB,sBACZC,QAASxB,KAAKC,gBACdmB,SAAUpB,KAAKa,wBAGvBK,EAAA,uBAAqBf,OAAOsB,EAAAzB,KAAKW,gBAAY,MAAAc,SAAA,SAAAA,EAAEtB,Q,CAI/CoB,sBACJ,OAAOvB,KAAKC,gBAAgBe,MACvBU,GAAWA,EAAOvB,QAAUH,KAAKc,SAASa,Y"}