{"version":3,"names":["actionBarSelectedItemCss","ActionBarSelectedItemExample","this","handleSelected","event","stopPropagation","toggleSelection","item","text","detail","Object","assign","selected","console","log","actionBarItems","map","commandText","icon","iconOnly","separator","render","h","class","accessibleLabel","actions","layout","onItemSelected"],"sources":["./src/components/action-bar/examples/action-bar-selected-item.scss?tag=limel-example-action-bar-selected-item&encapsulation=shadow","./src/components/action-bar/examples/action-bar-selected-item.tsx"],"sourcesContent":["@import './application';\n","import { Component, h, State } from '@stencil/core';\nimport { ActionBarItem, ListSeparator } from '@limetech/lime-elements';\n\n/**\n * Selected item\n * For some use cases, one or more items in the action bar could\n * get a `selected` state. This is useful for example when you want to\n * highlight a currently active item in a list of items.\n */\n@Component({\n    tag: 'limel-example-action-bar-selected-item',\n    shadow: true,\n    styleUrl: 'action-bar-selected-item.scss',\n})\nexport class ActionBarSelectedItemExample {\n    @State()\n    private actionBarItems: Array<ActionBarItem | ListSeparator> = [\n        {\n            text: 'Bold',\n            commandText: '⌘ B',\n            icon: '-lime-text-bold',\n            iconOnly: true,\n        },\n        {\n            text: 'Italic',\n            commandText: '⌘ I',\n            icon: '-lime-text-italic',\n            iconOnly: true,\n        },\n        {\n            text: 'Strikethrough',\n            commandText: '⌘ ⇧ X',\n            icon: '-lime-text-strikethrough',\n            iconOnly: true,\n        },\n        { separator: true },\n        {\n            text: 'Bulleted list',\n            icon: '-lime-text-bulleted-list',\n            iconOnly: true,\n        },\n        {\n            text: 'Ordered list',\n            icon: '-lime-text-ordered-list',\n            iconOnly: true,\n        },\n        {\n            text: 'Blockquote',\n            icon: '-lime-text-blockquote',\n            iconOnly: true,\n        },\n    ];\n\n    public render() {\n        return (\n            <div class=\"application is-resizable\">\n                <limel-action-bar\n                    accessibleLabel=\"Toolbar\"\n                    actions={this.actionBarItems}\n                    layout=\"fullWidth\"\n                    onItemSelected={this.handleSelected}\n                />\n            </div>\n        );\n    }\n\n    private handleSelected = (event: CustomEvent<ActionBarItem>) => {\n        event.stopPropagation();\n        const toggleSelection = (item: ActionBarItem) => {\n            if (item.text === event.detail.text) {\n                return {\n                    ...item,\n                    selected: !item.selected,\n                };\n            }\n\n            return item;\n        };\n\n        console.log(event.detail);\n\n        this.actionBarItems = this.actionBarItems.map(toggleSelection);\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA2B,kkB,MCcpBC,EAA4B,M,yBAoD7BC,KAAAC,eAAkBC,IACtBA,EAAMC,kBACN,MAAMC,EAAmBC,IACrB,GAAIA,EAAKC,OAASJ,EAAMK,OAAOD,KAAM,CACjC,OAAAE,OAAAC,OAAAD,OAAAC,OAAA,GACOJ,GAAI,CACPK,UAAWL,EAAKK,U,CAIxB,OAAOL,CAAI,EAGfM,QAAQC,IAAIV,EAAMK,QAElBP,KAAKa,eAAiBb,KAAKa,eAAeC,IAAIV,EAAgB,E,oBAjEH,CAC3D,CACIE,KAAM,OACNS,YAAa,MACbC,KAAM,kBACNC,SAAU,MAEd,CACIX,KAAM,SACNS,YAAa,MACbC,KAAM,oBACNC,SAAU,MAEd,CACIX,KAAM,gBACNS,YAAa,QACbC,KAAM,2BACNC,SAAU,MAEd,CAAEC,UAAW,MACb,CACIZ,KAAM,gBACNU,KAAM,2BACNC,SAAU,MAEd,CACIX,KAAM,eACNU,KAAM,0BACNC,SAAU,MAEd,CACIX,KAAM,aACNU,KAAM,wBACNC,SAAU,M,CAIXE,SACH,OACIC,EAAA,OAAKC,MAAM,4BACPD,EAAA,oBACIE,gBAAgB,UAChBC,QAASvB,KAAKa,eACdW,OAAO,YACPC,eAAgBzB,KAAKC,iB"}