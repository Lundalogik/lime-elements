{"version":3,"names":["root","NumberAbbreviate","units","this","n","arguments","decPlaces","ab","abbreviate","prototype","_abbreviate","number","Math","pow","i","length","size","round","isNegative","abbreviatedNumber","abs","module","exports","value","numAbbr","NumAbbr"],"sources":["./node_modules/number-abbreviate/index.js","./src/components/badge/format.ts"],"sourcesContent":["(function(root){\n  'use strict';\n\n  function NumberAbbreviate() {\n    var units\n    if (!(this instanceof NumberAbbreviate)) {\n      // function usage: abbrev(n, decPlaces, units)\n      var n = arguments[0]\n      var decPlaces = arguments[1]\n      units = arguments[2]\n      var ab = new NumberAbbreviate(units)\n      return ab.abbreviate(n, decPlaces)\n    }\n    // class usage: new NumberAbbreviate(units)\n    units = arguments[0]\n    this.units = units == null ? ['k', 'm', 'b', 't'] : units\n  }\n\n  NumberAbbreviate.prototype._abbreviate = function(number, decPlaces) {\n    decPlaces = Math.pow(10, decPlaces)\n\n    for (var i = this.units.length - 1; i >= 0; i--) {\n\n      var size = Math.pow(10, (i + 1) * 3)\n\n      if (size <= number) {\n        number = Math.round(number * decPlaces / size) / decPlaces\n\n        if ((number === 1000) && (i < this.units.length - 1)) {\n          number = 1\n          i++\n        }\n\n        number += this.units[i]\n\n        break\n      }\n    }\n\n    return number\n  }\n\n  NumberAbbreviate.prototype.abbreviate = function(number, decPlaces) {\n    var isNegative = number < 0\n    var abbreviatedNumber = this._abbreviate(Math.abs(number), decPlaces || 0)\n\n    return isNegative ? '-' + abbreviatedNumber : abbreviatedNumber;\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NumberAbbreviate\n  } else {\n    root.NumberAbbreviate = NumberAbbreviate\n  }\n\n})(this);\n","import NumAbbr from 'number-abbreviate';\n\n/**\n * Abbreviate a number\n *\n * @param value - the number to abbreviate\n * @returns abbreviated number\n */\nexport function abbreviate(value: number): string {\n    if (typeof value !== 'number') {\n        return '';\n    }\n\n    const units = ['k', 'M', 'B', 'T'];\n    const numAbbr = new NumAbbr(units);\n\n    return numAbbr.abbreviate(value, 1);\n}\n"],"mappings":"gFAAA,SAAUA,GAGR,SAASC,IACP,IAAIC,EACJ,KAAMC,gBAAgBF,GAAmB,CAEvC,IAAIG,EAAIC,UAAU,GAClB,IAAIC,EAAYD,UAAU,GAC1BH,EAAQG,UAAU,GAClB,IAAIE,EAAK,IAAIN,EAAiBC,GAC9B,OAAOK,EAAGC,WAAWJ,EAAGE,EAC9B,CAEIJ,EAAQG,UAAU,GAClBF,KAAKD,MAAQA,GAAS,KAAO,CAAC,IAAK,IAAK,IAAK,KAAOA,CACxD,CAEED,EAAiBQ,UAAUC,YAAc,SAASC,EAAQL,GACxDA,EAAYM,KAAKC,IAAI,GAAIP,GAEzB,IAAK,IAAIQ,EAAIX,KAAKD,MAAMa,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAE/C,IAAIE,EAAOJ,KAAKC,IAAI,IAAKC,EAAI,GAAK,GAElC,GAAIE,GAAQL,EAAQ,CAClBA,EAASC,KAAKK,MAAMN,EAASL,EAAYU,GAAQV,EAEjD,GAAKK,IAAW,KAAUG,EAAIX,KAAKD,MAAMa,OAAS,EAAI,CACpDJ,EAAS,EACTG,GACV,CAEQH,GAAUR,KAAKD,MAAMY,GAErB,KACR,CACA,CAEI,OAAOH,CACX,EAEEV,EAAiBQ,UAAUD,WAAa,SAASG,EAAQL,GACvD,IAAIY,EAAaP,EAAS,EAC1B,IAAIQ,EAAoBhB,KAAKO,YAAYE,KAAKQ,IAAIT,GAASL,GAAa,GAExE,OAAOY,EAAa,IAAMC,EAAoBA,CAClD,EAEE,GAAqCE,EAAOC,QAAS,CACnDD,EAAAC,QAAiBrB,CACrB,KAAS,CACLD,EAAKC,iBAAmBA,CAC5B,CAEC,EAvDD,CAuDGE,E,aC/CaK,EAAWe,GACvB,UAAWA,IAAU,SAAU,CAC3B,MAAO,E,CAGX,MAAMrB,EAAQ,CAAC,IAAK,IAAK,IAAK,KAC9B,MAAMsB,EAAU,IAAIC,EAAQvB,GAE5B,OAAOsB,EAAQhB,WAAWe,EAAO,EACrC,Q"}