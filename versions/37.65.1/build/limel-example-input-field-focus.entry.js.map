{"version":3,"names":["InputFieldFocusExample","this","getInputFieldRef","input","inputField","handleChange","event","value","detail","setFocus","stopPropagation","preventDefault","focus","render","h","onClick","label","style","onChange","ref","tabindex"],"sources":["./src/components/input-field/examples/input-field-focus.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * Setting focus programmatically\n *\n * To set focus programmatically, call `.focus()` on the `limel-input-field`\n * element. Note that, for this to work, the `tabindex` property must be set\n * on the `limel-input-field`.\n *\n * - `tabindex=\"0\"` means that the element should be focusable in sequential\n * keyboard navigation, after any positive tabindex values and its order is\n * defined by the document's source order.\n * - A _positive value_ means the element should be focusable in sequential\n * keyboard navigation, with its order defined by the value of the number.\n *\n * Read more on [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex).\n */\n@Component({\n    tag: 'limel-example-input-field-focus',\n    shadow: true,\n})\nexport class InputFieldFocusExample {\n    @State()\n    private value: string;\n\n    private inputField: HTMLLimelInputFieldElement;\n\n    public render() {\n        return [\n            <limel-button\n                onClick={this.setFocus}\n                label={'Set focus'}\n                style={{ 'margin-bottom': '1rem' }}\n            />,\n            <limel-input-field\n                label=\"Set focus on me!\"\n                value={this.value}\n                onChange={this.handleChange}\n                ref={this.getInputFieldRef}\n                tabindex=\"0\"\n            />,\n        ];\n    }\n\n    private getInputFieldRef = (input: HTMLLimelInputFieldElement) => {\n        return (this.inputField = input);\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n\n    private setFocus = (event: MouseEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n        this.inputField.focus();\n    };\n}\n"],"mappings":"qDAqBaA,EAAsB,M,yBAuBvBC,KAAAC,iBAAoBC,GAChBF,KAAKG,WAAaD,EAGtBF,KAAAI,aAAgBC,IACpBL,KAAKM,MAAQD,EAAME,MAAM,EAGrBP,KAAAQ,SAAYH,IAChBA,EAAMI,kBACNJ,EAAMK,iBACNV,KAAKG,WAAWQ,OAAO,E,qBA5BpBC,SACH,MAAO,CACHC,EAAA,gBACIC,QAASd,KAAKQ,SACdO,MAAO,YACPC,MAAO,CAAE,gBAAiB,UAE9BH,EAAA,qBACIE,MAAM,mBACNT,MAAON,KAAKM,MACZW,SAAUjB,KAAKI,aACfc,IAAKlB,KAAKC,iBACVkB,SAAS,M"}