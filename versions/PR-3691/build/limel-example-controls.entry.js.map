{"version":3,"names":["exampleControlsCss","ExampleControls","render","h"],"sources":["./src/examples/example-controls.scss?tag=limel-example-controls&encapsulation=shadow","./src/examples/example-controls.tsx"],"sourcesContent":["/**\n * @prop --example-controls-max-columns-width: Defines maximum width of columns. Defaults to `6rem`.\n * @prop --example-controls-column-layout: Defines how columns take up the available space. By default, it is set to be `auto-fill`, which fills the row with as many columns as it can. But it can also be set it to `auto-fit` stretches the columns to occupy all the available space.\n */\n\n:host(limel-example-controls) {\n    display: grid;\n    grid-template-columns: repeat(\n        var(--example-controls-column-layout, auto-fill),\n        minmax(var(--example-controls-max-columns-width, 6rem), 1fr)\n    );\n    gap: 0.25rem 1rem;\n    align-items: center;\n\n    margin: 1rem 0 0 0;\n    padding: 0.5rem 0.75rem;\n    border: rgb(var(--contrast-600)) 1px dashed;\n    border-radius: 1rem;\n\n    background-color: rgb(var(--contrast-400), 0.6);\n}\n","import { Component, h } from '@stencil/core';\n\n/**\n * This component is only used in our documentations\n * to provide a container for settings of examples.\n *\n * For example, it visually groups and organizes checkboxes\n * used to show different states of components,\n * such as Disabled, Required, Readonly, etcâ€¦\n *\n * @private\n */\n@Component({\n    tag: 'limel-example-controls',\n    shadow: true,\n    styleUrl: 'example-controls.scss',\n})\nexport class ExampleControls {\n    public render() {\n        return <slot />;\n    }\n}\n"],"mappings":"0CAAA,MAAMA,EAAqB,qX,MCiBdC,EAAe,M,yBACjBC,SACH,OAAOC,EAAA,Y"}