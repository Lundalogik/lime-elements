{"version":3,"names":["SliderMultiplierExample","this","factor","minValue","maxValue","step","handleChange","event","value","detail","render","h","label","unit","valuemax","valuemin","onChange"],"sources":["./src/components/slider/examples/slider-multiplier.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * With multiplier and step\n *\n * When step is configured and the initial value is not a multiple of the step\n * value, the slider will round the value to the nearest step when it is changed\n * for the first time. After a valid value has been set, only discrete valid\n * values will be possible to pick.\n */\n@Component({\n    tag: 'limel-example-slider-multiplier',\n    shadow: true,\n})\nexport class SliderMultiplierExample {\n    @State()\n    private value = 0.25;\n\n    private factor = 100;\n    private minValue = 0;\n    private maxValue = 1;\n    private step = 0.1;\n\n    public render() {\n        return (\n            <section>\n                <limel-slider\n                    label=\"Slider with multiplier\"\n                    unit=\"â€Š%\"\n                    value={this.value}\n                    factor={this.factor}\n                    step={this.step}\n                    valuemax={this.maxValue}\n                    valuemin={this.minValue}\n                    onChange={this.handleChange}\n                />\n                <limel-example-value value={this.value} />\n            </section>\n        );\n    }\n\n    private handleChange = (event: CustomEvent<number>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAcaA,EAAuB,M,yBAIxBC,KAAAC,OAAS,IACTD,KAAAE,SAAW,EACXF,KAAAG,SAAW,EACXH,KAAAI,KAAO,GAoBPJ,KAAAK,aAAgBC,IACpBN,KAAKO,MAAQD,EAAME,MAAM,E,WA1Bb,G,CAOTC,SACH,OACIC,EAAA,eACIA,EAAA,gBACIC,MAAM,yBACNC,KAAK,KACLL,MAAOP,KAAKO,MACZN,OAAQD,KAAKC,OACbG,KAAMJ,KAAKI,KACXS,SAAUb,KAAKG,SACfW,SAAUd,KAAKE,SACfa,SAAUf,KAAKK,eAEnBK,EAAA,uBAAqBH,MAAOP,KAAKO,Q"}