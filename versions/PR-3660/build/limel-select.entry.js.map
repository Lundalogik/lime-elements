{"version":3,"names":["strings","ARIA_HIDDEN","ROLE","cssClasses","HELPER_TEXT_VALIDATION_MSG","HELPER_TEXT_VALIDATION_MSG_PERSISTENT","MDCSelectHelperTextFoundation","_super","__extends","adapter","call","this","__assign","defaultAdapter","Object","defineProperty","get","enumerable","configurable","addClass","undefined","removeClass","hasClass","setAttr","getAttr","removeAttr","setContent","prototype","getId","isVisible","content","setValidation","isValidation","setValidationMsgPersistent","isPersistent","setValidity","selectIsValid","isValidationMsg","isPersistentValidationMsg","msgShouldDisplay","showToScreenReader","hide","MDCFoundation","MDCSelectHelperText","apply","arguments","attachTo","root","foundation","getDefaultFoundation","_this","className","classList","add","remove","contains","attr","getAttribute","value","setAttribute","removeAttribute","textContent","MDCComponent","SelectTemplate","props","hasValue","hasEmptyText","isMultiple","length","text","isValid","invalid","checkValid","required","disabled","readonly","helperText","h","class","labelId","label","hasFloatingLabel","floatLabelAbove","SelectValue","assign","HelperText","SelectDropdown","isOpen","anchorClassList","slot","onClick","open","onKeyPress","onTriggerPress","id","getSelectedIcon","getSelectedText","ShowIcon","viewBox","focusable","stroke","points","name","size","trim","native","NativeDropdown","MenuDropdown","items","createMenuItems","options","containerId","visible","inheritParentWidth","containerStyle","dropdownZIndex","onDismiss","close","style","display","width","type","multiple","onChange","onMenuChange","filter","option","map","renderOption","onNativeChange","onFocus","onBlur","selectedOption","key","selected","isSelected","some","o","selectIsRequired","menuOptionFilter","getMenuOptionFilter","separator","secondaryText","getIconName","icon","color","getIconColor","iconColor","isEmptyValue","join","triggerIconColorWarning","console","warn","selectCss","Select","constructor","hostRef","hasChanged","handleMenuChange","bind","handleNativeChange","handleMenuTriggerKeyPress","openMenu","closeMenu","portalId","createRandomString","connectedCallback","initialize","componentWillLoad","isMobileDevice","hasOwn","host","dataset","componentDidLoad","getOptionsExcludingSeparators","element","shadowRoot","querySelector","mdcFloatingLabel","MDCFloatingLabel","mdcSelectHelperText","disconnectedCallback","destroy","componentDidUpdate","menuOpen","setMenuFocus","render","getComputedStyle","getPropertyValue","watchOpen","newValue","oldValue","setTimeout","list","document","firstItem","_a","focus","setTriggerFocus","trigger","event","stopPropagation","detail","selector","menuSurface","_b","scrollPosition","scrollTop","listItems","item","change","emit","requestAnimationFrame","listItem","emitFirstChangeEvent","isEnter","ENTER","isSpace","SPACE","preventDefault","Array","optionElement","find"],"sources":["./node_modules/@material/select/helper-text/constants.js","./node_modules/@material/select/helper-text/foundation.js","./node_modules/@material/select/helper-text/component.js","./src/components/select/select.template.tsx","./src/components/select/select.scss?tag=limel-select&encapsulation=shadow","./src/components/select/select.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ARIA_HIDDEN: 'aria-hidden',\n    ROLE: 'role',\n};\nvar cssClasses = {\n    HELPER_TEXT_VALIDATION_MSG: 'mdc-select-helper-text--validation-msg',\n    HELPER_TEXT_VALIDATION_MSG_PERSISTENT: 'mdc-select-helper-text--validation-msg-persistent',\n};\nexport { strings, cssClasses };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCSelectHelperTextFoundation = /** @class */ (function (_super) {\n    __extends(MDCSelectHelperTextFoundation, _super);\n    function MDCSelectHelperTextFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCSelectHelperTextFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCSelectHelperTextFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelectHelperTextFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSelectHelperTextFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCSelectHelperTextAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setAttr: function () { return undefined; },\n                getAttr: function () { return null; },\n                removeAttr: function () { return undefined; },\n                setContent: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @return The ID of the helper text, or null if none is set.\n     */\n    MDCSelectHelperTextFoundation.prototype.getId = function () {\n        return this.adapter.getAttr('id');\n    };\n    /**\n     * @return Whether the helper text is currently visible.\n     */\n    MDCSelectHelperTextFoundation.prototype.isVisible = function () {\n        return this.adapter.getAttr(strings.ARIA_HIDDEN) !== 'true';\n    };\n    /**\n     * Sets the content of the helper text field.\n     */\n    MDCSelectHelperTextFoundation.prototype.setContent = function (content) {\n        this.adapter.setContent(content);\n    };\n    /**\n     * Sets the helper text to act as a validation message.\n     * By default, validation messages are hidden when the select is valid and\n     * visible when the select is invalid.\n     *\n     * @param isValidation True to make the helper text act as an error validation\n     *     message.\n     */\n    MDCSelectHelperTextFoundation.prototype.setValidation = function (isValidation) {\n        if (isValidation) {\n            this.adapter.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        }\n    };\n    /**\n     * Sets the persistency of the validation helper text.\n     * This keeps the validation message visible even if the select is valid,\n     * though it will be displayed in the normal (grey) color.\n     */\n    MDCSelectHelperTextFoundation.prototype.setValidationMsgPersistent = function (isPersistent) {\n        if (isPersistent) {\n            this.adapter.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG_PERSISTENT);\n        }\n        else {\n            this.adapter.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG_PERSISTENT);\n        }\n    };\n    /**\n     * When acting as a validation message, shows/hides the helper text and\n     * triggers alerts as necessary based on the select's validity.\n     */\n    MDCSelectHelperTextFoundation.prototype.setValidity = function (selectIsValid) {\n        var isValidationMsg = this.adapter.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n        if (!isValidationMsg) {\n            // Non-validating helper-text is always displayed and does not participate\n            // in validation logic.\n            return;\n        }\n        var isPersistentValidationMsg = this.adapter.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG_PERSISTENT);\n        // Validating helper text is displayed if select is invalid, unless it is\n        // set as persistent, in which case it always displays.\n        var msgShouldDisplay = !selectIsValid || isPersistentValidationMsg;\n        if (msgShouldDisplay) {\n            this.showToScreenReader();\n            // In addition to displaying, also trigger an alert if the select\n            // has become invalid.\n            if (!selectIsValid) {\n                this.adapter.setAttr(strings.ROLE, 'alert');\n            }\n            else {\n                this.adapter.removeAttr(strings.ROLE);\n            }\n            return;\n        }\n        // Hide everything.\n        this.adapter.removeAttr(strings.ROLE);\n        this.hide();\n    };\n    /**\n     * Makes the helper text visible to screen readers.\n     */\n    MDCSelectHelperTextFoundation.prototype.showToScreenReader = function () {\n        this.adapter.removeAttr(strings.ARIA_HIDDEN);\n    };\n    /**\n     * Hides the help text from screen readers.\n     */\n    MDCSelectHelperTextFoundation.prototype.hide = function () {\n        this.adapter.setAttr(strings.ARIA_HIDDEN, 'true');\n    };\n    return MDCSelectHelperTextFoundation;\n}(MDCFoundation));\nexport { MDCSelectHelperTextFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSelectHelperTextFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCSelectHelperTextFoundation } from './foundation';\nvar MDCSelectHelperText = /** @class */ (function (_super) {\n    __extends(MDCSelectHelperText, _super);\n    function MDCSelectHelperText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSelectHelperText.attachTo = function (root) {\n        return new MDCSelectHelperText(root);\n    };\n    Object.defineProperty(MDCSelectHelperText.prototype, \"foundationForSelect\", {\n        // Provided for access by MDCSelect component\n        get: function () {\n            return this.foundation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCSelectHelperText.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            getAttr: function (attr) { return _this.root.getAttribute(attr); },\n            setAttr: function (attr, value) { return _this.root.setAttribute(attr, value); },\n            removeAttr: function (attr) { return _this.root.removeAttribute(attr); },\n            setContent: function (content) {\n                _this.root.textContent = content;\n            },\n        };\n        // tslint:enable:object-literal-sort-keys\n        return new MDCSelectHelperTextFoundation(adapter);\n    };\n    return MDCSelectHelperText;\n}(MDCComponent));\nexport { MDCSelectHelperText };\n//# sourceMappingURL=component.js.map","import { ListItem, ListSeparator } from '../list/list-item.types';\nimport { Option } from '../select/option.types';\nimport { FunctionalComponent, h } from '@stencil/core';\nimport { isMultiple } from '../../util/multiple';\nimport { getIconColor, getIconName } from '../icon/get-icon-props';\ninterface SelectTemplateProps {\n    disabled?: boolean;\n    readonly?: boolean;\n    required?: boolean;\n    invalid?: boolean;\n    options: Array<Option | ListSeparator>;\n    value: Option | Option[];\n    label?: string;\n    helperText?: string;\n    multiple?: boolean;\n    native: boolean;\n\n    onNativeChange: (event: Event) => void;\n\n    id: string;\n    onMenuChange: (event: CustomEvent<ListItem | ListItem[]>) => void;\n    onTriggerPress: (event: KeyboardEvent) => void;\n    isOpen: boolean;\n    open: () => void;\n    close: () => void;\n    checkValid: boolean;\n\n    dropdownZIndex: string;\n}\n\nexport const SelectTemplate: FunctionalComponent<SelectTemplateProps> = (\n    props\n) => {\n    const value = props.value;\n    let hasValue = !!props.value;\n    let hasEmptyText = true;\n    if (isMultiple(value)) {\n        hasValue = value.length > 0;\n    } else if (hasValue) {\n        hasValue = !!value.value;\n        hasEmptyText = value.text === '';\n    }\n\n    let isValid = !props.invalid;\n    if (props.checkValid && props.required && !hasValue) {\n        isValid = false;\n    }\n\n    const classList = {\n        'limel-select': true,\n        'mdc-select': true,\n        'mdc-select--disabled': props.disabled,\n        'limel-select--readonly': props.readonly,\n        'limel-select--invalid': !isValid,\n        'limel-select--with-helper-text': typeof props.helperText === 'string',\n    };\n\n    return [\n        <limel-notched-outline\n            class={classList}\n            labelId=\"s-label\"\n            label={props.label}\n            required={props.required}\n            invalid={!isValid}\n            disabled={props.disabled}\n            readonly={props.readonly}\n            hasValue={hasValue}\n            hasFloatingLabel={floatLabelAbove(props)}\n        >\n            <SelectValue\n                {...props}\n                hasValue={hasValue}\n                isValid={isValid}\n                hasEmptyText={hasEmptyText}\n            />\n        </limel-notched-outline>,\n        <HelperText text={props.helperText} isValid={!props.invalid} />,\n        <SelectDropdown {...props} />,\n    ];\n};\n\nconst floatLabelAbove = (props: SelectTemplateProps) => {\n    if (props.isOpen) {\n        return true;\n    }\n\n    const value = props.value;\n    if (value) {\n        if (isMultiple(value)) {\n            return value.length > 0;\n        } else {\n            return value.text !== '';\n        }\n    }\n\n    return false;\n};\n\nconst SelectValue: FunctionalComponent<\n    SelectTemplateProps & {\n        hasValue: boolean;\n        isValid: boolean;\n        hasEmptyText: boolean;\n    }\n> = (props) => {\n    const anchorClassList = {\n        'mdc-select__anchor': true,\n        'limel-select-trigger': true,\n        'limel-select--focused': props.isOpen,\n    };\n\n    return (\n        <button\n            slot=\"content\"\n            class={anchorClassList}\n            onClick={props.open}\n            onKeyPress={props.onTriggerPress}\n            aria-haspopup=\"listbox\"\n            aria-expanded={props.isOpen}\n            aria-controls={props.id}\n            aria-labelledby=\"s-label s-selected-text\"\n            aria-required={props.required}\n            disabled={props.disabled || props.readonly}\n        >\n            <span class=\"mdc-select__selected-text-container limel-select__selected-option\">\n                {getSelectedIcon(props.value)}\n                <span\n                    id=\"s-selected-text\"\n                    class=\"mdc-select__selected-text limel-select__selected-option__text\"\n                >\n                    {getSelectedText(props.value)}\n                </span>\n            </span>\n            <ShowIcon {...props} isValid={props.isValid} />\n            <span class=\"mdc-select__dropdown-icon\">\n                <svg\n                    class=\"mdc-select__dropdown-icon-graphic\"\n                    viewBox=\"7 10 10 5\"\n                    focusable=\"false\"\n                >\n                    <polygon\n                        stroke=\"none\"\n                        fill-rule=\"evenodd\"\n                        points=\"7 10 12 15 17 10\"\n                    ></polygon>\n                </svg>\n            </span>\n        </button>\n    );\n};\n\nconst ShowIcon: FunctionalComponent<\n    SelectTemplateProps & {\n        isValid: boolean;\n    }\n> = (props) => {\n    if (props.isValid) {\n        return;\n    }\n\n    return (\n        <limel-icon name=\"high_importance\" size=\"medium\" class=\"invalid-icon\" />\n    );\n};\n\nconst HelperText: FunctionalComponent<{ text: string; isValid: boolean }> = (\n    props\n) => {\n    if (typeof props.text !== 'string') {\n        return;\n    }\n\n    return (\n        <limel-helper-line\n            helperText={props.text.trim()}\n            invalid={!props.isValid}\n        />\n    );\n};\n\nconst SelectDropdown: FunctionalComponent<SelectTemplateProps> = (props) => {\n    if (props.native) {\n        return <NativeDropdown {...props} />;\n    }\n\n    return <MenuDropdown {...props} />;\n};\n\nconst MenuDropdown: FunctionalComponent<SelectTemplateProps> = (props) => {\n    const items = createMenuItems(props.options, props.value, props.required);\n\n    return (\n        <limel-portal\n            containerId={props.id}\n            visible={props.isOpen}\n            inheritParentWidth={true}\n            containerStyle={{ 'z-index': props.dropdownZIndex }}\n        >\n            <limel-menu-surface\n                open={props.isOpen}\n                onDismiss={props.close}\n                style={{\n                    '--menu-surface-width': '100%',\n                    'max-height': 'inherit',\n                    display: 'flex',\n                    'min-width': '100%',\n                    width: 'fit-content',\n                }}\n            >\n                <limel-list\n                    items={items}\n                    type={props.multiple ? 'checkbox' : 'selectable'}\n                    onChange={props.onMenuChange}\n                />\n            </limel-menu-surface>\n        </limel-portal>\n    );\n};\n\nconst NativeDropdown: FunctionalComponent<SelectTemplateProps> = (props) => {\n    const options = props.options\n        .filter((option): option is Option => !('separator' in option))\n        .map(renderOption(props.value));\n\n    return (\n        <select\n            required={props.required}\n            aria-disabled={props.disabled}\n            aria-required={props.required}\n            onChange={props.onNativeChange}\n            onFocus={props.open}\n            onBlur={props.close}\n            class=\"limel-select__native-control\"\n            disabled={props.disabled}\n            multiple={props.multiple}\n        >\n            {options}\n        </select>\n    );\n};\n\nconst renderOption = (selectedOption: Option | Option[]) => {\n    return (option: Option) => {\n        const { value, disabled, text } = option;\n\n        return (\n            <option\n                key={value}\n                value={value}\n                selected={isSelected(option, selectedOption)}\n                disabled={disabled}\n            >\n                {text}\n            </option>\n        );\n    };\n};\n\nfunction isSelected(option: Option, value: Option | Option[]): boolean {\n    if (!value) {\n        return false;\n    }\n\n    if (isMultiple(value)) {\n        return value.some((o) => option.value === o.value);\n    }\n\n    return option.value === value.value;\n}\n\nfunction createMenuItems(\n    options: Array<Option | ListSeparator>,\n    value: Option | Option[],\n    selectIsRequired = false\n): Array<ListItem<Option> | ListSeparator> {\n    const menuOptionFilter = getMenuOptionFilter(selectIsRequired);\n\n    return options.filter(menuOptionFilter).map((option) => {\n        if ('separator' in option) {\n            return {\n                text: option.text,\n                separator: true,\n            };\n        }\n\n        const selected = isSelected(option, value);\n        const { text, secondaryText, disabled } = option;\n        const name = getIconName(option.icon);\n\n        const color = getIconColor(option.icon, option.iconColor);\n\n        if (!name) {\n            return {\n                text: text,\n                secondaryText: secondaryText,\n                selected: selected,\n                disabled: disabled,\n                value: option,\n            };\n        }\n\n        return {\n            text: text,\n            secondaryText: secondaryText,\n            selected: selected,\n            disabled: disabled,\n            value: option,\n            icon: {\n                name: name,\n                color: color,\n            },\n        };\n    });\n}\n\nfunction getMenuOptionFilter(selectIsRequired: boolean) {\n    return (option: Option | ListSeparator) => {\n        if (!selectIsRequired) {\n            // If the select component is NOT required, we keep all options.\n            return true;\n        }\n\n        if (option.text) {\n            // If the select component IS required, we keep only options\n            // that are not \"empty\". We only check the text property, because\n            // some systems use an \"empty option\" that will have a value for\n            // the `value` property, to signify \"no option selected\". Such\n            // an option should be treated as \"empty\".\n            return true;\n        }\n\n        if ('separator' in option) {\n            return true;\n        }\n    };\n}\n\nfunction getSelectedText(value: Option | Option[]): string {\n    const isEmptyValue = !value || (isMultiple(value) && value.length === 0);\n    if (isEmptyValue) {\n        return '';\n    }\n\n    if (isMultiple(value)) {\n        return value.map((option) => option.text).join(', ');\n    }\n\n    return value.text;\n}\n\nfunction getSelectedIcon(value: any) {\n    if (!value?.icon) {\n        return '';\n    }\n\n    const name = getIconName(value.icon);\n    const color = getIconColor(value.icon, value.iconColor);\n    const style: any = {};\n    if (color) {\n        style.color = color;\n    }\n\n    return (\n        <limel-icon\n            class=\"limel-select__selected-option__icon\"\n            name={name}\n            size=\"medium\"\n            style={style}\n        />\n    );\n}\n\n/**\n *\n * @param options\n */\nexport function triggerIconColorWarning(options: Option[]) {\n    for (const option of options) {\n        if (option.iconColor) {\n            console.warn(\n                \"The `iconColor` prop is deprecated now! Use the new `Icon` interface and instead of `iconColor: 'color-name'` write `icon {name: 'icon-name', color: 'color-name'}`.\"\n            );\n        }\n    }\n}\n","@use '../../style/functions';\n@use '../../style/internal/shared_input-select-picker';\n@use '../../style/mixins';\n\n@use '@material/select/styles';\n\n// Note! The `--dropdown-z-index` property is used from `select.tsx`.\n/**\n * @prop --dropdown-z-index: z-index of the dropdown menu.\n */\n\n$border-radius: 0.375rem;\n\n:host(limel-select) {\n    --limel-notched-outline-border-radius: #{$border-radius};\n    display: block;\n    position: relative;\n}\n\n:host([hidden]) {\n    display: none;\n}\n\nlimel-notched-outline:not([invalid]:not([invalid='false'])) {\n    .limel-notched-outline--outlines {\n        --limel-notched-outline-border-color: transparent;\n    }\n}\n\n.mdc-select__anchor,\n.mdc-select__selected-text {\n    // As long as this component is depended on MDC,\n    // we need to force it to be font-agnostic.\n    // When MDC-dependency is removed, this block can also be removed.\n    // However, on removal of MDC-dependency, we should also make sure to check\n    // other font-related styles that might be set by MDC,\n    // such as `letter-spacing` or `font-size`.\n    font-family: inherit;\n    font-size: var(--limel-theme-default-font-size);\n}\n\n.mdc-select__dropdown-icon-graphic {\n    transition: transform 0.2s ease;\n}\n\n.limel-select__selected-option {\n    display: flex;\n    align-items: center;\n\n    box-sizing: border-box;\n    outline: none;\n\n    align-self: center;\n    min-width: 0; // makes it truncate and prevents the select to grow wider than its container\n    padding: 0 0.25rem 0 1rem;\n}\n\n.limel-select__selected-option__icon {\n    margin-right: functions.pxToRem(8);\n    margin-left: functions.pxToRem(-8);\n    flex-shrink: 0;\n}\n\n.limel-select__selected-option__text {\n    .mdc-select:not(.mdc-select--disabled) & {\n        color: shared_input-select-picker.$input-text-color;\n    }\n\n    .mdc-select.mdc-select--disabled & {\n        color: shared_input-select-picker.$input-text-color-disabled;\n    }\n\n    @include mixins.truncate-text;\n}\n\n.limel-select {\n    flex-wrap: wrap;\n    width: 100%;\n\n    .mdc-select__anchor {\n        height: functions.pxToRem(36);\n        padding-left: functions.pxToRem(0);\n    }\n    .limel-select-trigger {\n        border: none;\n        height: shared_input-select-picker.$height-of-mdc-text-field;\n        display: inline-flex;\n        align-items: center;\n\n        border-radius: $border-radius;\n    }\n\n    .limel-select-trigger,\n    .limel-select__selected-option {\n        width: 100%;\n    }\n\n    .mdc-select__dropdown-icon {\n        margin-right: 0.25rem;\n        margin-left: 0.25rem;\n    }\n\n    &.mdc-select--disabled:not(.limel-select--readonly) {\n        .limel-select-trigger {\n            @include shared_input-select-picker.looks-disabled;\n            box-shadow: var(--button-shadow-normal);\n        }\n        .mdc-select__dropdown-icon {\n            svg {\n                fill: rgb(var(--contrast-800));\n            }\n        }\n    }\n\n    &:not(.mdc-select--disabled) {\n        .mdc-select__dropdown-icon {\n            svg {\n                fill: rgb(var(--contrast-1000));\n            }\n        }\n\n        .limel-select-trigger {\n            @include mixins.is-elevated-clickable;\n            @include mixins.visualize-keyboard-focus;\n\n            &.limel-select--focused {\n                background-color: shared_input-select-picker.$background-color-focused;\n\n                .mdc-select__dropdown-icon {\n                    svg {\n                        fill: var(\n                            --lime-primary-color,\n                            var(--limel-theme-primary-color)\n                        );\n                    }\n                }\n\n                .mdc-select__dropdown-icon-graphic {\n                    transform: rotate(-180deg);\n                }\n            }\n\n            &[aria-expanded]:not([aria-expanded='false']),\n            &[aria-expanded='true'] {\n                box-shadow: var(--button-shadow-inset-pressed);\n            }\n        }\n    }\n\n    &.limel-select--invalid {\n        .limel-select__selected-option__text,\n        .invalid-icon {\n            color: var(--limel-theme-error-text-color);\n        }\n    }\n}\n\n.invalid-icon {\n    flex-shrink: 0;\n}\n\nselect.limel-select__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    border: 0;\n}\n\n@import './partial-styles/_readonly';\n@import './partial-styles/_helper-text';\n","import { ListItem, ListSeparator } from '../list/list-item.types';\nimport { Option } from '../select/option.types';\nimport { MDCFloatingLabel } from '@material/floating-label';\nimport { MDCSelectHelperText } from '@material/select/helper-text';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { isMobileDevice } from '../../util/device';\nimport { ENTER, SPACE } from '../../util/keycodes';\nimport { isMultiple } from '../../util/multiple';\nimport { createRandomString } from '../../util/random-string';\nimport { SelectTemplate, triggerIconColorWarning } from './select.template';\n\n/**\n * @exampleComponent limel-example-select\n * @exampleComponent limel-example-select-with-icons\n * @exampleComponent limel-example-select-with-separators\n * @exampleComponent limel-example-select-with-secondary-text\n * @exampleComponent limel-example-select-multiple\n * @exampleComponent limel-example-select-with-empty-option\n * @exampleComponent limel-example-select-preselected\n * @exampleComponent limel-example-select-change-options\n * @exampleComponent limel-example-select-dialog\n */\n@Component({\n    tag: 'limel-select',\n    shadow: true,\n    styleUrl: 'select.scss',\n})\nexport class Select {\n    /**\n     * Set to `true` to make the field disabled.\n     * and visually shows that the `select` component is editable but disabled.\n     * This tells the users that if certain requirements are met,\n     * the component may become interactable.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Set to `true` to make the field read-only.\n     * This visualizes the component slightly differently.\n     * But shows no visual sign indicating that the component is disabled\n     * or can ever become interactable.\n     */\n    @Prop({ reflect: true })\n    public readonly = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the select is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid: boolean;\n\n    /**\n     * True if the control requires a value.\n     */\n    @Prop({ reflect: true })\n    public required = false;\n\n    /**\n     * Text to display next to the select.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Optional helper text to display below the input field when it has focus.\n     */\n    @Prop({ reflect: true })\n    public helperText: string;\n\n    /**\n     * Currently selected value or values.\n     * If `multiple` is `true`, this must be an array. Otherwise it must be a\n     * single value.\n     */\n    @Prop()\n    public value: Option | Option[];\n\n    /**\n     * List of options.\n     */\n    @Prop()\n    public options: Array<Option | ListSeparator> = [];\n\n    /**\n     * Set to `true` to allow multiple values to be selected.\n     */\n    @Prop()\n    public multiple: boolean = false;\n\n    /**\n     * Emitted when the value is changed.\n     */\n    @Event()\n    private change: EventEmitter<Option | Option[]>;\n\n    @Element()\n    private host: HTMLLimelSelectElement;\n\n    @State()\n    private menuOpen: boolean = false;\n\n    private hasChanged: boolean = false;\n    private checkValid: boolean = false;\n    private mdcSelectHelperText: MDCSelectHelperText;\n    private mdcFloatingLabel: MDCFloatingLabel;\n    private isMobileDevice: boolean;\n    private portalId: string;\n\n    constructor() {\n        this.handleMenuChange = this.handleMenuChange.bind(this);\n        this.handleNativeChange = this.handleNativeChange.bind(this);\n        this.handleMenuTriggerKeyPress =\n            this.handleMenuTriggerKeyPress.bind(this);\n        this.openMenu = this.openMenu.bind(this);\n        this.closeMenu = this.closeMenu.bind(this);\n\n        this.portalId = createRandomString();\n    }\n\n    public connectedCallback() {\n        this.initialize();\n    }\n\n    public componentWillLoad() {\n        this.isMobileDevice = isMobileDevice();\n\n        // It should not be possible to render the native select for consumers, but we still want to make it testable.\n        // We can set this attribute in tests to force rendering of the native select\n        if (Object.hasOwn(this.host.dataset, 'native')) {\n            this.isMobileDevice = true;\n        }\n    }\n\n    public componentDidLoad() {\n        this.initialize();\n        triggerIconColorWarning(this.getOptionsExcludingSeparators());\n    }\n\n    private initialize() {\n        let element: HTMLElement;\n        element = this.host.shadowRoot.querySelector('.mdc-floating-label');\n        if (!element) {\n            return;\n        }\n\n        this.mdcFloatingLabel = new MDCFloatingLabel(element);\n\n        element = this.host.shadowRoot.querySelector('.mdc-select-helper-text');\n        if (element) {\n            this.mdcSelectHelperText = new MDCSelectHelperText(element);\n        }\n    }\n\n    public disconnectedCallback() {\n        if (this.mdcFloatingLabel) {\n            this.mdcFloatingLabel.destroy();\n        }\n\n        if (this.mdcSelectHelperText) {\n            this.mdcSelectHelperText.destroy();\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.menuOpen) {\n            this.setMenuFocus();\n        }\n    }\n\n    public render() {\n        const dropdownZIndex = getComputedStyle(this.host).getPropertyValue(\n            '--dropdown-z-index'\n        );\n\n        return (\n            <SelectTemplate\n                id={this.portalId}\n                disabled={this.disabled || this.readonly}\n                readonly={this.readonly}\n                required={this.required}\n                invalid={this.invalid}\n                label={this.label}\n                helperText={this.helperText}\n                value={this.value}\n                options={this.options}\n                onMenuChange={this.handleMenuChange}\n                onNativeChange={this.handleNativeChange}\n                onTriggerPress={this.handleMenuTriggerKeyPress}\n                multiple={this.multiple}\n                isOpen={this.menuOpen}\n                open={this.openMenu}\n                close={this.closeMenu}\n                checkValid={this.checkValid}\n                native={this.isMobileDevice}\n                dropdownZIndex={dropdownZIndex}\n            />\n        );\n    }\n\n    @Watch('menuOpen')\n    protected watchOpen(newValue: boolean, oldValue: boolean) {\n        if (this.checkValid) {\n            return;\n        }\n\n        // Menu was closed for the first time\n        if (!newValue && oldValue) {\n            this.checkValid = true;\n        }\n    }\n\n    private setMenuFocus() {\n        if (this.isMobileDevice) {\n            return;\n        }\n\n        setTimeout(() => {\n            const list: HTMLElement = document.querySelector(\n                `#${this.portalId} limel-menu-surface limel-list`\n            );\n            const firstItem: HTMLElement =\n                list?.shadowRoot?.querySelector('[tabindex]');\n\n            if (firstItem) {\n                firstItem.focus();\n            }\n        });\n    }\n\n    private setTriggerFocus() {\n        const trigger: HTMLElement = this.host.shadowRoot.querySelector(\n            '.limel-select-trigger'\n        );\n        trigger.focus();\n    }\n\n    private handleMenuChange(\n        event: CustomEvent<Array<ListItem<Option>> | ListItem<Option>>\n    ) {\n        event.stopPropagation();\n\n        if (isMultiple(event.detail)) {\n            const selector = `#${this.portalId} limel-menu-surface`;\n            const menuSurface = document\n                .querySelector(selector)\n                ?.shadowRoot?.querySelector('.mdc-menu-surface');\n            const scrollPosition = menuSurface?.scrollTop || 0;\n\n            const listItems: ListItem[] = event.detail;\n            const options: Option[] = listItems.map((item) => item.value);\n            this.change.emit(options);\n\n            // Using a single requestAnimationFrame or setTimeout doesn't\n            // work. Using two nested `requestAnimationFrame` worked most of\n            // the time, but not always. Using `setTimeout` inside the\n            // `requestAnimationFrame` seems to work consistently. /Ads\n            requestAnimationFrame(() => {\n                setTimeout(() => {\n                    menuSurface.scrollTop = scrollPosition;\n                });\n            });\n\n            return;\n        }\n\n        if (!event.detail.selected) {\n            return;\n        }\n\n        const listItem: ListItem = event.detail;\n        const option: Option = listItem.value;\n        if (option.disabled) {\n            return;\n        }\n\n        this.change.emit(option);\n        this.menuOpen = false;\n        this.setTriggerFocus();\n    }\n\n    private openMenu() {\n        if (this.emitFirstChangeEvent()) {\n            this.hasChanged = true;\n            this.change.emit(this.getOptionsExcludingSeparators()[0]);\n        }\n\n        this.menuOpen = true;\n    }\n\n    private emitFirstChangeEvent() {\n        return !this.hasChanged && this.isMobileDevice && !this.value;\n    }\n\n    private closeMenu() {\n        this.menuOpen = false;\n        this.setTriggerFocus();\n    }\n\n    private handleMenuTriggerKeyPress(event: KeyboardEvent) {\n        const isEnter = event.key === ENTER;\n        const isSpace = event.key === SPACE;\n\n        if (!this.menuOpen && (isSpace || isEnter)) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.menuOpen = true;\n        }\n    }\n\n    private handleNativeChange(event: Event) {\n        event.stopPropagation();\n\n        const element: HTMLSelectElement = this.host.shadowRoot.querySelector(\n            'select.limel-select__native-control'\n        );\n        const options = Array.apply(null, element.options) // eslint-disable-line prefer-spread\n            .filter((optionElement: HTMLOptionElement) => {\n                return !!optionElement.selected;\n            })\n            .map((optionElement: HTMLOptionElement) => {\n                return this.getOptionsExcludingSeparators().find(\n                    (o) => o.value === optionElement.value\n                );\n            });\n\n        if (this.multiple) {\n            this.change.emit(options);\n\n            return;\n        }\n\n        this.change.emit(options[0]);\n        this.menuOpen = false;\n    }\n\n    private getOptionsExcludingSeparators(): Option[] {\n        return this.options.filter(\n            (option): option is Option => !('separator' in option)\n        );\n    }\n}\n"],"mappings":"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"}