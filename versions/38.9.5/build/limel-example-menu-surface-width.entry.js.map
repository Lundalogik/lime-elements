{"version":3,"names":["menuSurfaceWidthCss","MenuSurfaceWidthExample","constructor","hostRef","this","items","text","availableSurfaceWidths","handleNewSelection","event","selectedSurfaceWidth","detail","value","buttonLabel","find","v","render","h","class","surfaceWidth","_a","slot","label","_b","options","onChange"],"sources":["./src/components/menu/examples/menu-surface-width.scss?tag=limel-example-menu-surface-width&encapsulation=shadow","./src/components/menu/examples/menu-surface-width.tsx"],"sourcesContent":[":host(limel-example-menu-surface-width) {\n    box-sizing: border-box;\n    display: flex;\n    justify-content: space-between;\n    gap: 1rem;\n}\n\n.is-resizable {\n    position: relative;\n    resize: horizontal;\n    overflow: auto;\n    width: clamp(10rem, 30rem, 100%);\n\n    padding: 0.5rem 0.5rem 3rem 0.5rem;\n    border: 1px solid rgb(var(--contrast-500));\n\n    &::after {\n        content: 'Resize me â¤µ';\n        font-size: 0.75rem;\n        position: absolute;\n        right: 0.25rem;\n        bottom: 0.25rem;\n    }\n}\n\nlimel-menu {\n    width: 100%;\n}\n\n.highlight-limel-menu {\n    box-sizing: border-box;\n    border: 1px dashed rgb(var(--color-orange-light));\n}\n","import {\n    MenuItem,\n    ListSeparator,\n    SurfaceWidth,\n    Option,\n    LimelSelectCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, State, h } from '@stencil/core';\n\ninterface SurfaceWidthOption extends Option<SurfaceWidth> {\n    buttonLabel: string;\n}\n\n/**\n * Size of the menu drop-down surface\n *\n * Any element in the UI can be configured to open a menu.\n * By default, the dropdown that opens up after the menu trigger is clicked\n * inherits its width from the items that are inside the dropdown menu.\n *\n * However, for some designs, you may want the width of the menu dropdown\n * to be exactly as wide as the width of its trigger element, or\n * as wide as `limel-menu` element itself. This is easily achieved using the\n * `surfaceWidth` prop. Read more on `SurfaceWidth`.\n *\n * :::tip\n * In this example, `limel-menu` is highlighted with a dashed border,\n * to make it easier to see its width.\n * :::\n * :::note\n * The `--menu-surface-width` Overrides the width defined by `surfaceWidth`!\n * :::\n */\n@Component({\n    tag: 'limel-example-menu-surface-width',\n    styleUrl: 'menu-surface-width.scss',\n    shadow: true,\n})\nexport class MenuSurfaceWidthExample {\n    private items: Array<MenuItem | ListSeparator> = [\n        {\n            text: 'Small text',\n        },\n        {\n            text: 'Very very wide text',\n        },\n    ];\n\n    private availableSurfaceWidths: SurfaceWidthOption[] = [];\n\n    @State()\n    private selectedSurfaceWidth: SurfaceWidthOption;\n\n    constructor() {\n        this.availableSurfaceWidths = [\n            {\n                text: 'inherit-from-items',\n                value: 'inherit-from-items',\n                buttonLabel: 'Width based on menu items (default)',\n            },\n            {\n                text: 'inherit-from-menu',\n                value: 'inherit-from-menu',\n                buttonLabel: 'Width based on limel-menu',\n            },\n            {\n                text: 'inherit-from-trigger',\n                value: 'inherit-from-trigger',\n                buttonLabel: 'Width based on trigger element',\n            },\n        ] as SurfaceWidthOption[];\n\n        this.selectedSurfaceWidth = this.availableSurfaceWidths.find(\n            (v) => v.value === 'inherit-from-items',\n        );\n    }\n\n    public render() {\n        return [\n            <div class=\"is-resizable\">\n                <limel-menu\n                    class=\"highlight-limel-menu\"\n                    items={this.items}\n                    surfaceWidth={this.selectedSurfaceWidth?.value}\n                >\n                    <limel-button\n                        slot=\"trigger\"\n                        label={this.selectedSurfaceWidth?.buttonLabel}\n                    />\n                </limel-menu>\n            </div>,\n            <limel-select\n                class=\"is-narrow\"\n                label=\"surfaceWidth\"\n                options={this.availableSurfaceWidths}\n                value={this.selectedSurfaceWidth}\n                onChange={this.handleNewSelection}\n            />,\n        ];\n    }\n\n    private handleNewSelection = (\n        event: LimelSelectCustomEvent<SurfaceWidthOption>,\n    ) => {\n        this.selectedSurfaceWidth = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAsB,ihB,MCsCfC,EAAuB,MAehCC,YAAAC,G,UAdQC,KAAAC,MAAyC,CAC7C,CACIC,KAAM,cAEV,CACIA,KAAM,wBAINF,KAAAG,uBAA+C,GAqD/CH,KAAAI,mBACJC,IAEAL,KAAKM,qBAAuBD,EAAME,MAAM,E,oCAlDxCP,KAAKG,uBAAyB,CAC1B,CACID,KAAM,qBACNM,MAAO,qBACPC,YAAa,uCAEjB,CACIP,KAAM,oBACNM,MAAO,oBACPC,YAAa,6BAEjB,CACIP,KAAM,uBACNM,MAAO,uBACPC,YAAa,mCAIrBT,KAAKM,qBAAuBN,KAAKG,uBAAuBO,MACnDC,GAAMA,EAAEH,QAAU,sB,CAIpBI,S,QACH,MAAO,CACHC,EAAA,OAAKC,MAAM,gBACPD,EAAA,cACIC,MAAM,uBACNb,MAAOD,KAAKC,MACZc,cAAcC,EAAAhB,KAAKM,wBAAoB,MAAAU,SAAA,SAAAA,EAAER,OAEzCK,EAAA,gBACII,KAAK,UACLC,OAAOC,EAAAnB,KAAKM,wBAAoB,MAAAa,SAAA,SAAAA,EAAEV,gBAI9CI,EAAA,gBACIC,MAAM,YACNI,MAAM,eACNE,QAASpB,KAAKG,uBACdK,MAAOR,KAAKM,qBACZe,SAAUrB,KAAKI,qB"}