{"version":3,"names":["SpinnerExample","this","renderBranded","event","stopPropagation","limeBranded","detail","render","h","size","style","checked","label","onChange"],"sources":["./src/components/spinner/examples/spinner.tsx"],"sourcesContent":["import { Component, State, h } from '@stencil/core';\n/**\n * With a generic design or branded for Lime Technologies\n * The `limel-spinner` makes the boring waiting times slightly more cheerful by\n * cycling through nine delightful colors.\n *\n * By default, the spinner is rendered as a circle.\n * However, it is possible to set `limeBranded={true}`,\n * which renders the spinner's shape as Lime Technologies' logo.\n */\n@Component({\n    tag: 'limel-example-spinner',\n    shadow: true,\n})\nexport class SpinnerExample {\n    @State()\n    private limeBranded = true;\n\n    public render() {\n        return [\n            <limel-spinner size=\"medium\" limeBranded={this.limeBranded} />,\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-checkbox\n                    checked={this.limeBranded}\n                    label=\"Lime branded\"\n                    onChange={this.renderBranded}\n                />\n            </limel-example-controls>,\n        ];\n    }\n    private renderBranded = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.limeBranded = event.detail;\n    };\n}\n"],"mappings":"qDAcaA,EAAc,M,yBAkBfC,KAAAC,cAAiBC,IACrBA,EAAMC,kBACNH,KAAKI,YAAcF,EAAMG,MAAM,E,iBAlBb,I,CAEfC,SACH,MAAO,CACHC,EAAA,iBAAeC,KAAK,SAASJ,YAAaJ,KAAKI,cAC/CG,EAAA,0BACIE,MAAO,CAAE,mCAAoC,aAE7CF,EAAA,kBACIG,QAASV,KAAKI,YACdO,MAAM,eACNC,SAAUZ,KAAKC,iB"}