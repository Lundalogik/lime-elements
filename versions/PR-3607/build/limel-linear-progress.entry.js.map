{"version":3,"names":["linearProgressCss","PERCENT","LinearProgress","render","this","isFinite","value","loadingText","translate","get","language","ariaLabel","ariaValueNow","indeterminate","undefined","ariaValueText","h","Host","role","accessibleLabel","style","class","watchValue","newValue","updateProgress","host","setProperty","Number"],"sources":["./src/components/linear-progress/linear-progress.scss?tag=limel-linear-progress&encapsulation=shadow","./src/components/linear-progress/linear-progress.tsx"],"sourcesContent":["@use '../../style/internal/lime-theme';\n\n/**\n * @prop --background-color: Color to use for progress-bar track.\n */\n\n:host(limel-linear-progress) {\n    isolation: isolate;\n    position: relative;\n    overflow: hidden;\n\n    display: flex;\n    width: 100%;\n    height: 0.25rem;\n    border-radius: 0.25rem;\n\n    background-color: var(--background-color, rgb(var(--contrast-800), 0.5));\n}\n\n.progress {\n    height: 100%;\n    width: var(--percentage, 0%);\n\n    border-radius: 0.25rem;\n    background-color: var(--mdc-theme-primary);\n}\n\n:host(limel-linear-progress[indeterminate]) {\n    .progress {\n        background-color: transparent;\n        width: 100%;\n\n        &:before,\n        &:after {\n            will-change: left, right, opacity;\n            content: '';\n            position: absolute;\n            inset: 0;\n            height: 100%;\n            border-radius: 0.25rem;\n            opacity: 0;\n            background-color: var(--mdc-theme-primary);\n        }\n\n        &:before {\n            animation: indeterminate 2.1s\n                cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n        }\n\n        &:after {\n            animation: indeterminate-short 2.1s\n                cubic-bezier(0.165, 0.84, 0.44, 1) infinite 1.15s;\n        }\n    }\n}\n\n@keyframes indeterminate {\n    0% {\n        left: -35%;\n        right: 100%;\n        opacity: 0;\n    }\n    10%,\n    80% {\n        opacity: 1;\n    }\n    60% {\n        left: 100%;\n        right: -90%;\n    }\n    100% {\n        left: 100%;\n        right: -90%;\n        opacity: 0;\n    }\n}\n\n@keyframes indeterminate-short {\n    0% {\n        left: -200%;\n        right: 100%;\n        opacity: 0;\n    }\n    10%,\n    80% {\n        opacity: 1;\n    }\n    60% {\n        left: 107%;\n        right: -8%;\n    }\n    100% {\n        left: 107%;\n        right: -8%;\n        opacity: 0;\n    }\n}\n","import { Component, Element, h, Host, Prop, Watch } from '@stencil/core';\nimport { Languages } from '../date-picker/date.types';\nimport translate from '../../global/translations';\n\nconst PERCENT = 100;\n\n/**\n * The linear progress component can be used to visualize the current state of a progress in a scale;\n * for example percentage of completion of a task.\n *\n * @exampleComponent limel-example-linear-progress\n * @exampleComponent limel-example-linear-progress-indeterminate\n * @exampleComponent limel-example-linear-progress-accessible-label\n * @exampleComponent limel-example-linear-progress-color\n */\n@Component({\n    tag: 'limel-linear-progress',\n    shadow: true,\n    styleUrl: 'linear-progress.scss',\n})\nexport class LinearProgress {\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components.\n     */\n    @Prop({ reflect: true })\n    public language: Languages = 'en';\n\n    /**\n     * The value of the progress bar. Should be between `0` and `1`.\n     */\n    @Prop({ reflect: true })\n    public value: number = 0;\n\n    /**\n     * Puts the progress bar in an indeterminate state\n     */\n    @Prop({ reflect: true })\n    public indeterminate: boolean = false;\n\n    /**\n     * A label used to describe the purpose of the element to users\n     * of assistive technologies, like screen readers.\n     * If not provided, the generic word of \"Progress bar\" will be used.\n     */\n    @Prop({ reflect: true })\n    public accessibleLabel?: string;\n\n    @Element()\n    private host: HTMLLimelLinearProgressElement;\n\n    public render() {\n        if (!this.isFinite(this.value)) {\n            return;\n        }\n\n        const loadingText = translate.get('loading', this.language);\n        const ariaLabel = translate.get('progress-bar', this.language);\n        const ariaValueNow = this.indeterminate ? undefined : this.value;\n        const ariaValueText = this.indeterminate ? loadingText : undefined;\n\n        return (\n            <Host\n                role=\"progressbar\"\n                aria-label={this.accessibleLabel || ariaLabel}\n                aria-live=\"polite\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"1\"\n                aria-valuenow={ariaValueNow}\n                aria-valuetext={ariaValueText}\n                style={{ '--percentage': `${this.value * PERCENT}%` }}\n            >\n                <div class=\"progress\" />\n            </Host>\n        );\n    }\n\n    @Watch('value')\n    protected watchValue(newValue: number) {\n        if (!this.isFinite(newValue)) {\n            return;\n        }\n\n        this.updateProgress(newValue);\n    }\n\n    private updateProgress(value: number): void {\n        if (this.host) {\n            this.host.style.setProperty('--percentage', `${value * PERCENT}%`);\n        }\n    }\n\n    private isFinite(value: unknown) {\n        return Number.isFinite(value);\n    }\n}\n"],"mappings":"uGAAA,MAAMA,EAAoB,o4ECI1B,MAAMC,EAAU,I,MAgBHC,EAAc,M,uCAMM,K,WAMN,E,mBAMS,M,+BAazBC,SACH,IAAKC,KAAKC,SAASD,KAAKE,OAAQ,CAC5B,M,CAGJ,MAAMC,EAAcC,EAAUC,IAAI,UAAWL,KAAKM,UAClD,MAAMC,EAAYH,EAAUC,IAAI,eAAgBL,KAAKM,UACrD,MAAME,EAAeR,KAAKS,cAAgBC,UAAYV,KAAKE,MAC3D,MAAMS,EAAgBX,KAAKS,cAAgBN,EAAcO,UAEzD,OACIE,EAACC,EAAI,CACDC,KAAK,cAAa,aACNd,KAAKe,iBAAmBR,EAAS,YACnC,SAAQ,gBACJ,IAAG,gBACH,IAAG,gBACFC,EAAY,iBACXG,EAChBK,MAAO,CAAE,eAAgB,GAAGhB,KAAKE,MAAQL,OAEzCe,EAAA,OAAKK,MAAM,a,CAMbC,WAAWC,GACjB,IAAKnB,KAAKC,SAASkB,GAAW,CAC1B,M,CAGJnB,KAAKoB,eAAeD,E,CAGhBC,eAAelB,GACnB,GAAIF,KAAKqB,KAAM,CACXrB,KAAKqB,KAAKL,MAAMM,YAAY,eAAgB,GAAGpB,EAAQL,K,EAIvDI,SAASC,GACb,OAAOqB,OAAOtB,SAASC,E"}