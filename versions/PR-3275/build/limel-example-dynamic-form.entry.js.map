{"version":3,"names":["dynamicFormCss","DynamicFormExample","constructor","hostRef","this","handleFormChange","event","formData","detail","handleTextChange","text","target","value","json","JSON","parse","schema","e","console","log","handleValidate","errors","title","$id","description","type","required","properties","default","minLength","done","stringify","render","h","onChange","onValidate","label"],"sources":["./src/components/form/examples/dynamic-form.scss?tag=limel-example-dynamic-form&encapsulation=shadow","./src/components/form/examples/dynamic-form.tsx"],"sourcesContent":["textarea {\n    width: 100%;\n    min-height: 300px;\n}\n","import { Component, h, State } from '@stencil/core';\nimport { FormSchema, ValidationStatus } from '@limetech/lime-elements';\n\n/**\n * Dynamic schema\n */\n@Component({\n    tag: 'limel-example-dynamic-form',\n    shadow: true,\n    styleUrl: 'dynamic-form.scss',\n})\nexport class DynamicFormExample {\n    @State()\n    private formData: object = {\n        title: 'Test',\n    };\n    @State()\n    private errors = null;\n\n    @State()\n    private schema: FormSchema = {\n        $id: 'test',\n        title: 'My form',\n        description: 'Lorem ipsum dolor sit amet',\n        type: 'object',\n        required: ['title'],\n        properties: {\n            title: {\n                type: 'string',\n                title: 'Title',\n                default: 'A new task',\n                description: 'Lorem ipsum dolor sit amet',\n                minLength: 5,\n            },\n            done: { type: 'boolean', title: 'Done?', default: false },\n        },\n    };\n\n    @State()\n    private text: string;\n\n    constructor() {\n        this.text = JSON.stringify(this.schema, null, '    ');\n    }\n\n    public render() {\n        return [\n            <textarea onChange={this.handleTextChange}>{this.text}</textarea>,\n            <br />,\n            <limel-form\n                onChange={this.handleFormChange}\n                onValidate={this.handleValidate}\n                value={this.formData}\n                schema={this.schema}\n            />,\n            <limel-example-value value={this.formData} />,\n            <limel-example-value label=\"Errors\" value={this.errors} />,\n        ];\n    }\n\n    private handleFormChange = (event: CustomEvent) => {\n        this.formData = event.detail;\n    };\n\n    private handleTextChange = (event) => {\n        this.text = event.target.value;\n        try {\n            const json = JSON.parse(event.target.value);\n            if (json) {\n                this.schema = json;\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    private handleValidate = (event: CustomEvent<ValidationStatus>) => {\n        this.errors = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAiB,wC,MCWVC,EAAkB,MA8B3BC,YAAAC,G,UAmBQC,KAAAC,iBAAoBC,IACxBF,KAAKG,SAAWD,EAAME,MAAM,EAGxBJ,KAAAK,iBAAoBH,IACxBF,KAAKM,KAAOJ,EAAMK,OAAOC,MACzB,IACI,MAAMC,EAAOC,KAAKC,MAAMT,EAAMK,OAAOC,OACrC,GAAIC,EAAM,CACNT,KAAKY,OAASH,C,EAEpB,MAAOI,GACLC,QAAQC,IAAIF,E,GAIZb,KAAAgB,eAAkBd,IACtBF,KAAKiB,OAASf,EAAME,MAAM,E,cAhEH,CACvBc,MAAO,Q,YAGM,K,YAGY,CACzBC,IAAK,OACLD,MAAO,UACPE,YAAa,6BACbC,KAAM,SACNC,SAAU,CAAC,SACXC,WAAY,CACRL,MAAO,CACHG,KAAM,SACNH,MAAO,QACPM,QAAS,aACTJ,YAAa,6BACbK,UAAW,GAEfC,KAAM,CAAEL,KAAM,UAAWH,MAAO,QAASM,QAAS,S,oBAQtDxB,KAAKM,KAAOI,KAAKiB,UAAU3B,KAAKY,OAAQ,KAAM,O,CAG3CgB,SACH,MAAO,CACHC,EAAA,YAAUC,SAAU9B,KAAKK,kBAAmBL,KAAKM,MACjDuB,EAAA,WACAA,EAAA,cACIC,SAAU9B,KAAKC,iBACf8B,WAAY/B,KAAKgB,eACjBR,MAAOR,KAAKG,SACZS,OAAQZ,KAAKY,SAEjBiB,EAAA,uBAAqBrB,MAAOR,KAAKG,WACjC0B,EAAA,uBAAqBG,MAAM,SAASxB,MAAOR,KAAKiB,S"}