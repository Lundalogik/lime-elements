{"version":3,"names":["IconButtonIconExample","this","toggleFavorite","isFavorite","render","h","elevated","label","getLabel","icon","getIcon","onClick","defaultIcon","toggledIcon","name","color"],"sources":["./src/components/icon-button/examples/icon-button-icon.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * Styling\n * Using the `Icon` interface, you can easily customize the\n * appearance of icons within the button, tweaking its `color`,\n * `backgroundColor`, or adding an accessible `title` to it.\n */\n@Component({\n    tag: 'limel-example-icon-button-icon',\n    shadow: true,\n})\nexport class IconButtonIconExample {\n    @State()\n    private isFavorite = false;\n\n    public render() {\n        return (\n            <limel-icon-button\n                elevated={true}\n                label={this.getLabel()}\n                icon={this.getIcon()}\n                onClick={this.toggleFavorite}\n            />\n        );\n    }\n\n    private getLabel() {\n        return this.isFavorite ? 'Remove Favorite' : 'Add Favorite';\n    }\n\n    private getIcon() {\n        const defaultIcon = 'heart_outlined';\n        const toggledIcon = {\n            name: 'heart_filled',\n            color: 'rgb(var(--color-red-default))',\n        };\n        return this.isFavorite ? toggledIcon : defaultIcon;\n    }\n\n    private toggleFavorite = () => {\n        this.isFavorite = !this.isFavorite;\n    };\n}\n"],"mappings":"qDAYaA,EAAqB,M,yBA4BtBC,KAAAC,eAAiB,KACrBD,KAAKE,YAAcF,KAAKE,UAAU,E,gBA3BjB,K,CAEdC,SACH,OACIC,EAAA,qBACIC,SAAU,KACVC,MAAON,KAAKO,WACZC,KAAMR,KAAKS,UACXC,QAASV,KAAKC,gB,CAKlBM,WACJ,OAAOP,KAAKE,WAAa,kBAAoB,c,CAGzCO,UACJ,MAAME,EAAc,iBACpB,MAAMC,EAAc,CAChBC,KAAM,eACNC,MAAO,iCAEX,OAAOd,KAAKE,WAAaU,EAAcD,C"}