{"version":3,"names":["markdownCompositeCss","MarkdownRenderContentExample","this","handleMarkdownChange","event","markdown","detail","handleTaskListChange","render","h","label","type","value","onChange","onTaskListChange"],"sources":["./src/components/markdown/examples/markdown-composite.scss?tag=limel-example-markdown-composite&encapsulation=shadow","./src/components/markdown/examples/markdown-composite.tsx"],"sourcesContent":[":host(limel-example-markdown-composite) {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n    * {\n        min-width: 0;\n    }\n\n    limel-input-field {\n        height: 10rem;\n    }\n\n    fieldset {\n        padding-block: 1rem;\n        padding-inline: 1rem;\n        margin-inline: 0;\n        border: 0.125rem dashed rgb(var(--contrast-700));\n\n        legend {\n            color: rgb(var(--contrast-1000));\n            text-align: center;\n        }\n    }\n}\n","import {\n    LimelInputFieldCustomEvent,\n    LimelMarkdownCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, State, h } from '@stencil/core';\n\n/**\n * Composite example\n * Test your markdown code and see what you get in return in real-time.\n */\n@Component({\n    tag: 'limel-example-markdown-composite',\n    styleUrl: 'markdown-composite.scss',\n    shadow: true,\n})\nexport class MarkdownRenderContentExample {\n    @State()\n    private markdown = `# Hello, world!\n\nThis is **markdown**!\n\n- [x] test\n- [x] test\n\n## Task Lists\n\n- [ ] This is an unchecked task\n- [x] This is a completed task\n  - [ ] Nested unchecked task\n  - [x] Nested completed task\n- [ ] Another unchecked task`;\n\n    public render() {\n        return (\n            <div>\n                <limel-input-field\n                    label=\"Markdown to render\"\n                    type=\"textarea\"\n                    value={this.markdown}\n                    onChange={this.handleMarkdownChange}\n                />\n                <fieldset>\n                    <legend>Rendered markdown</legend>\n                    <limel-markdown\n                        value={this.markdown}\n                        onTaskListChange={this.handleTaskListChange}\n                    />\n                </fieldset>\n            </div>\n        );\n    }\n\n    private handleMarkdownChange = (\n        event: LimelInputFieldCustomEvent<string>\n    ) => {\n        this.markdown = event.detail;\n    };\n\n    private handleTaskListChange = (\n        event: LimelMarkdownCustomEvent<string>\n    ) => {\n        this.markdown = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAuB,sd,MCehBC,EAA4B,M,yBAqC7BC,KAAAC,qBACJC,IAEAF,KAAKG,SAAWD,EAAME,MAAM,EAGxBJ,KAAAK,qBACJH,IAEAF,KAAKG,SAAWD,EAAME,MAAM,E,cA5Cb,oP,CAeZE,SACH,OACIC,EAAA,WACIA,EAAA,qBACIC,MAAM,qBACNC,KAAK,WACLC,MAAOV,KAAKG,SACZQ,SAAUX,KAAKC,uBAEnBM,EAAA,gBACIA,EAAA,mCACAA,EAAA,kBACIG,MAAOV,KAAKG,SACZS,iBAAkBZ,KAAKK,wB"}