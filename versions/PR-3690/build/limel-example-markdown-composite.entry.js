import{r as e,h as t}from"./index-2714248e.js";const n=":host(limel-example-markdown-composite){display:flex;flex-direction:column;gap:1rem}:host(limel-example-markdown-composite) *{min-width:0}:host(limel-example-markdown-composite) limel-input-field{height:10rem}:host(limel-example-markdown-composite) fieldset{padding-block:1rem;padding-inline:1rem;margin-inline:0;border:0.125rem dashed rgb(var(--contrast-700))}:host(limel-example-markdown-composite) fieldset legend{color:rgb(var(--contrast-1000));text-align:center}";const i=class{constructor(t){e(this,t);this.handleMarkdownChange=e=>{this.markdown=e.detail};this.handleTaskListChange=e=>{this.markdown=e.detail};this.markdown=`# Hello, world!\n\nThis is **markdown**!\n\n- [x] test\n- [x] test\n\n## Task Lists\n\n- [ ] This is an unchecked task\n- [x] This is a completed task\n  - [ ] Nested unchecked task\n  - [x] Nested completed task\n- [ ] Another unchecked task`}render(){return t("div",null,t("limel-input-field",{label:"Markdown to render",type:"textarea",value:this.markdown,onChange:this.handleMarkdownChange}),t("fieldset",null,t("legend",null,"Rendered markdown"),t("limel-markdown",{value:this.markdown,onTaskListChange:this.handleTaskListChange})))}};i.style=n;export{i as limel_example_markdown_composite};
//# sourceMappingURL=limel-example-markdown-composite.entry.js.map