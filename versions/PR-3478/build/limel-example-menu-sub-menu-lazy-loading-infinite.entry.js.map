{"version":3,"names":["NETWORK_DELAY","MenuSubMenuLazyLoadingInfiniteExample","this","items","handleLoadSubItems","async","item","Promise","resolve","setTimeout","subItems","i","push","text","handleSelect","event","lastSelectedItem","detail","componentWillLoad","render","h","onSelect","label","slot","value"],"sources":["./src/components/menu/examples/menu-sub-menu-lazy-loading-infinite.tsx"],"sourcesContent":["import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, State, h } from '@stencil/core';\n\nconst NETWORK_DELAY = 1000;\n\n/**\n * Lazy loading infinite amount of sub-menu\n *\n * :::note\n * This example is here to show what the component looks like when you have a\n * lot of nested sub-menus, and what the breadcrumb component looks like when\n * you are deep into the menu.\n *\n * If you are looking for code examples, please see the\n * _Lazy loading items in sub-menus_ example instead.\n * :::\n */\n@Component({\n    tag: 'limel-example-menu-sub-menu-lazy-loading-infinite',\n    shadow: true,\n})\nexport class MenuSubMenuLazyLoadingInfiniteExample {\n    private items: Array<MenuItem | ListSeparator> = [];\n\n    @State()\n    private lastSelectedItem: string;\n\n    public componentWillLoad() {\n        this.items = [\n            {\n                text: 'Item 1',\n                items: this.handleLoadSubItems,\n            },\n            {\n                text: 'Item 2',\n                items: this.handleLoadSubItems,\n            },\n            {\n                text: 'Item 3',\n                items: this.handleLoadSubItems,\n            },\n            {\n                text: 'Item 4',\n                items: this.handleLoadSubItems,\n            },\n            {\n                text: 'Item 5',\n                items: this.handleLoadSubItems,\n            },\n        ];\n    }\n\n    public render() {\n        return [\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-button label=\"Menu\" slot=\"trigger\" />\n            </limel-menu>,\n            <limel-example-value\n                label=\"Last selected item\"\n                value={this.lastSelectedItem}\n            />,\n        ];\n    }\n\n    private handleLoadSubItems = async (\n        item: MenuItem\n    ): Promise<MenuItem[]> => {\n        return new Promise<MenuItem[]>((resolve) => {\n            // Simulate some network delay\n            setTimeout(() => {\n                const subItems = [];\n                for (let i = 1; i < 6; i++) {\n                    subItems.push({\n                        text: `${item.text}.${i}`,\n                        items: this.handleLoadSubItems,\n                    });\n                }\n\n                resolve(subItems);\n            }, NETWORK_DELAY);\n        });\n    };\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.lastSelectedItem = event.detail.text;\n    };\n}\n"],"mappings":"+CAOA,MAAMA,EAAgB,I,MAkBTC,EAAqC,M,yBACtCC,KAAAC,MAAyC,GA0CzCD,KAAAE,mBAAqBC,MACzBC,GAEO,IAAIC,SAAqBC,IAE5BC,YAAW,KACP,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxBD,EAASE,KAAK,CACVC,KAAM,GAAGP,EAAKO,QAAQF,IACtBR,MAAOD,KAAKE,oB,CAIpBI,EAAQE,EAAS,GAClBV,EAAc,IAIjBE,KAAAY,aAAgBC,IACpBb,KAAKc,iBAAmBD,EAAME,OAAOJ,IAAI,E,gCAzDtCK,oBACHhB,KAAKC,MAAQ,CACT,CACIU,KAAM,SACNV,MAAOD,KAAKE,oBAEhB,CACIS,KAAM,SACNV,MAAOD,KAAKE,oBAEhB,CACIS,KAAM,SACNV,MAAOD,KAAKE,oBAEhB,CACIS,KAAM,SACNV,MAAOD,KAAKE,oBAEhB,CACIS,KAAM,SACNV,MAAOD,KAAKE,oB,CAKjBe,SACH,MAAO,CACHC,EAAA,cAAYjB,MAAOD,KAAKC,MAAOkB,SAAUnB,KAAKY,cAC1CM,EAAA,gBAAcE,MAAM,OAAOC,KAAK,aAEpCH,EAAA,uBACIE,MAAM,qBACNE,MAAOtB,KAAKc,mB"}