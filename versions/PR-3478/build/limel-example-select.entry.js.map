{"version":3,"names":["SelectExample","this","options","text","value","disabled","changeHandler","event","detail","setDisabled","stopPropagation","setReadonly","readonly","setRequired","required","setInvalid","invalid","render","h","label","helperText","onChange","checked"],"sources":["./src/components/select/examples/select.tsx"],"sourcesContent":["import { Option } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n@Component({\n    shadow: true,\n    tag: 'limel-example-select',\n})\nexport class SelectExample {\n    @State()\n    public value: Option;\n\n    @State()\n    public disabled = false;\n\n    @State()\n    public readonly = false;\n\n    @State()\n    public required = false;\n\n    @State()\n    public invalid = false;\n\n    private options: Option[] = [\n        { text: 'Luke Skywalker', value: 'luke' },\n        { text: 'Han Solo', value: 'han', disabled: true },\n        { text: 'Leia Organo', value: 'leia' },\n    ];\n\n    public render() {\n        return [\n            <limel-select\n                label=\"Favorite hero\"\n                helperText=\"May the force be with him or her\"\n                value={this.value}\n                options={this.options}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                required={this.required}\n                invalid={this.invalid}\n                onChange={this.changeHandler}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    private changeHandler = (event) => {\n        this.value = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n}\n"],"mappings":"qDAOaA,EAAa,M,yBAgBdC,KAAAC,QAAoB,CACxB,CAAEC,KAAM,iBAAkBC,MAAO,QACjC,CAAED,KAAM,WAAYC,MAAO,MAAOC,SAAU,MAC5C,CAAEF,KAAM,cAAeC,MAAO,SA0C1BH,KAAAK,cAAiBC,IACrBN,KAAKG,MAAQG,EAAMC,MAAM,EAGrBP,KAAAQ,YAAeF,IACnBA,EAAMG,kBACNT,KAAKI,SAAWE,EAAMC,MAAM,EAGxBP,KAAAU,YAAeJ,IACnBA,EAAMG,kBACNT,KAAKW,SAAWL,EAAMC,MAAM,EAGxBP,KAAAY,YAAeN,IACnBA,EAAMG,kBACNT,KAAKa,SAAWP,EAAMC,MAAM,EAGxBP,KAAAc,WAAcR,IAClBA,EAAMG,kBACNT,KAAKe,QAAUT,EAAMC,MAAM,E,mCA7Eb,M,cAGA,M,cAGA,M,aAGD,K,CAQVS,SACH,MAAO,CACHC,EAAA,gBACIC,MAAM,gBACNC,WAAW,mCACXhB,MAAOH,KAAKG,MACZF,QAASD,KAAKC,QACdG,SAAUJ,KAAKI,SACfO,SAAUX,KAAKW,SACfE,SAAUb,KAAKa,SACfE,QAASf,KAAKe,QACdK,SAAUpB,KAAKK,gBAEnBY,EAAA,8BACIA,EAAA,kBACII,QAASrB,KAAKI,SACdc,MAAM,WACNE,SAAUpB,KAAKQ,cAEnBS,EAAA,kBACII,QAASrB,KAAKW,SACdO,MAAM,WACNE,SAAUpB,KAAKU,cAEnBO,EAAA,kBACII,QAASrB,KAAKa,SACdK,MAAM,WACNE,SAAUpB,KAAKY,cAEnBK,EAAA,kBACII,QAASrB,KAAKe,QACdG,MAAM,UACNE,SAAUpB,KAAKc,cAGvBG,EAAA,uBAAqBd,MAAOH,KAAKG,Q"}