{"version":3,"names":["tabPanelCss","TabPanelExample","this","handleChangeTab","event","tabs","map","tab","id","detail","text","icon","name","color","active","render","h","onChangeTab"],"sources":["./src/components/tab-panel/examples/tab-panel.scss?tag=limel-example-tab-panel&encapsulation=shadow","./src/components/tab-panel/examples/tab-panel.tsx"],"sourcesContent":["limel-tab-panel {\n    height: 20rem;\n}\n\nlimel-example-tab-panel-content {\n    display: flex;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n}\n","import { Component, h, State } from '@stencil/core';\nimport { Tab } from '@limetech/lime-elements';\n\n/**\n * This example illustrates how to add custom components inside the `limel-tab-panel`.\n *\n * Each component will simulate loading the data it needs once the tab has been\n * activated and then display the actual content. If the button is pressed, the\n * component will emit the `changeTab` event to change the badge inside the\n * corresponding tab.\n *\n * @sourceFile tab-panel-content.tsx\n * @sourceFile tab-panel-content.scss\n */\n@Component({\n    tag: 'limel-example-tab-panel',\n    shadow: true,\n    styleUrl: 'tab-panel.scss',\n})\nexport class TabPanelExample {\n    @State()\n    private tabs: Tab[] = [\n        {\n            id: 'joker',\n            text: 'Joker',\n            icon: {\n                name: 'joker',\n                color: 'var(--lime-green)',\n            },\n            active: true,\n        },\n        {\n            id: 'parasite',\n            text: 'Parasite',\n            icon: {\n                name: 'insect',\n                color: 'var(--lime-magenta)',\n            },\n        },\n        {\n            id: 'harriet',\n            text: 'Harriet',\n            icon: {\n                name: 'administrator_female',\n                color: 'var(--lime-orange)',\n            },\n        },\n    ];\n\n    public render() {\n        return [\n            <limel-tab-panel\n                tabs={this.tabs}\n                onChangeTab={this.handleChangeTab}\n            >\n                <limel-example-tab-panel-content id=\"joker\" />\n                <limel-example-tab-panel-content id=\"parasite\" />\n                <limel-example-tab-panel-content id=\"harriet\" />\n            </limel-tab-panel>,\n        ];\n    }\n\n    private handleChangeTab = (event: CustomEvent<Tab>) => {\n        this.tabs = this.tabs.map((tab) => {\n            if (tab.id === event.detail.id) {\n                return event.detail;\n            }\n\n            return tab;\n        });\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAc,mI,MCmBPC,EAAe,M,yBA2ChBC,KAAAC,gBAAmBC,IACvBF,KAAKG,KAAOH,KAAKG,KAAKC,KAAKC,IACvB,GAAIA,EAAIC,KAAOJ,EAAMK,OAAOD,GAAI,CAC5B,OAAOJ,EAAMK,M,CAGjB,OAAOF,CAAG,GACZ,E,UAhDgB,CAClB,CACIC,GAAI,QACJE,KAAM,QACNC,KAAM,CACFC,KAAM,QACNC,MAAO,qBAEXC,OAAQ,MAEZ,CACIN,GAAI,WACJE,KAAM,WACNC,KAAM,CACFC,KAAM,SACNC,MAAO,wBAGf,CACIL,GAAI,UACJE,KAAM,UACNC,KAAM,CACFC,KAAM,uBACNC,MAAO,uB,CAKZE,SACH,MAAO,CACHC,EAAA,mBACIX,KAAMH,KAAKG,KACXY,YAAaf,KAAKC,iBAElBa,EAAA,mCAAiCR,GAAG,UACpCQ,EAAA,mCAAiCR,GAAG,aACpCQ,EAAA,mCAAiCR,GAAG,a"}