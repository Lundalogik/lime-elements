{"version":3,"names":["spinnerCss","Spinner","render","h","viewBox","xmlns","this","renderSpinner","limeBranded","class","cx","cy","r","id","d"],"sources":["./src/components/spinner/spinner.scss?tag=limel-spinner&encapsulation=shadow","./src/components/spinner/spinner.tsx"],"sourcesContent":["@use 'sass:math';\n@use '../../style/functions';\n@use '../../style/internal/lime-theme';\n\n/**\n * @prop --spinner-color-1: 1st animated stroke color, defaults to `--lime-brand-color-lime-green`.\n * @prop --spinner-color-2: 2nd animated stroke color, defaults to `--lime-brand-color-ocean-teal`.\n * @prop --spinner-color-3: 3rd animated stroke color, defaults to `--lime-brand-color-aqua`.\n * @prop --spinner-color-4: 4th animated stroke color, defaults to `--lime-brand-color-bubble-gum`.\n * @prop --spinner-color-5: 5th animated stroke color, defaults to `--lime-brand-color-sunny-orange`.\n * @prop --spinner-color-6: 6th animated stroke color, defaults to `--lime-brand-color-lime-green`.\n * @prop --spinner-color-7: 7th animated stroke color, defaults to `--lime-brand-color-ocean-teal`.\n * @prop --spinner-color-8: 8th animated stroke color, defaults to `--lime-brand-color-aqua`.\n * @prop --spinner-color-9: 9th animated stroke color, defaults to `--lime-brand-color-bubble-gum`.\n * @prop --spinner-color-10: 10th animated stroke color, defaults to `--lime-brand-color-sunny-orange`.\n */\n\n$stroke-width-normal: 4;\n$stroke-width-thick: 10;\n$colors: var(--spinner-color-1, rgb(var(--lime-brand-color-lime-green))),\n    var(--spinner-color-2, rgb(var(--lime-brand-color-ocean-teal))),\n    var(--spinner-color-3, rgb(var(--lime-brand-color-aqua))),\n    var(--spinner-color-4, rgb(var(--lime-brand-color-bubble-gum))),\n    var(--spinner-color-5, rgb(var(--lime-brand-color-sunny-orange))),\n    var(--spinner-color-6, rgb(var(--lime-brand-color-lime-green))),\n    var(--spinner-color-7, rgb(var(--lime-brand-color-ocean-teal))),\n    var(--spinner-color-8, rgb(var(--lime-brand-color-aqua))),\n    var(--spinner-color-9, rgb(var(--lime-brand-color-bubble-gum))),\n    var(--spinner-color-10, rgb(var(--contrast-700)));\n$dash: 63;\n$duration: length($colors) * 1s;\n$duration-alt: math.div($duration, length($colors));\n$keyframe: math.div(1, length($colors) * 2) * 100;\n\n:host(limel-spinner) {\n    display: block;\n}\n\n@keyframes spin {\n    50% {\n        transform: rotate(180deg);\n    }\n    100% {\n        transform: rotate(720deg);\n    }\n}\n\n@keyframes fade-in-the-spinner {\n    0% {\n        transform: scale(0.7);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n@keyframes animate-colored-circles {\n    #{$keyframe * 1%} {\n        stroke-dashoffset: 0;\n    }\n    #{$keyframe * 2%},\n    100% {\n        stroke-dashoffset: $dash;\n    }\n}\n\n:host([hidden]) {\n    display: none;\n}\n\n:host {\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    // size=mini is the default\n    height: functions.pxToRem(24);\n    width: functions.pxToRem(24);\n    transform: translate3d(0, 0, 0);\n    animation: fade-in-the-spinner 0.5s ease forwards;\n}\n\n:host([size='x-small']) {\n    height: functions.pxToRem(32);\n    width: functions.pxToRem(32);\n}\n\n:host([size='small']) {\n    height: functions.pxToRem(34);\n    width: functions.pxToRem(34);\n}\n\n:host([size='medium']) {\n    height: functions.pxToRem(44);\n    width: functions.pxToRem(44);\n}\n\n:host([size='large']) {\n    height: functions.pxToRem(64);\n    width: functions.pxToRem(64);\n}\n\n.spinner {\n    animation: spin $duration-alt linear infinite;\n    transform-origin: center;\n}\n\n.color {\n    animation: animate-colored-circles $duration linear infinite;\n    fill: none;\n    stroke-dasharray: $dash;\n    stroke-dashoffset: $dash;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n\n    @for $i from 1 through length($colors) {\n        &:nth-child(#{$i}) {\n            stroke: nth($colors, $i);\n\n            @if $i > 1 {\n                animation-delay: ($i - 1) * $duration-alt;\n            }\n        }\n    }\n}\n\n.outline {\n    stroke: rgba(var(--lime-brand-color-light-grey), 0.3);\n    fill: none;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n}\n","import { SpinnerSize } from './spinner.types';\nimport { Component, Prop, h } from '@stencil/core';\n\n/**\n * @exampleComponent limel-example-spinner\n * @exampleComponent limel-example-spinner-color\n * @exampleComponent limel-example-spinner-size\n */\n@Component({\n    tag: 'limel-spinner',\n    shadow: true,\n    styleUrl: 'spinner.scss',\n})\nexport class Spinner {\n    /**\n     * Determines the size of the spinner.\n     */\n    @Prop({ reflect: true })\n    public size: SpinnerSize = 'mini';\n\n    /**\n     * Gives the spinner the shape of Lime Technologies' logo\n     */\n    @Prop()\n    public limeBranded: boolean = true;\n\n    public render() {\n        return [\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                {this.renderSpinner()}\n            </svg>,\n        ];\n    }\n\n    private renderSpinner() {\n        if (!this.limeBranded) {\n            return (\n                <g>\n                    <circle class=\"outline\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    </g>\n                </g>\n            );\n        }\n\n        return (\n            <g>\n                <g clip-path=\"url(#mask)\">\n                    <circle class=\"outline thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    </g>\n                </g>\n                <clipPath id=\"mask\">\n                    <path d=\"M2.166 11.248C2.166 5.04 7.058 0 13.083 0 19.108 0 24 5.04 24 11.248c0 3.229-1.307 6.548-4.533 9.306-3.908 3.343-9.15 3.8-17.254 3.249-2.405-.164-2.753-.588-1.51-1.533C4.61 19.3 2.165 17.025 2.165 11.248zm3.124 9.834c5.563.227 9.416-.246 12.397-2.76 2.432-2.05 3.482-4.56 3.51-7.074.05-4.613-3.636-8.36-8.114-8.36-4.478 0-8.114 3.746-8.114 8.36 0 2.793.607 4.737.726 6.345.092 1.252.03 2.388-.405 3.49z\" />\n                </clipPath>\n            </g>\n        );\n    }\n}\n"],"mappings":"0CAAA,MAAMA,EAAa,uvG,MCaNC,EAAO,M,mCAKW,O,iBAMG,I,CAEvBC,SACH,MAAO,CACHC,EAAA,OAAKC,QAAQ,YAAYC,MAAM,8BAC1BC,KAAKC,iB,CAKVA,gBACJ,IAAKD,KAAKE,YAAa,CACnB,OACIL,EAAA,SACIA,EAAA,UAAQM,MAAM,UAAUC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1CT,EAAA,KAAGM,MAAM,WACLN,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OACxCT,EAAA,UAAQM,MAAM,QAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,Q,CAMxD,OACIT,EAAA,SACIA,EAAA,iBAAa,cACTA,EAAA,UAAQM,MAAM,gBAAgBC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAChDT,EAAA,KAAGM,MAAM,WACLN,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9CT,EAAA,UAAQM,MAAM,cAAcC,GAAG,KAAKC,GAAG,KAAKC,EAAE,SAGtDT,EAAA,YAAUU,GAAG,QACTV,EAAA,QAAMW,EAAE,wZ"}