import{r as e,h as t,H as i}from"./index-2714248e.js";const n=class{constructor(t){e(this,t);this.options=[{text:"1",value:"1"},{text:"2",value:"2"},{text:"3",value:"3"},{text:"4",value:"4"},{text:"5",value:"5"}];this.items=[{text:"This item only has one line of primary text, and no secondary text",value:1,icon:"text_width"},{text:"Very long primary texts like this one will truncate and you cannot do anything about it. Just avoid having long primary texts.",secondaryText:"This is a short secondary text.",value:2,icon:"text_width"},{text:"This item only has one line of primary text",value:3,secondaryText:"The lengt of secondary text does not exceed maximum allowed number of lines (of course depending on the width of your screen), thus the lines will not truncate.",icon:"text_width"},{text:"This is a short primary text",secondaryText:"Very long secondary texts like this one will not truncate on the first line. By default, the list will render 3 lines of text and then truncates the rest. If you need more lines of text to be shown, you can simply define it in your code, and add a maximum number there. For more information regarding this, please read the documentation.",value:4,icon:"text_width"}];this.handleChange=e=>{e.stopPropagation();const t=e.detail;this.maxLines=Array.isArray(t)?t[0]:t};this.maxLines={text:"2",value:"2"}}render(){var e;return t(i,null,t("limel-list",{items:this.items,badgeIcons:true,maxLinesSecondaryText:Number((e=this.maxLines)===null||e===void 0?void 0:e.value)}),t("limel-example-controls",{style:{"--example-controls-column-layout":"auto-fit"}},t("limel-select",{label:"maxLinesSecondaryText",options:this.options,value:this.maxLines,onChange:this.handleChange})))}};export{n as limel_example_list_badge_icons_with_multiple_lines};
//# sourceMappingURL=limel-example-list-badge-icons-with-multiple-lines.entry.js.map