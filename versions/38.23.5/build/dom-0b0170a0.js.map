{"version":3,"names":["isDescendant","element","parent","contains","currentNode","i","DEPTH","getRootNode","nodeName","host"],"sources":["./src/util/dom.ts"],"sourcesContent":["/**\n * Check if an element is a descendant of another, even if it is located within a shadow root\n *\n * @param element - The element to check\n * @param parent - The parent element\n * @returns True if the element is a descendant of the parent element, false otherwise\n */\nexport function isDescendant(element: Node, parent: Node): boolean {\n    if (!parent) {\n        return false;\n    }\n\n    if (parent.contains(element)) {\n        return true;\n    }\n\n    let currentNode: Node = element;\n    let i = 0; // Just in case something weird happens, let's not crash the browserâ€¦\n    const DEPTH = 1000; // Max depth to search.\n\n    while (\n        i < DEPTH &&\n        currentNode &&\n        currentNode.getRootNode().nodeName === '#document-fragment'\n    ) {\n        currentNode = (currentNode.getRootNode() as any).host;\n        if (parent.contains(currentNode)) {\n            return true;\n        }\n\n        i += 1;\n    }\n\n    return parent.contains(currentNode);\n}\n"],"mappings":"SAOgBA,EAAaC,EAAeC,GACxC,IAAKA,EAAQ,CACT,OAAO,K,CAGX,GAAIA,EAAOC,SAASF,GAAU,CAC1B,OAAO,I,CAGX,IAAIG,EAAoBH,EACxB,IAAII,EAAI,EACR,MAAMC,EAAQ,IAEd,MACID,EAAIC,GACJF,GACAA,EAAYG,cAAcC,WAAa,qBACzC,CACEJ,EAAeA,EAAYG,cAAsBE,KACjD,GAAIP,EAAOC,SAASC,GAAc,CAC9B,OAAO,I,CAGXC,GAAK,C,CAGT,OAAOH,EAAOC,SAASC,EAC3B,Q"}