{"version":3,"names":["dialogActionButtonsCss","DialogActionButtonsExample","this","confirmed","event","checked","detail","displayFeedback","alert","closeDialog","openDialog","isOpen","render","heading","title","subtitle","icon","h","primary","label","onClick","open","onClose","class","id","required","onChange","slot","disabled"],"sources":["./src/components/dialog/examples/dialog-action-buttons.scss?tag=limel-example-dialog-action-buttons&encapsulation=shadow","./src/components/dialog/examples/dialog-action-buttons.tsx"],"sourcesContent":[":host {\n    --dialog-heading-icon-background-color: rgb(var(--color-red-default));\n    --dialog-heading-icon-color: rgb(var(--color-yellow-lighter));\n    --dialog-width: 40rem;\n}\n\n.button {\n    &.back {\n        // these styles will align the targeted button to the left.\n        margin-right: auto;\n        margin-top: 0;\n    }\n    &.primary--neutral {\n        --lime-primary-color: rgb(var(--contrast-1100));\n    }\n    &.primary--caution {\n        --lime-on-primary-color: rgb(var(--color-glaucous-darker));\n        --lime-primary-color: rgb(var(--color-amber-default));\n    }\n    &.primary--danger {\n        --lime-primary-color: rgb(var(--color-red-default));\n    }\n}\n\n@media screen and (max-width: 760px) {\n    .button {\n        &.back {\n            // these styles will add a gap between \"back button\" and \"discard\" in a mobile view\n            // and put all buttons in a column.\n            margin-top: 1rem;\n            margin-right: 0;\n        }\n    }\n}\n","import { DialogHeading } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * Example with three action buttons\n *\n * This example shows how more than two buttons can be positioned in a dialog's\n * footer. Pay attention to how they are labeled & styled, and how you can\n * enable important actions conditionally.\n *\n * :::note\n * When it comes to details such as placement of action buttons, choice of\n * labels, and adding meaningful graphical details, it's important to follow\n * a few design conventions which are explained in\n * [this guide](#/DesignGuidelines/action-buttons.md/).\n */\n@Component({\n    tag: 'limel-example-dialog-action-buttons',\n    shadow: true,\n    styleUrl: 'dialog-action-buttons.scss',\n})\nexport class DialogActionButtonsExample {\n    @State()\n    private checked = false;\n\n    @State()\n    private isOpen = false;\n\n    public render() {\n        const heading: DialogHeading = {\n            title: 'Whoa…! Be careful.',\n            subtitle: 'Wanna mass-update 2345 items?',\n            icon: 'brake_warning',\n        };\n\n        return [\n            <limel-button\n                primary={true}\n                label=\"Open\"\n                onClick={this.openDialog}\n            />,\n            <limel-dialog\n                heading={heading}\n                open={this.isOpen}\n                onClose={this.closeDialog}\n            >\n                <div class=\"dialog-content\">\n                    <p>\n                        You are about to update 2345 items simultaneously. This\n                        will irreversibly change the affected values in the\n                        database, for all of these items!\n                    </p>\n                    <p>Are you sure you want to update them all?</p>\n                    <limel-checkbox\n                        label=\"It's OK. I'm aware of the consequences of this action.\"\n                        id=\"confirmation-checkbox\"\n                        required={true}\n                        onChange={this.confirmed}\n                        checked={this.checked}\n                    />\n                </div>\n                <limel-button\n                    label=\"Back to editing\"\n                    class=\"button back primary--neutral\"\n                    icon=\"left_arrow\"\n                    onClick={this.closeDialog}\n                    slot=\"button\"\n                />\n                <limel-button\n                    label=\"Discard changes\"\n                    class=\"button discard primary--caution\"\n                    icon=\"cancel\"\n                    primary={true}\n                    onClick={this.closeDialog}\n                    slot=\"button\"\n                />\n                <limel-button\n                    label=\"Update all\"\n                    class=\"button update\"\n                    icon=\"ok\"\n                    primary={true}\n                    onClick={this.displayFeedback}\n                    disabled={!this.checked}\n                    slot=\"button\"\n                />\n            </limel-dialog>,\n        ];\n    }\n\n    private confirmed = (event: CustomEvent<boolean>) => {\n        this.checked = event.detail;\n    };\n\n    private displayFeedback = () => {\n        alert(\n            '2345 items are being updated in the background. This may take a few seconds…'\n        );\n        this.closeDialog();\n    };\n\n    private openDialog = () => {\n        this.isOpen = true;\n    };\n\n    private closeDialog = () => {\n        this.isOpen = false;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAyB,yjB,MCqBlBC,EAA0B,M,yBAoE3BC,KAAAC,UAAaC,IACjBF,KAAKG,QAAUD,EAAME,MAAM,EAGvBJ,KAAAK,gBAAkB,KACtBC,MACI,gFAEJN,KAAKO,aAAa,EAGdP,KAAAQ,WAAa,KACjBR,KAAKS,OAAS,IAAI,EAGdT,KAAAO,YAAc,KAClBP,KAAKS,OAAS,KAAK,E,aAlFL,M,YAGD,K,CAEVC,SACH,MAAMC,EAAyB,CAC3BC,MAAO,qBACPC,SAAU,gCACVC,KAAM,iBAGV,MAAO,CACHC,EAAA,gBACIC,QAAS,KACTC,MAAM,OACNC,QAASlB,KAAKQ,aAElBO,EAAA,gBACIJ,QAASA,EACTQ,KAAMnB,KAAKS,OACXW,QAASpB,KAAKO,aAEdQ,EAAA,OAAKM,MAAM,kBACPN,EAAA,0JAKAA,EAAA,sDACAA,EAAA,kBACIE,MAAM,yDACNK,GAAG,wBACHC,SAAU,KACVC,SAAUxB,KAAKC,UACfE,QAASH,KAAKG,WAGtBY,EAAA,gBACIE,MAAM,kBACNI,MAAM,+BACNP,KAAK,aACLI,QAASlB,KAAKO,YACdkB,KAAK,WAETV,EAAA,gBACIE,MAAM,kBACNI,MAAM,kCACNP,KAAK,SACLE,QAAS,KACTE,QAASlB,KAAKO,YACdkB,KAAK,WAETV,EAAA,gBACIE,MAAM,aACNI,MAAM,gBACNP,KAAK,KACLE,QAAS,KACTE,QAASlB,KAAKK,gBACdqB,UAAW1B,KAAKG,QAChBsB,KAAK,Y"}