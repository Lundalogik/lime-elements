{"version":3,"names":["ButtonIconExample","render","h","Host","doDescription","doNotDescription","slot","icon","name","title","label","id","elementId"],"sources":["./src/components/button/examples/button-icon.tsx"],"sourcesContent":["import { Component, h, Host } from '@stencil/core';\n\n/**\n * Proper usage of icons\n *\n * Sometimes, your design requires displaying a single icon inside a button,\n * without any visible label.\n *\n * In such scenarios, the `title` property of the icon must be used to\n * improve accessibility for unsighted users.\n *\n * When a proper `label` is chosen for a button, it is descriptive enough for\n * the users to understand the meaning of the action.\n * In such cases, the icon is primarily used to improve\n * the visual appearance of the item, and make it more quickly and easily recognizable\n * for the users.\n *\n * However, some designs favor a cleaner and more minimal user interface,\n * by removing unnecessary words, relying on an already present icon which\n * can be interpreted as a word by the user.\n *\n * Here you see examples of such icons followed by a short text:\n * - **‚ûï icon followed by \"Todo\"**: For a sighted user,\n * this combination of icon and text would be interpreted as \"Add New Todo\"\n * - **üîÑ icon followed by \"List\"**: Would be visually read as \"Refresh List\"\n * - **üóëÔ∏è icon followed by \"Selected\"**: Would be visually read as \"Delete Selected\"\n *\n * For sighted users, the text is enough to understand the meaning of the action,\n * but a screen reader cannot interpret the icon as a word, unless you provide a\n * proper `title` property for the icon. In fact, the icons that have no `title`\n * are completely hidden from the screen readers.\n *\n * This example showcases how user experience can be improved not only for both\n * users of assistive technologies, but also for those who see a descriptive tooltip,\n * while hovering the action, which is constructed from the combination of\n * the `title` and `text`.\n */\n@Component({\n    tag: 'limel-example-button-icon',\n    shadow: true,\n})\nexport class ButtonIconExample {\n    public render() {\n        return (\n            <Host>\n                <limel-example-do-do-not\n                    doDescription=\"The icon has an accessible and descriptive `title` for its `icon`.\"\n                    doNotDescription=\"The button has no `label`, and no `title` for the `icon`.\"\n                >\n                    <limel-button\n                        slot=\"do\"\n                        icon={{\n                            name: 'plus_math',\n                            title: 'Add New To-do',\n                        }}\n                    />\n                    <limel-button slot=\"do-not\" icon=\"plus_math\" />\n                </limel-example-do-do-not>\n                <limel-example-do-do-not\n                    doDescription=\"The icon has an `title` for its `icon`, which can be combined by the `label` to create an accessible experience for users of assistive technologies like screen readers.\"\n                    doNotDescription=\"The button has a `label`, but no `title` for the `icon`. Sighted users can see icon and interpret it together the `label`. However, screen readers only read out the label, which is not descriptive alone.\"\n                >\n                    <limel-button\n                        slot=\"do\"\n                        icon={{\n                            name: 'plus_math',\n                            title: 'Add New',\n                        }}\n                        label=\"To-do\"\n                    />\n                    <limel-button\n                        slot=\"do-not\"\n                        icon=\"plus_math\"\n                        label=\"To-do\"\n                    />\n                </limel-example-do-do-not>\n                <limel-example-do-do-not\n                    doDescription=\"The button uses an accessible and descriptive tooltip. This provides a great experience for sighted users, and those who use screen readers.\"\n                    doNotDescription=\"The button has no `label`, no `title` for the `icon`, and no tooltip or other accessible attributes.\"\n                >\n                    <div slot=\"do\">\n                        <limel-button\n                            icon={{\n                                name: 'plus_math',\n                                title: 'Add New To-do',\n                            }}\n                            id=\"button\"\n                        />\n                        <limel-tooltip\n                            elementId=\"button\"\n                            label=\"Add New To-do\"\n                        />\n                    </div>\n                    <limel-button slot=\"do-not\" icon=\"plus_math\" />\n                </limel-example-do-do-not>\n            </Host>\n        );\n    }\n}\n"],"mappings":"4DAyCaA,EAAiB,M,yBACnBC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,2BACIE,cAAc,qEACdC,iBAAiB,6DAEjBH,EAAA,gBACII,KAAK,KACLC,KAAM,CACFC,KAAM,YACNC,MAAO,mBAGfP,EAAA,gBAAcI,KAAK,SAASC,KAAK,eAErCL,EAAA,2BACIE,cAAc,2KACdC,iBAAiB,+MAEjBH,EAAA,gBACII,KAAK,KACLC,KAAM,CACFC,KAAM,YACNC,MAAO,WAEXC,MAAM,UAEVR,EAAA,gBACII,KAAK,SACLC,KAAK,YACLG,MAAM,WAGdR,EAAA,2BACIE,cAAc,+IACdC,iBAAiB,wGAEjBH,EAAA,OAAKI,KAAK,MACNJ,EAAA,gBACIK,KAAM,CACFC,KAAM,YACNC,MAAO,iBAEXE,GAAG,WAEPT,EAAA,iBACIU,UAAU,SACVF,MAAM,mBAGdR,EAAA,gBAAcI,KAAK,SAASC,KAAK,e"}