{"version":3,"names":["cssClasses","CLOSING","OPEN","OPENING","strings","ACTION_SELECTOR","ARIA_LIVE_LABEL_TEXT_ATTR","CLOSED_EVENT","CLOSING_EVENT","DISMISS_SELECTOR","LABEL_SELECTOR","OPENED_EVENT","OPENING_EVENT","REASON_ACTION","REASON_DISMISS","SURFACE_SELECTOR","numbers","DEFAULT_AUTO_DISMISS_TIMEOUT_MS","INDETERMINATE","MAX_AUTO_DISMISS_TIMEOUT_MS","MIN_AUTO_DISMISS_TIMEOUT_MS","SNACKBAR_ANIMATION_CLOSE_TIME_MS","SNACKBAR_ANIMATION_OPEN_TIME_MS","ARIA_LIVE_DELAY_MS","announce","ariaEl","labelEl","priority","getAttribute","labelText","textContent","trim","setAttribute","innerHTML","setTimeout","removeAttribute","MDCSnackbarFoundation","_super","__extends","adapter","_this","call","this","__assign","defaultAdapter","opened","animationFrame","animationTimer","autoDismissTimer","autoDismissTimeoutMs","closeOnEscape","Object","defineProperty","get","enumerable","configurable","addClass","undefined","notifyClosed","notifyClosing","notifyOpened","notifyOpening","removeClass","prototype","destroy","clearAutoDismissTimer","cancelAnimationFrame","clearTimeout","open","runNextAnimationFrame","timeoutMs","getTimeoutMs","handleAnimationTimerEnd","close","reason","isOpen","setTimeoutMs","minValue","maxValue","indeterminateValue","Error","getCloseOnEscape","setCloseOnEscape","handleKeyDown","evt","isEscapeKey","key","keyCode","handleActionButtonClick","_evt","handleActionIconClick","callback","requestAnimationFrame","MDCFoundation","MDCSnackbar","apply","arguments","attachTo","root","initialize","announcerFactory","util.announce","initialSyncWithDOM","surfaceEl","querySelector","actionEl","foundation","handleSurfaceClick","target","isActionButton","isActionIcon","registerKeyDownHandler","registerSurfaceClickHandler","deregisterKeyDownHandler","deregisterSurfaceClickHandler","getDefaultFoundation","className","classList","add","emit","remove","set","actionButtonText","handler","listen","unlisten","addEventListener","removeEventListener","Boolean","closest","MDCComponent","snackbarCss","Snackbar","constructor","hostRef","handleMdcClosing","bind","connectedCallback","componentDidLoad","element","host","shadowRoot","mdcSnackbar","disconnectedCallback","async","timeout","message","render","h","class","multiline","style","role","renderActions","actionText","renderDismissButton","dismissible","event","detail","action","hide","renderActionButton","label","translate","language","renderTimeoutVisualization","icon","width","height","viewBox","r","cx","cy","fill","d","stroke"],"sources":["./node_modules/@material/snackbar/constants.js","./node_modules/@material/snackbar/util.js","./node_modules/@material/snackbar/foundation.js","./node_modules/@material/snackbar/component.js","./src/components/snackbar/snackbar.scss?tag=limel-snackbar&encapsulation=shadow","./src/components/snackbar/snackbar.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    CLOSING: 'mdc-snackbar--closing',\n    OPEN: 'mdc-snackbar--open',\n    OPENING: 'mdc-snackbar--opening',\n};\nvar strings = {\n    ACTION_SELECTOR: '.mdc-snackbar__action',\n    ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text',\n    CLOSED_EVENT: 'MDCSnackbar:closed',\n    CLOSING_EVENT: 'MDCSnackbar:closing',\n    DISMISS_SELECTOR: '.mdc-snackbar__dismiss',\n    LABEL_SELECTOR: '.mdc-snackbar__label',\n    OPENED_EVENT: 'MDCSnackbar:opened',\n    OPENING_EVENT: 'MDCSnackbar:opening',\n    REASON_ACTION: 'action',\n    REASON_DISMISS: 'dismiss',\n    SURFACE_SELECTOR: '.mdc-snackbar__surface',\n};\nvar numbers = {\n    DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,\n    INDETERMINATE: -1,\n    MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,\n    MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,\n    // These variables need to be kept in sync with the values in _variables.scss.\n    SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,\n    SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,\n    /**\n     * Number of milliseconds to wait between temporarily clearing the label text\n     * in the DOM and subsequently restoring it. This is necessary to force IE 11\n     * to pick up the `aria-live` content change and announce it to the user.\n     */\n    ARIA_LIVE_DELAY_MS: 1000,\n};\nexport { cssClasses, strings, numbers };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { numbers, strings } from './constants';\nvar ARIA_LIVE_DELAY_MS = numbers.ARIA_LIVE_DELAY_MS;\nvar ARIA_LIVE_LABEL_TEXT_ATTR = strings.ARIA_LIVE_LABEL_TEXT_ATTR;\nfunction announce(ariaEl, labelEl) {\n    if (labelEl === void 0) { labelEl = ariaEl; }\n    var priority = ariaEl.getAttribute('aria-live');\n    // Trim text to ignore `&nbsp;` (see below).\n    // textContent is only null if the node is a document, DOCTYPE, or notation.\n    var labelText = labelEl.textContent.trim();\n    if (!labelText || !priority) {\n        return;\n    }\n    // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing the message twice.\n    ariaEl.setAttribute('aria-live', 'off');\n    // Temporarily clear `textContent` to force a DOM mutation event that will be detected by screen readers.\n    // `aria-live` elements are only announced when the element's `textContent` *changes*, so snackbars\n    // sent to the browser in the initial HTML response won't be read unless we clear the element's `textContent` first.\n    // Similarly, displaying the same snackbar message twice in a row doesn't trigger a DOM mutation event,\n    // so screen readers won't announce the second message unless we first clear `textContent`.\n    //\n    // We have to clear the label text two different ways to make it work in all browsers and screen readers:\n    //\n    //   1. `textContent = ''` is required for IE11 + JAWS\n    //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA\n    //\n    // All other browser/screen reader combinations support both methods.\n    //\n    // The wrapper `<span>` visually hides the space character so that it doesn't cause jank when added/removed.\n    // N.B.: Setting `position: absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting the DOM change.\n    //\n    // This technique has been tested in:\n    //\n    //   * JAWS 2019:\n    //       - Chrome 70\n    //       - Firefox 60 (ESR)\n    //       - IE 11\n    //   * NVDA 2018:\n    //       - Chrome 70\n    //       - Firefox 60 (ESR)\n    //       - IE 11\n    //   * ChromeVox 53\n    labelEl.textContent = '';\n    labelEl.innerHTML = '<span style=\"display: inline-block; width: 0; height: 1px;\">&nbsp;</span>';\n    // Prevent visual jank by temporarily displaying the label text in the ::before pseudo-element.\n    // CSS generated content is normally announced by screen readers\n    // (except in IE 11; see https://tink.uk/accessibility-support-for-css-generated-content/);\n    // however, `aria-live` is turned off, so this DOM update will be ignored by screen readers.\n    labelEl.setAttribute(ARIA_LIVE_LABEL_TEXT_ATTR, labelText);\n    setTimeout(function () {\n        // Allow screen readers to announce changes to the DOM again.\n        ariaEl.setAttribute('aria-live', priority);\n        // Remove the message from the ::before pseudo-element.\n        labelEl.removeAttribute(ARIA_LIVE_LABEL_TEXT_ATTR);\n        // Restore the original label text, which will be announced by screen readers.\n        labelEl.textContent = labelText;\n    }, ARIA_LIVE_DELAY_MS);\n}\nexport { announce };\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar OPENING = cssClasses.OPENING, OPEN = cssClasses.OPEN, CLOSING = cssClasses.CLOSING;\nvar REASON_ACTION = strings.REASON_ACTION, REASON_DISMISS = strings.REASON_DISMISS;\nvar MDCSnackbarFoundation = /** @class */ (function (_super) {\n    __extends(MDCSnackbarFoundation, _super);\n    function MDCSnackbarFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCSnackbarFoundation.defaultAdapter), adapter)) || this;\n        _this.opened = false;\n        _this.animationFrame = 0;\n        _this.animationTimer = 0;\n        _this.autoDismissTimer = 0;\n        _this.autoDismissTimeoutMs = numbers.DEFAULT_AUTO_DISMISS_TIMEOUT_MS;\n        _this.closeOnEscape = true;\n        return _this;\n    }\n    Object.defineProperty(MDCSnackbarFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                announce: function () { return undefined; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                removeClass: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCSnackbarFoundation.prototype.destroy = function () {\n        this.clearAutoDismissTimer();\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = 0;\n        clearTimeout(this.animationTimer);\n        this.animationTimer = 0;\n        this.adapter.removeClass(OPENING);\n        this.adapter.removeClass(OPEN);\n        this.adapter.removeClass(CLOSING);\n    };\n    MDCSnackbarFoundation.prototype.open = function () {\n        var _this = this;\n        this.clearAutoDismissTimer();\n        this.opened = true;\n        this.adapter.notifyOpening();\n        this.adapter.removeClass(CLOSING);\n        this.adapter.addClass(OPENING);\n        this.adapter.announce();\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame(function () {\n            _this.adapter.addClass(OPEN);\n            _this.animationTimer = setTimeout(function () {\n                var timeoutMs = _this.getTimeoutMs();\n                _this.handleAnimationTimerEnd();\n                _this.adapter.notifyOpened();\n                if (timeoutMs !== numbers.INDETERMINATE) {\n                    _this.autoDismissTimer = setTimeout(function () {\n                        _this.close(REASON_DISMISS);\n                    }, timeoutMs);\n                }\n            }, numbers.SNACKBAR_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    /**\n     * @param reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n     *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n     *     client-specific values may also be used if desired.\n     */\n    MDCSnackbarFoundation.prototype.close = function (reason) {\n        var _this = this;\n        if (reason === void 0) { reason = ''; }\n        if (!this.opened) {\n            // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed\n            return;\n        }\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = 0;\n        this.clearAutoDismissTimer();\n        this.opened = false;\n        this.adapter.notifyClosing(reason);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeClass(cssClasses.OPENING);\n        clearTimeout(this.animationTimer);\n        this.animationTimer = setTimeout(function () {\n            _this.handleAnimationTimerEnd();\n            _this.adapter.notifyClosed(reason);\n        }, numbers.SNACKBAR_ANIMATION_CLOSE_TIME_MS);\n    };\n    MDCSnackbarFoundation.prototype.isOpen = function () {\n        return this.opened;\n    };\n    MDCSnackbarFoundation.prototype.getTimeoutMs = function () {\n        return this.autoDismissTimeoutMs;\n    };\n    MDCSnackbarFoundation.prototype.setTimeoutMs = function (timeoutMs) {\n        // Use shorter variable names to make the code more readable\n        var minValue = numbers.MIN_AUTO_DISMISS_TIMEOUT_MS;\n        var maxValue = numbers.MAX_AUTO_DISMISS_TIMEOUT_MS;\n        var indeterminateValue = numbers.INDETERMINATE;\n        if (timeoutMs === numbers.INDETERMINATE || (timeoutMs <= maxValue && timeoutMs >= minValue)) {\n            this.autoDismissTimeoutMs = timeoutMs;\n        }\n        else {\n            throw new Error(\"\\n        timeoutMs must be an integer in the range \" + minValue + \"\\u2013\" + maxValue + \"\\n        (or \" + indeterminateValue + \" to disable), but got '\" + timeoutMs + \"'\");\n        }\n    };\n    MDCSnackbarFoundation.prototype.getCloseOnEscape = function () {\n        return this.closeOnEscape;\n    };\n    MDCSnackbarFoundation.prototype.setCloseOnEscape = function (closeOnEscape) {\n        this.closeOnEscape = closeOnEscape;\n    };\n    MDCSnackbarFoundation.prototype.handleKeyDown = function (evt) {\n        var isEscapeKey = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscapeKey && this.getCloseOnEscape()) {\n            this.close(REASON_DISMISS);\n        }\n    };\n    MDCSnackbarFoundation.prototype.handleActionButtonClick = function (_evt) {\n        this.close(REASON_ACTION);\n    };\n    MDCSnackbarFoundation.prototype.handleActionIconClick = function (_evt) {\n        this.close(REASON_DISMISS);\n    };\n    MDCSnackbarFoundation.prototype.clearAutoDismissTimer = function () {\n        clearTimeout(this.autoDismissTimer);\n        this.autoDismissTimer = 0;\n    };\n    MDCSnackbarFoundation.prototype.handleAnimationTimerEnd = function () {\n        this.animationTimer = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCSnackbarFoundation.prototype.runNextAnimationFrame = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame);\n        this.animationFrame = requestAnimationFrame(function () {\n            _this.animationFrame = 0;\n            clearTimeout(_this.animationTimer);\n            _this.animationTimer = setTimeout(callback, 0);\n        });\n    };\n    return MDCSnackbarFoundation;\n}(MDCFoundation));\nexport { MDCSnackbarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSnackbarFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { closest } from '@material/dom/ponyfill';\nimport { strings } from './constants';\nimport { MDCSnackbarFoundation } from './foundation';\nimport * as util from './util';\nvar SURFACE_SELECTOR = strings.SURFACE_SELECTOR, LABEL_SELECTOR = strings.LABEL_SELECTOR, ACTION_SELECTOR = strings.ACTION_SELECTOR, DISMISS_SELECTOR = strings.DISMISS_SELECTOR, OPENING_EVENT = strings.OPENING_EVENT, OPENED_EVENT = strings.OPENED_EVENT, CLOSING_EVENT = strings.CLOSING_EVENT, CLOSED_EVENT = strings.CLOSED_EVENT;\nvar MDCSnackbar = /** @class */ (function (_super) {\n    __extends(MDCSnackbar, _super);\n    function MDCSnackbar() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSnackbar.attachTo = function (root) {\n        return new MDCSnackbar(root);\n    };\n    MDCSnackbar.prototype.initialize = function (announcerFactory) {\n        if (announcerFactory === void 0) { announcerFactory = function () { return util.announce; }; }\n        this.announce = announcerFactory();\n    };\n    MDCSnackbar.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.surfaceEl = this.root.querySelector(SURFACE_SELECTOR);\n        this.labelEl = this.root.querySelector(LABEL_SELECTOR);\n        this.actionEl = this.root.querySelector(ACTION_SELECTOR);\n        this.handleKeyDown = function (evt) {\n            _this.foundation.handleKeyDown(evt);\n        };\n        this.handleSurfaceClick = function (evt) {\n            var target = evt.target;\n            if (_this.isActionButton(target)) {\n                _this.foundation.handleActionButtonClick(evt);\n            }\n            else if (_this.isActionIcon(target)) {\n                _this.foundation.handleActionIconClick(evt);\n            }\n        };\n        this.registerKeyDownHandler(this.handleKeyDown);\n        this.registerSurfaceClickHandler(this.handleSurfaceClick);\n    };\n    MDCSnackbar.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.deregisterKeyDownHandler(this.handleKeyDown);\n        this.deregisterSurfaceClickHandler(this.handleSurfaceClick);\n    };\n    MDCSnackbar.prototype.open = function () {\n        this.foundation.open();\n    };\n    /**\n     * @param reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n     *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n     *     client-specific values may also be used if desired.\n     */\n    MDCSnackbar.prototype.close = function (reason) {\n        if (reason === void 0) { reason = ''; }\n        this.foundation.close(reason);\n    };\n    MDCSnackbar.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) {\n                _this.root.classList.add(className);\n            },\n            announce: function () {\n                _this.announce(_this.labelEl);\n            },\n            notifyClosed: function (reason) { return _this.emit(CLOSED_EVENT, reason ? { reason: reason } : {}); },\n            notifyClosing: function (reason) { return _this.emit(CLOSING_EVENT, reason ? { reason: reason } : {}); },\n            notifyOpened: function () { return _this.emit(OPENED_EVENT, {}); },\n            notifyOpening: function () { return _this.emit(OPENING_EVENT, {}); },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n        };\n        return new MDCSnackbarFoundation(adapter);\n    };\n    Object.defineProperty(MDCSnackbar.prototype, \"timeoutMs\", {\n        get: function () {\n            return this.foundation.getTimeoutMs();\n        },\n        set: function (timeoutMs) {\n            this.foundation.setTimeoutMs(timeoutMs);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbar.prototype, \"closeOnEscape\", {\n        get: function () {\n            return this.foundation.getCloseOnEscape();\n        },\n        set: function (closeOnEscape) {\n            this.foundation.setCloseOnEscape(closeOnEscape);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbar.prototype, \"isOpen\", {\n        get: function () {\n            return this.foundation.isOpen();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbar.prototype, \"labelText\", {\n        get: function () {\n            // This property only returns null if the node is a document, DOCTYPE,\n            // or notation. On Element nodes, it always returns a string.\n            return this.labelEl.textContent;\n        },\n        set: function (labelText) {\n            this.labelEl.textContent = labelText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbar.prototype, \"actionButtonText\", {\n        get: function () {\n            return this.actionEl.textContent;\n        },\n        set: function (actionButtonText) {\n            this.actionEl.textContent = actionButtonText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCSnackbar.prototype.registerKeyDownHandler = function (handler) {\n        this.listen('keydown', handler);\n    };\n    MDCSnackbar.prototype.deregisterKeyDownHandler = function (handler) {\n        this.unlisten('keydown', handler);\n    };\n    MDCSnackbar.prototype.registerSurfaceClickHandler = function (handler) {\n        this.surfaceEl.addEventListener('click', handler);\n    };\n    MDCSnackbar.prototype.deregisterSurfaceClickHandler = function (handler) {\n        this.surfaceEl.removeEventListener('click', handler);\n    };\n    MDCSnackbar.prototype.isActionButton = function (target) {\n        return Boolean(closest(target, ACTION_SELECTOR));\n    };\n    MDCSnackbar.prototype.isActionIcon = function (target) {\n        return Boolean(closest(target, DISMISS_SELECTOR));\n    };\n    return MDCSnackbar;\n}(MDCComponent));\nexport { MDCSnackbar };\n//# sourceMappingURL=component.js.map","/**\n * @prop --snackbar-top: Snackbar has `position: fixed;` and uses `--snackbar-top`, which defaults to `auto` for its `top` property. See the examples in the documentations for further info.\n * @prop --snackbar-right: Snackbar has `position: fixed;` and uses `--snackbar-right`, which defaults to `0` for its `right` property. See the examples in the documentations for further info.\n * @prop --snackbar-bottom: Snackbar has `position: fixed;` and uses `--snackbar-bottom`, which defaults to `0` for its `bottom` property. See the examples in the documentations for further info.\n * @prop --snackbar-left: Snackbar has `position: fixed;` and uses `--snackbar-left`, which defaults to `0` for its `left` property. See the examples in the documentations for further info.\n */\n\n* {\n    box-sizing: border-box;\n}\n\n.mdc-snackbar {\n    top: var(--snackbar-top, auto);\n    right: var(--snackbar-right, 0);\n    bottom: var(--snackbar-bottom, 0);\n    left: var(--snackbar-left, 0);\n\n    display: none;\n    position: fixed;\n    z-index: 8;\n\n    padding: 0.75rem;\n\n    align-items: center;\n    justify-content: center;\n}\n\n.mdc-snackbar--opening,\n.mdc-snackbar--open,\n.mdc-snackbar--closing {\n    display: flex;\n}\n\n.mdc-snackbar--open {\n    .mdc-snackbar__label,\n    .mdc-snackbar__actions {\n        visibility: visible;\n    }\n\n    .mdc-snackbar__surface {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n.mdc-snackbar__surface {\n    transition:\n        opacity 0.2s cubic-bezier(0, 0, 0.2, 1),\n        transform 0.2s cubic-bezier(0, 0, 0.2, 1);\n    padding: 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 0.25rem;\n\n    min-height: 3.25rem;\n    min-width: unset;\n    max-width: 42rem;\n\n    transform: scale(0.8);\n    opacity: 0;\n    border-radius: 0.75rem;\n\n    background-color: rgb(var(--contrast-1400));\n    box-shadow: var(--shadow-depth-8), var(--shadow-depth-16);\n}\n\n.mdc-snackbar__label {\n    visibility: hidden;\n\n    color: rgb(var(--contrast-100));\n\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.8125rem;\n    font-weight: 400;\n    padding: 0 0.25rem;\n\n    width: 100%;\n    flex-grow: 1;\n}\n\n.mdc-snackbar__actions {\n    visibility: hidden;\n\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    box-sizing: border-box;\n    gap: 0.5rem;\n}\n\n.dismiss,\n.mdc-snackbar__actions {\n    --lime-elevated-surface-background-color: rgb(\n        var(--contrast-1300)\n    ); // background color of the buttons\n}\n\n.dismiss {\n    --mdc-theme-on-surface: rgb(var(--contrast-100)); // color of the X icon\n    --icon-background-color: var(--lime-elevated-surface-background-color);\n    --fill-color: var(--mdc-theme-primary);\n    --track-color: rgb(var(--contrast-800), 0.2);\n    position: absolute;\n    top: -0.9rem;\n    left: -0.9rem;\n    transform: scale(0.8);\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    limel-icon-button.mdc-snackbar__dismiss {\n        transform: scale(0.8);\n        margin: 0;\n        padding: 0;\n    }\n\n    svg {\n        position: absolute;\n        transform: rotate(90deg);\n        fill: transparent;\n        stroke-dasharray: 100;\n        stroke-linecap: round;\n\n        .mdc-snackbar--open & {\n            animation: timeout var(--snackbar-timeout) linear forwards;\n        }\n    }\n}\n\n@keyframes timeout {\n    0% {\n        stroke-width: 4;\n        stroke-dashoffset: 0;\n        opacity: 1;\n    }\n    100% {\n        stroke-width: 1;\n        stroke-dashoffset: -100;\n        opacity: 0.7;\n    }\n}\n","import { Languages } from '../date-picker/date.types';\nimport { MDCSnackbar, MDCSnackbarCloseEvent } from '@material/snackbar';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Method,\n    Prop,\n} from '@stencil/core';\nimport translate from '../../global/translations';\n\n/**\n * A Snackbar –also known as \"Toast\"– is used to inform the end user\n * about an action or a process in the system.\n * The information could vary from announcing that a process has just started,\n * is taking place now, has ended, or has been interrupted or canceled.\n *\n * The information that you provide using a snackbar should be:\n * - temporary\n * - contextual\n * - short\n * - and most importantly, ignorable.\n *\n * It means if the user misses the information, it shouldn't be a big deal.\n *\n * :::note\n * If the information you want to display has a higher importance or priority,\n * and you need to make sure that the user takes an action to dismiss it,\n * consider using the [Banner](/#/component/limel-banner/) component instead.\n * For more complex interactions and for delivering more detailed information,\n * [Dialog](/#/component/limel-dialog/) is a better choice.\n * :::\n *\n * @exampleComponent limel-example-snackbar\n * @exampleComponent limel-example-snackbar-dismissible\n * @exampleComponent limel-example-snackbar-with-action\n * @exampleComponent limel-example-snackbar-with-changing-messages\n * @exampleComponent limel-example-snackbar-positioning\n */\n\n@Component({\n    tag: 'limel-snackbar',\n    shadow: true,\n    styleUrl: 'snackbar.scss',\n})\nexport class Snackbar {\n    /**\n     * The text message to display.\n     */\n    @Prop()\n    public message: string;\n\n    /**\n     * The amount of time in milliseconds to show the snackbar.\n     */\n    @Prop()\n    // eslint-disable-next-line no-magic-numbers\n    public timeout?: number = 5000;\n\n    /**\n     * The text to display for the action button.\n     */\n    @Prop()\n    public actionText: string;\n\n    /**\n     * When `true` displays a dismiss button on the snackbar,\n     * allowing users to close it.\n     */\n    @Prop()\n    public dismissible: boolean = true;\n\n    /**\n     * Whether to show the snackbar with space for multiple lines of text\n     */\n    @Prop()\n    public multiline: boolean;\n\n    /**\n     * Defines the language for translations.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    @Element()\n    private host: HTMLLimelSnackbarElement;\n\n    /**\n     * Emitted when the action button is pressed\n     */\n    @Event()\n    private action: EventEmitter<void>;\n\n    /**\n     * Emitted when the snackbar hides itself\n     */\n    @Event()\n    private hide: EventEmitter<void>;\n\n    private mdcSnackbar: MDCSnackbar;\n\n    constructor() {\n        this.handleMdcClosing = this.handleMdcClosing.bind(this);\n    }\n\n    public connectedCallback() {\n        this.initialize();\n    }\n\n    public componentDidLoad() {\n        this.initialize();\n    }\n\n    private initialize() {\n        const element = this.host.shadowRoot.querySelector('.mdc-snackbar');\n        if (!element) {\n            return;\n        }\n\n        this.mdcSnackbar = new MDCSnackbar(element);\n\n        this.mdcSnackbar.listen('MDCSnackbar:closing', this.handleMdcClosing);\n    }\n\n    public disconnectedCallback() {\n        this.mdcSnackbar.unlisten('MDCSnackbar:closing', this.handleMdcClosing);\n        this.mdcSnackbar.destroy();\n    }\n\n    /**\n     * Show the snackbar\n     */\n    @Method()\n    public async show() {\n        if (this.timeout) {\n            this.mdcSnackbar.timeoutMs = this.timeout;\n        }\n\n        this.mdcSnackbar.labelText = this.message;\n\n        this.mdcSnackbar.open();\n    }\n\n    public render() {\n        return (\n            <aside\n                class={`\n                    mdc-snackbar\n                    ${this.multiline ? 'mdc-snackbar--stacked' : ''}\n                `}\n                style={{\n                    '--snackbar-timeout': `${this.timeout}ms`,\n                }}\n            >\n                <div\n                    class=\"mdc-snackbar__surface\"\n                    role=\"status\"\n                    aria-relevant=\"additions\"\n                >\n                    <div class=\"mdc-snackbar__label\" aria-atomic=\"false\"></div>\n                    {this.renderActions(this.actionText)}\n                    {this.renderDismissButton(this.dismissible)}\n                </div>\n            </aside>\n        );\n    }\n\n    private handleMdcClosing(event: MDCSnackbarCloseEvent) {\n        if (event.detail.reason === 'action') {\n            this.action.emit();\n        } else {\n            this.hide.emit();\n        }\n    }\n\n    private renderActions(actionText: string) {\n        if (!actionText) {\n            return;\n        }\n\n        return (\n            <div class=\"mdc-snackbar__actions\" aria-atomic=\"true\">\n                {this.renderActionButton(actionText)}\n            </div>\n        );\n    }\n\n    private renderActionButton(actionText: string) {\n        if (!actionText) {\n            return;\n        }\n\n        return (\n            <limel-button\n                class=\"mdc-button mdc-snackbar__action\"\n                label={actionText}\n            />\n        );\n    }\n\n    private renderDismissButton(dismissible: boolean) {\n        if (!dismissible) {\n            return;\n        }\n\n        const label = translate.get('snackbar.dismiss', this.language);\n\n        return (\n            <div class=\"dismiss\">\n                {this.renderTimeoutVisualization()}\n                <limel-icon-button\n                    class=\"mdc-icon-button mdc-snackbar__dismiss\"\n                    icon=\"multiply\"\n                    label={label}\n                />\n            </div>\n        );\n    }\n\n    private renderTimeoutVisualization() {\n        return (\n            <svg width=\"36\" height=\"36\" viewBox=\"0 0 36 36\">\n                <circle r=\"18\" cx=\"18\" cy=\"18\" fill=\"var(--track-color)\" />\n                <path\n                    class=\"track\"\n                    d=\"M 18,18 m -16,0 a 16,16 0 1,0 32,0 a 16,16 0 1,0 -32,0\"\n                    stroke=\"var(--fill-color)\"\n                />\n            </svg>\n        );\n    }\n}\n"],"mappings":"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"}