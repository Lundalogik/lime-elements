{"version":3,"names":["SelectSeparatorsExample","this","options","separator","text","value","handleChange","event","detail","render","h","label","onChange"],"sources":["./src/components/select/examples/select-separators.tsx"],"sourcesContent":["import { Option, ListSeparator } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n/**\n * Select with separators between options\n *\n * Separators are simple yet powerful design elements that can be\n * employed in lists of items. They offer significant usability advantages\n * by providing valuable visual cues that aid users in perceiving\n * and navigating through lists. Read more about advantages of using\n * separators in the\n * [List component's documentations](/#/component/limel-list/).\n */\n@Component({\n    shadow: true,\n    tag: 'limel-example-select-with-separators',\n})\nexport class SelectSeparatorsExample {\n    @State()\n    public value: Option;\n\n    private options: Array<Option | ListSeparator> = [\n        { separator: true, text: 'Alaskan / Hawaiian' },\n        {\n            text: 'Alaska',\n            value: 'AK',\n        },\n        {\n            text: 'Hawaii',\n            value: 'HI',\n        },\n        { separator: true, text: 'Pacific' },\n        {\n            text: 'California',\n            value: 'CA',\n        },\n        {\n            text: 'Nevada',\n            value: 'NV',\n        },\n        {\n            text: 'Oregon',\n            value: 'OR',\n        },\n        {\n            text: 'Washington',\n            value: 'WA',\n        },\n        { separator: true, text: 'Mountain' },\n        {\n            text: 'Arizona',\n            value: 'AZ',\n        },\n        {\n            text: 'Colorado',\n            value: 'CO',\n        },\n        {\n            text: 'Idaho',\n            value: 'ID',\n        },\n        {\n            text: 'Montana',\n            value: 'MT',\n        },\n        {\n            text: 'Nebraska',\n            value: 'NE',\n        },\n        {\n            text: 'North Dakota',\n            value: 'ND',\n        },\n        {\n            text: 'New Mexico',\n            value: 'NM',\n        },\n        {\n            text: 'Utah',\n            value: 'UT',\n        },\n        {\n            text: 'Wyoming',\n            value: 'WY',\n        },\n        { separator: true, text: 'Central Time Zone' },\n        {\n            text: 'Alabama',\n            value: 'AL',\n        },\n        {\n            text: 'Arkansas',\n            value: 'AR',\n        },\n        {\n            text: 'Illinois',\n            value: 'IL',\n        },\n        {\n            text: 'Iowa',\n            value: 'IA',\n        },\n        {\n            text: 'Kansas',\n            value: 'KS',\n        },\n        {\n            text: 'Louisiana',\n            value: 'LA',\n        },\n        {\n            text: 'Minnesota',\n            value: 'MN',\n        },\n        {\n            text: 'Mississippi',\n            value: 'MS',\n        },\n        {\n            text: 'Missouri',\n            value: 'MO',\n        },\n        {\n            text: 'Oklahoma',\n            value: 'OK',\n        },\n        {\n            text: 'Texas',\n            value: 'TX',\n        },\n        {\n            text: 'Wisconsin',\n            value: 'WI',\n        },\n        { separator: true, text: 'Eastern Time Zone' },\n        {\n            text: 'Connecticut',\n            value: 'CT',\n        },\n        {\n            text: 'Delaware',\n            value: 'DE',\n        },\n        {\n            text: 'Florida',\n            value: 'FL',\n        },\n        {\n            text: 'Georgia',\n            value: 'GA',\n        },\n        {\n            text: 'Indiana',\n            value: 'IN',\n        },\n        {\n            text: 'Kentucky',\n            value: 'KY',\n        },\n        {\n            text: 'Maine',\n            value: 'ME',\n        },\n        {\n            text: 'Maryland',\n            value: 'MD',\n        },\n        {\n            text: 'Massachusetts',\n            value: 'MA',\n        },\n        {\n            text: 'Michigan',\n            value: 'MI',\n        },\n        {\n            text: 'New Hampshire',\n            value: 'NH',\n        },\n        {\n            text: 'New Jersey',\n            value: 'NJ',\n        },\n        {\n            text: 'New York',\n            value: 'NY',\n        },\n        {\n            text: 'North Carolina',\n            value: 'NC',\n        },\n        {\n            text: 'Ohio',\n            value: 'OH',\n        },\n        {\n            text: 'Pennsylvania',\n            value: 'PA',\n        },\n        {\n            text: 'Rhode Island',\n            value: 'RI',\n        },\n        {\n            text: 'South Carolina',\n            value: 'SC',\n        },\n        {\n            text: 'Tennessee',\n            value: 'TN',\n        },\n        {\n            text: 'Vermont',\n            value: 'VT',\n        },\n        {\n            text: 'Virginia',\n            value: 'VA',\n        },\n        {\n            text: 'West Virginia',\n            value: 'WV',\n        },\n        {\n            text: 'Washington D.C.',\n            value: 'DC',\n        },\n    ];\n\n    public render() {\n        return (\n            <section>\n                <limel-select\n                    label=\"Timezone\"\n                    value={this.value}\n                    options={this.options}\n                    onChange={this.handleChange}\n                />\n                <limel-example-value value={this.value} />\n            </section>\n        );\n    }\n\n    private handleChange = (event) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAgBaA,EAAuB,M,yBAIxBC,KAAAC,QAAyC,CAC7C,CAAEC,UAAW,KAAMC,KAAM,sBACzB,CACIA,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CAAEF,UAAW,KAAMC,KAAM,WACzB,CACIA,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CAAEF,UAAW,KAAMC,KAAM,YACzB,CACIA,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,QACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,OACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CAAEF,UAAW,KAAMC,KAAM,qBACzB,CACIA,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,OACNC,MAAO,MAEX,CACID,KAAM,SACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CACID,KAAM,cACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,QACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CAAEF,UAAW,KAAMC,KAAM,qBACzB,CACIA,KAAM,cACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,QACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,gBACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,gBACNC,MAAO,MAEX,CACID,KAAM,aACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,iBACNC,MAAO,MAEX,CACID,KAAM,OACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,eACNC,MAAO,MAEX,CACID,KAAM,iBACNC,MAAO,MAEX,CACID,KAAM,YACNC,MAAO,MAEX,CACID,KAAM,UACNC,MAAO,MAEX,CACID,KAAM,WACNC,MAAO,MAEX,CACID,KAAM,gBACNC,MAAO,MAEX,CACID,KAAM,kBACNC,MAAO,OAkBPJ,KAAAK,aAAgBC,IACpBN,KAAKI,MAAQE,EAAMC,MAAM,E,qBAftBC,SACH,OACIC,EAAA,eACIA,EAAA,gBACIC,MAAM,WACNN,MAAOJ,KAAKI,MACZH,QAASD,KAAKC,QACdU,SAAUX,KAAKK,eAEnBI,EAAA,uBAAqBL,MAAOJ,KAAKI,Q"}