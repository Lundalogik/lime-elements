{"version":3,"names":["InputFieldNumberExample","this","handleChange","event","value","detail","checkValidity","setFormatNumber","formatNumber","setDisabled","disabled","setReadonly","stopPropagation","readonly","setRequired","required","render","h","label","type","invalid","onChange","checked"],"sources":["./src/components/input-field/examples/input-field-number.tsx"],"sourcesContent":["import { Component, h, State, Watch } from '@stencil/core';\n\n/**\n * Input Field of Type Number\n */\n@Component({\n    tag: 'limel-example-input-field-number',\n    shadow: true,\n})\nexport class InputFieldNumberExample {\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private formatNumber = true;\n\n    @State()\n    private value = '';\n\n    public render() {\n        return [\n            <limel-input-field\n                label=\"Number Field Label\"\n                value={this.value}\n                type=\"number\"\n                formatNumber={this.formatNumber}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                invalid={this.invalid}\n                required={this.required}\n                onChange={this.handleChange}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.formatNumber}\n                    label=\"Format value\"\n                    onChange={this.setFormatNumber}\n                />\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    @Watch('required')\n    private checkValidity() {\n        this.invalid = this.required && !this.value;\n    }\n\n    private handleChange = (event: CustomEvent<string | number>) => {\n        this.value = event.detail + '';\n        this.checkValidity();\n    };\n\n    private setFormatNumber = (event: CustomEvent<boolean>) => {\n        this.formatNumber = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n}\n"],"mappings":"qDASaA,EAAuB,M,yBA+DxBC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,OAAS,GAC5BJ,KAAKK,eAAe,EAGhBL,KAAAM,gBAAmBJ,IACvBF,KAAKO,aAAeL,EAAME,MAAM,EAG5BJ,KAAAQ,YAAeN,IACnBF,KAAKS,SAAWP,EAAME,MAAM,EAGxBJ,KAAAU,YAAeR,IACnBA,EAAMS,kBACNX,KAAKY,SAAWV,EAAME,MAAM,EAGxBJ,KAAAa,YAAeX,IACnBA,EAAMS,kBACNX,KAAKc,SAAWZ,EAAME,MAAM,E,cAjFb,M,cAGA,M,cAGA,M,aAGD,M,kBAGK,K,WAGP,E,CAETW,SACH,MAAO,CACHC,EAAA,qBACIC,MAAM,qBACNd,MAAOH,KAAKG,MACZe,KAAK,SACLX,aAAcP,KAAKO,aACnBE,SAAUT,KAAKS,SACfG,SAAUZ,KAAKY,SACfO,QAASnB,KAAKmB,QACdL,SAAUd,KAAKc,SACfM,SAAUpB,KAAKC,eAEnBe,EAAA,8BACIA,EAAA,kBACIK,QAASrB,KAAKO,aACdU,MAAM,eACNG,SAAUpB,KAAKM,kBAEnBU,EAAA,kBACIK,QAASrB,KAAKS,SACdQ,MAAM,WACNG,SAAUpB,KAAKQ,cAEnBQ,EAAA,kBACIK,QAASrB,KAAKY,SACdK,MAAM,WACNG,SAAUpB,KAAKU,cAEnBM,EAAA,kBACIK,QAASrB,KAAKc,SACdG,MAAM,WACNG,SAAUpB,KAAKa,eAGvBG,EAAA,uBAAqBb,MAAOH,KAAKG,Q,CAKjCE,gBACJL,KAAKmB,QAAUnB,KAAKc,WAAad,KAAKG,K"}