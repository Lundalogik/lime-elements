{"version":3,"names":["notchedOutlineBasicCss","NotchedOutlineBasicExample","this","setDisabled","event","stopPropagation","disabled","detail","setReadonly","readonly","setRequired","required","setInvalid","invalid","setHasValue","value","setHasLeadingIcon","leadingIcon","render","id","h","labelId","label","slot","type","inputValue","checked","onChange","style","gridColumn"],"sources":["./src/components/notched-outline/examples/notched-outline-basic.scss?tag=limel-example-notched-outline-basic&encapsulation=shadow","./src/components/notched-outline/examples/notched-outline-basic.tsx"],"sourcesContent":["* {\n    box-sizing: border-box;\n}\nsection {\n    padding: 1rem;\n    background: url(\"data:image/svg+xml;charset=utf-8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' style='fill-rule:evenodd;'><path fill='rgba(186,186,192,0.16)' d='M0 0h4v4H0zM4 4h4v4H4z'/></svg>\");\n    background-size: 0.5rem;\n}\n\ndiv {\n    position: relative; // ensures that `limel-notched-outline` visually stretches within to this div\n}\n\ninput[type='text'] {\n    // Overriding some of the native input styles for the\n    // sake of this example.\n    border: none;\n    outline: none;\n\n    height: 2.5rem;\n    width: 100%;\n    padding: 0 1rem;\n\n    background-color: transparent;\n}\n","import { Component, h, State } from '@stencil/core';\n\n/**\n * Basic example\n *\n * Notice that the wrapping div has a hardcoded height,\n * which results in the notched outline to wrap around\n * the div.\n */\n@Component({\n    tag: 'limel-example-notched-outline-basic',\n    shadow: true,\n    styleUrl: 'notched-outline-basic.scss',\n})\nexport class NotchedOutlineBasicExample {\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private value = false;\n\n    @State()\n    private leadingIcon = false;\n\n    @State()\n    private inputValue: string;\n\n    public render() {\n        const id = 'abcd';\n\n        return [\n            <section>\n                <div>\n                    <limel-notched-outline\n                        labelId={id}\n                        label=\"Label\"\n                        required={this.required}\n                        invalid={this.invalid}\n                        disabled={this.disabled}\n                        readonly={this.readonly}\n                        value={this.value}\n                        leadingIcon={this.leadingIcon}\n                    >\n                        <input\n                            slot=\"content\"\n                            id={id}\n                            type=\"text\"\n                            required={this.required}\n                            disabled={this.disabled}\n                            readonly={this.readonly}\n                            value={this.inputValue}\n                        />\n                    </limel-notched-outline>\n                </div>\n            </section>,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n                <hr\n                    style={{\n                        gridColumn: '1/-1',\n                    }}\n                />\n                <limel-checkbox\n                    checked={this.value}\n                    label=\"Value\"\n                    onChange={this.setHasValue}\n                />\n                <limel-checkbox\n                    checked={this.leadingIcon}\n                    label=\"Leading icon\"\n                    onChange={this.setHasLeadingIcon}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n\n    private setHasValue = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.value = event.detail;\n    };\n\n    private setHasLeadingIcon = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.leadingIcon = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAyB,8Z,MCclBC,EAA0B,M,yBA2F3BC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,YAAeJ,IACnBA,EAAMC,kBACNH,KAAKO,SAAWL,EAAMG,MAAM,EAGxBL,KAAAQ,YAAeN,IACnBA,EAAMC,kBACNH,KAAKS,SAAWP,EAAMG,MAAM,EAGxBL,KAAAU,WAAcR,IAClBA,EAAMC,kBACNH,KAAKW,QAAUT,EAAMG,MAAM,EAGvBL,KAAAY,YAAeV,IACnBA,EAAMC,kBACNH,KAAKa,MAAQX,EAAMG,MAAM,EAGrBL,KAAAc,kBAAqBZ,IACzBA,EAAMC,kBACNH,KAAKe,YAAcb,EAAMG,MAAM,E,cApHhB,M,cAGA,M,cAGA,M,aAGD,M,WAGF,M,iBAGM,M,0BAKfW,SACH,MAAMC,EAAK,OAEX,MAAO,CACHC,EAAA,eACIA,EAAA,WACIA,EAAA,yBACIC,QAASF,EACTG,MAAM,QACNX,SAAUT,KAAKS,SACfE,QAASX,KAAKW,QACdP,SAAUJ,KAAKI,SACfG,SAAUP,KAAKO,SACfM,MAAOb,KAAKa,MACZE,YAAaf,KAAKe,aAElBG,EAAA,SACIG,KAAK,UACLJ,GAAIA,EACJK,KAAK,OACLb,SAAUT,KAAKS,SACfL,SAAUJ,KAAKI,SACfG,SAAUP,KAAKO,SACfM,MAAOb,KAAKuB,gBAK5BL,EAAA,8BACIA,EAAA,kBACIM,QAASxB,KAAKI,SACdgB,MAAM,WACNK,SAAUzB,KAAKC,cAEnBiB,EAAA,kBACIM,QAASxB,KAAKO,SACda,MAAM,WACNK,SAAUzB,KAAKM,cAEnBY,EAAA,kBACIM,QAASxB,KAAKS,SACdW,MAAM,WACNK,SAAUzB,KAAKQ,cAEnBU,EAAA,kBACIM,QAASxB,KAAKW,QACdS,MAAM,UACNK,SAAUzB,KAAKU,aAEnBQ,EAAA,MACIQ,MAAO,CACHC,WAAY,UAGpBT,EAAA,kBACIM,QAASxB,KAAKa,MACdO,MAAM,QACNK,SAAUzB,KAAKY,cAEnBM,EAAA,kBACIM,QAASxB,KAAKe,YACdK,MAAM,eACNK,SAAUzB,KAAKc,qBAGvBI,EAAA,uBAAqBL,MAAOb,KAAKa,Q"}