{"version":3,"names":["chipBadgeCss","ChipFilterExample","this","handleClick","id","selected","Object","assign","render","h","text","icon","type","onClick"],"sources":["./src/components/chip/examples/chip-badge.scss?tag=limel-example-chip-filter&encapsulation=shadow","./src/components/chip/examples/chip-filter.tsx"],"sourcesContent":[":host {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n}\n","import { Component, State, h } from '@stencil/core';\n\n/**\n * Chip as filter\n * Chips are great candidates to visualize active filters.\n * However, as chips are used for other purposes as well,\n * we need to make sure that the user understands that the chip is a filter,\n * just by the look of it.\n *\n * By setting the `type` to `filter`, the chip will be rendered with a distinct style\n * suitable for visualizing filters.\n *\n * :::note\n * In this mode, clicking on the chip should also toggle its `selected` state.\n * :::\n */\n@Component({\n    tag: 'limel-example-chip-filter',\n    shadow: true,\n    styleUrl: 'chip-badge.scss',\n})\nexport class ChipFilterExample {\n    @State()\n    private selected: { [id: string]: boolean } = {};\n\n    public render() {\n        return [\n            <limel-chip\n                id=\"1\"\n                text=\"photos\"\n                icon=\"image_file\"\n                type=\"filter\"\n                onClick={() => this.handleClick('1')}\n                selected={this.selected['1']}\n            />,\n            <limel-chip\n                id=\"2\"\n                text=\"videos\"\n                icon=\"video_file\"\n                type=\"filter\"\n                onClick={() => this.handleClick('2')}\n                selected={this.selected['2']}\n            />,\n            <limel-chip\n                id=\"2\"\n                text=\"audios\"\n                icon=\"audio_file\"\n                type=\"filter\"\n                onClick={() => this.handleClick('3')}\n                selected={this.selected['3']}\n            />,\n        ];\n    }\n\n    private handleClick = (id: string) => {\n        this.selected = {\n            ...this.selected,\n            [id]: !this.selected[id],\n        };\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAe,gD,MCqBRC,EAAiB,M,yBAiClBC,KAAAC,YAAeC,IACnBF,KAAKG,SAAQC,OAAAC,OAAAD,OAAAC,OAAA,GACNL,KAAKG,UAAQ,CAChBD,CAACA,IAAMF,KAAKG,SAASD,IACxB,E,cAnCyC,E,CAEvCI,SACH,MAAO,CACHC,EAAA,cACIL,GAAG,IACHM,KAAK,SACLC,KAAK,aACLC,KAAK,SACLC,QAAS,IAAMX,KAAKC,YAAY,KAChCE,SAAUH,KAAKG,SAAS,OAE5BI,EAAA,cACIL,GAAG,IACHM,KAAK,SACLC,KAAK,aACLC,KAAK,SACLC,QAAS,IAAMX,KAAKC,YAAY,KAChCE,SAAUH,KAAKG,SAAS,OAE5BI,EAAA,cACIL,GAAG,IACHM,KAAK,SACLC,KAAK,aACLC,KAAK,SACLC,QAAS,IAAMX,KAAKC,YAAY,KAChCE,SAAUH,KAAKG,SAAS,O"}