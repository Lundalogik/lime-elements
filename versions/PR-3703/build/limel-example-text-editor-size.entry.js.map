{"version":3,"names":["textEditorSizeCss","TextEditorSizeExample","render","h","allowResize"],"sources":["./src/components/text-editor/examples/text-editor-size.scss?tag=limel-example-text-editor-size&encapsulation=shadow","./src/components/text-editor/examples/text-editor-size.tsx"],"sourcesContent":["@use '../../../style/mixins';\n\n:host(limel-example-text-editor-size) {\n    @include mixins.is-resizable(\n        $direction: both,\n        $min-width: 10rem,\n        $min-height: 5rem\n    );\n    display: block;\n}\n\nlimel-text-editor {\n    max-height: 15rem;\n}\n","import { Component, h } from '@stencil/core';\n/**\n * Resize with container\n * Sometimes, you may want to make the text editor to follow the size of its container,\n * both in width and height; for instance, when the container is resizable by the user.\n *\n * In such cases, make sure to set `allowResize={false}` on the component.\n *\n * However, you can still constrain the text editor to never grow beyond a certain height,\n * by either\n * - setting a fixed `height` or `max-height` the component itself, or using\n * `--text-editor-max-height` CSS variable;\n * - or alternatively by setting a fixed `height` or `max-height` on the container\n * element of the component.\n *\n * In this example, the maximum height is set to `15rem`, which means that:\n * 1. the editor will adjust itself to the content inside,\n * pushing out its container and making it taller, until it reaches `15rem` in height.\n * 1. and also when you manually resize the container,\n * the editor will try to fill the available surface area, until its height reaches `15rem`.\n */\n@Component({\n    tag: 'limel-example-text-editor-size',\n    shadow: true,\n    styleUrl: 'text-editor-size.scss',\n})\nexport class TextEditorSizeExample {\n    public render() {\n        return <limel-text-editor allowResize={false} />;\n    }\n}\n"],"mappings":"+CAAA,MAAMA,EAAoB,4e,MC0BbC,EAAqB,M,yBACvBC,SACH,OAAOC,EAAA,qBAAmBC,YAAa,O"}