{"version":3,"names":["dockBasicCss","DockCustomComponentExample","this","handleSelected","event","dockItems","map","item","Object","assign","selected","id","detail","label","helperLabel","icon","dockMenu","componentName","render","h","class","accessibleLabel","onItemSelected"],"sources":["./src/components/dock/examples/dock-basic.scss?tag=limel-example-dock-custom-component&encapsulation=shadow","./src/components/dock/examples/dock-custom-component.tsx"],"sourcesContent":[":host {\n    --popover-surface-width: min(100vw, 40rem);\n}\n\n.application {\n    background-color: rgb(var(--contrast-400));\n    border: 1px solid rgb(var(--contrast-500));\n    overflow: hidden;\n    border-radius: 0.5rem;\n    height: 30rem;\n}\n","import { Component, h, State } from '@stencil/core';\nimport { DockItem } from '@limetech/lime-elements';\n\n/**\n * Displaying a custom component after Dock item is clicked\n *\n * It is possible to display a custom component in a popover,\n * when the Dock item is clicked. This enables you to design\n * the content of the menu as you wish, independently from the Dock.\n *\n * :::note\n * Pay attention to the `--popover-surface-width` variable in the\n * `.SCSS` file. That defines the width the popover component, which is `auto`\n * by default. But modifying it may be helpful depending on the usage.\n * :::\n *\n * @sourceFile my-custom-menu.tsx\n */\n\n@Component({\n    tag: 'limel-example-dock-custom-component',\n    shadow: true,\n    styleUrl: 'dock-basic.scss',\n})\nexport class DockCustomComponentExample {\n    @State()\n    private dockItems: DockItem[] = [\n        {\n            id: 'home',\n            label: 'Lime',\n            helperLabel: 'Cmd + H',\n            selected: true,\n            icon: '-lime-logo-outlined-colored',\n        },\n        {\n            id: 'tables',\n            label: 'Tables',\n            icon: 'insert_table',\n            dockMenu: { componentName: 'my-custom-menu' },\n        },\n    ];\n\n    public render() {\n        return (\n            <div class=\"application\">\n                <limel-dock\n                    accessibleLabel=\"Dock Example: item with custom menu\"\n                    dockItems={this.dockItems}\n                    onItemSelected={this.handleSelected}\n                />\n            </div>\n        );\n    }\n\n    private handleSelected = (event: CustomEvent<DockItem>) => {\n        this.dockItems = this.dockItems.map((item: DockItem) => {\n            return {\n                ...item,\n                selected: item.id === event.detail.id,\n            };\n        });\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAe,sM,MCwBRC,EAA0B,M,yBA8B3BC,KAAAC,eAAkBC,IACtBF,KAAKG,UAAYH,KAAKG,UAAUC,KAAKC,GACjCC,OAAAC,OAAAD,OAAAC,OAAA,GACOF,GAAI,CACPG,SAAUH,EAAKI,KAAOP,EAAMQ,OAAOD,MAEzC,E,eAlC0B,CAC5B,CACIA,GAAI,OACJE,MAAO,OACPC,YAAa,UACbJ,SAAU,KACVK,KAAM,+BAEV,CACIJ,GAAI,SACJE,MAAO,SACPE,KAAM,eACNC,SAAU,CAAEC,cAAe,mB,CAI5BC,SACH,OACIC,EAAA,OAAKC,MAAM,eACPD,EAAA,cACIE,gBAAgB,sCAChBhB,UAAWH,KAAKG,UAChBiB,eAAgBpB,KAAKC,iB"}