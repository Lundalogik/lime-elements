{"version":3,"names":["SelectableListExample","this","handleChange","event","items","map","item","value","detail","text","selected","separator","render","h","onChange","type"],"sources":["./src/components/list/examples/list-selectable.tsx"],"sourcesContent":["import {\n    LimelListCustomEvent,\n    ListItem,\n    ListSeparator,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * List with selectable items\n */\n@Component({\n    tag: 'limel-example-list-selectable',\n    shadow: true,\n})\nexport class SelectableListExample {\n    @State()\n    private items: Array<ListItem<number> | ListSeparator> = [\n        { text: 'King of Tokyo', value: 1 },\n        { text: 'Smash Up!', value: 2 },\n        { text: 'Pandemic', value: 3, selected: true },\n        { separator: true },\n        { text: 'Catan', value: 4 },\n        { text: 'Ticket to Ride', value: 5 },\n    ];\n\n    public render() {\n        return (\n            <limel-list\n                onChange={this.handleChange}\n                type=\"selectable\"\n                items={this.items}\n            />\n        );\n    }\n\n    private handleChange = (event: LimelListCustomEvent<ListItem>) => {\n        this.items = this.items.map((item: ListItem) => {\n            if (item.value === event.detail.value) {\n                return event.detail;\n            }\n\n            return item;\n        });\n    };\n}\n"],"mappings":"qDAcaA,EAAqB,M,yBAqBtBC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQH,KAAKG,MAAMC,KAAKC,IACzB,GAAIA,EAAKC,QAAUJ,EAAMK,OAAOD,MAAO,CACnC,OAAOJ,EAAMK,M,CAGjB,OAAOF,CAAI,GACb,E,WA1BmD,CACrD,CAAEG,KAAM,gBAAiBF,MAAO,GAChC,CAAEE,KAAM,YAAaF,MAAO,GAC5B,CAAEE,KAAM,WAAYF,MAAO,EAAGG,SAAU,MACxC,CAAEC,UAAW,MACb,CAAEF,KAAM,QAASF,MAAO,GACxB,CAAEE,KAAM,iBAAkBF,MAAO,G,CAG9BK,SACH,OACIC,EAAA,cACIC,SAAUb,KAAKC,aACfa,KAAK,aACLX,MAAOH,KAAKG,O"}