{"version":3,"names":["listItemBasicCss","NOTIFICATION_ICON","name","title","color","backgroundColor","ListItemRadioExample","this","items","value","text","secondaryText","selectValue","selectedValue","lastInteraction","onClick","event","host","target","closest","Number","dataset","getAttribute","onKeyDown","isEnter","key","isSpace","code","repeat","preventDefault","focused","setBadgeIcon","stopPropagation","badgeIcon","detail","setIcon","icon","undefined","render","h","Host","role","map","item","type","selected","tabindex","label","checked","onChange"],"sources":["./src/components/list-item/examples/list-item-basic.scss?tag=limel-example-list-item-radio&encapsulation=shadow","./src/components/list-item/examples/list-item-radio.tsx"],"sourcesContent":["@use '../../../style/mixins';\n\n:host {\n    display: flex;\n    flex-direction: column;\n    border-radius: 0.25rem;\n}\n\nul {\n    position: relative;\n    list-style: none;\n    padding: 1rem 1rem 2rem 1rem;\n    margin: 0;\n\n    background: url(\"data:image/svg+xml;charset=utf-8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' style='fill-rule:evenodd;'><path fill='rgba(186,186,192,0.16)' d='M0 0h4v4H0zM4 4h4v4H4z'/></svg>\");\n    background-size: 0.5rem;\n\n    &.is-resizable {\n        overflow: hidden;\n        resize: horizontal;\n        max-width: calc(100% - 2rem);\n        min-width: 10rem;\n\n        &::after {\n            content: 'Resize me â¤µ';\n            font-size: 0.75rem;\n            position: absolute;\n            right: 0.25rem;\n            bottom: 0.25rem;\n        }\n    }\n}\n","import { Component, h, Host, State } from '@stencil/core';\n\nconst NOTIFICATION_ICON = {\n    name: 'notification_alert',\n    title: 'Notification alert icon',\n    color: 'rgb(var(--color-yellow-default))',\n    backgroundColor: 'rgb(var(--color-pink-default))',\n};\n\n/**\n * Radio button list items\n *\n * This example shows how list items can be displayed as radio buttons.\n * Radio buttons allow users to select only one option from a group.\n *\n * :::important\n * - Set `role=\"radiogroup\"` on the container for accessibility.\n * - Only one value is selected at a time; clicks and Enter/Space update\n *   `selectedValue` and re-render.\n * :::\n *\n * :::note\n * The radio visuals are purely presentational; state comes from the parent.\n * In production, prefer using `limel-list type=\"radio\"` to centralize logic.\n * :::\n */\n@Component({\n    tag: 'limel-example-list-item-radio',\n    shadow: true,\n    styleUrl: 'list-item-basic.scss',\n})\nexport class ListItemRadioExample {\n    @State()\n    private selectedValue: number | null = 1; // Pre-select first item\n\n    @State()\n    private lastInteraction: string = '';\n\n    private items = [\n        { value: 1, text: 'Small (S)', secondaryText: 'Up to 10 items' },\n        { value: 2, text: 'Medium (M)', secondaryText: 'Up to 50 items' },\n        { value: 3, text: 'Large (L)', secondaryText: 'Up to 100 items' },\n        { value: 4, text: 'Extra Large (XL)', secondaryText: 'Over 100 items' },\n    ];\n\n    @State()\n    private icon?: {\n        name: string;\n        title: string;\n        color: string;\n        backgroundColor: string;\n    } = NOTIFICATION_ICON;\n\n    @State()\n    private badgeIcon = true;\n\n    public render() {\n        return (\n            <Host>\n                <div\n                    role=\"radiogroup\"\n                    aria-label=\"Package size\"\n                    onClick={this.onClick}\n                    onKeyDown={this.onKeyDown}\n                >\n                    {this.items.map((item) => (\n                        <limel-list-item\n                            key={item.value}\n                            data-value={item.value}\n                            value={item.value}\n                            text={item.text}\n                            secondaryText={item.secondaryText}\n                            type=\"radio\"\n                            selected={this.selectedValue === item.value}\n                            tabindex={\n                                this.selectedValue === item.value ? 0 : -1\n                            }\n                            icon={this.icon}\n                            badgeIcon={this.badgeIcon}\n                        />\n                    ))}\n                </div>\n                <limel-example-value\n                    label=\"Last interaction\"\n                    value={this.lastInteraction}\n                />\n                <limel-example-controls>\n                    <limel-checkbox\n                        checked={!!this.icon}\n                        label=\"icon\"\n                        onChange={this.setIcon}\n                    />\n                    <limel-checkbox\n                        checked={this.badgeIcon}\n                        label=\"badgeIcon\"\n                        onChange={this.setBadgeIcon}\n                    />\n                </limel-example-controls>\n            </Host>\n        );\n    }\n\n    private selectValue = (value: number, text: string) => {\n        this.selectedValue = value;\n        this.lastInteraction = `Selected \"${text}\"`;\n    };\n\n    private onClick = (event: MouseEvent) => {\n        const host = (event.target as HTMLElement).closest('limel-list-item');\n        if (!host) {\n            return;\n        }\n        const value = Number((host as HTMLElement).dataset.value);\n        const text = host.getAttribute('text') || '';\n        this.selectValue(value, text);\n    };\n\n    private onKeyDown = (event: KeyboardEvent) => {\n        const isEnter = event.key === 'Enter';\n        const isSpace =\n            event.key === ' ' ||\n            event.key === 'Space' ||\n            event.key === 'Spacebar' ||\n            event.code === 'Space';\n        if (!isEnter && !isSpace) {\n            return;\n        }\n        if (event.repeat) {\n            return;\n        }\n        if (isSpace) {\n            event.preventDefault();\n        }\n        const focused = (event.target as HTMLElement).closest(\n            'limel-list-item'\n        );\n        if (!focused) {\n            return;\n        }\n        const value = Number((focused as HTMLElement).dataset.value);\n        const text = focused.getAttribute('text') || '';\n        this.selectValue(value, text);\n    };\n\n    private setBadgeIcon = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.badgeIcon = event.detail;\n    };\n\n    private setIcon = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.icon = event.detail ? NOTIFICATION_ICON : undefined;\n    };\n}\n"],"mappings":"sDAAA,MAAMA,EAAmB,slBCEzB,MAAMC,EAAoB,CACtBC,KAAM,qBACNC,MAAO,0BACPC,MAAO,mCACPC,gBAAiB,kC,MAyBRC,EAAoB,M,yBAOrBC,KAAAC,MAAQ,CACZ,CAAEC,MAAO,EAAGC,KAAM,YAAaC,cAAe,kBAC9C,CAAEF,MAAO,EAAGC,KAAM,aAAcC,cAAe,kBAC/C,CAAEF,MAAO,EAAGC,KAAM,YAAaC,cAAe,mBAC9C,CAAEF,MAAO,EAAGC,KAAM,mBAAoBC,cAAe,mBA4DjDJ,KAAAK,YAAc,CAACH,EAAeC,KAClCH,KAAKM,cAAgBJ,EACrBF,KAAKO,gBAAkB,aAAaJ,IAAO,EAGvCH,KAAAQ,QAAWC,IACf,MAAMC,EAAQD,EAAME,OAAuBC,QAAQ,mBACnD,IAAKF,EAAM,CACP,M,CAEJ,MAAMR,EAAQW,OAAQH,EAAqBI,QAAQZ,OACnD,MAAMC,EAAOO,EAAKK,aAAa,SAAW,GAC1Cf,KAAKK,YAAYH,EAAOC,EAAK,EAGzBH,KAAAgB,UAAaP,IACjB,MAAMQ,EAAUR,EAAMS,MAAQ,QAC9B,MAAMC,EACFV,EAAMS,MAAQ,KACdT,EAAMS,MAAQ,SACdT,EAAMS,MAAQ,YACdT,EAAMW,OAAS,QACnB,IAAKH,IAAYE,EAAS,CACtB,M,CAEJ,GAAIV,EAAMY,OAAQ,CACd,M,CAEJ,GAAIF,EAAS,CACTV,EAAMa,gB,CAEV,MAAMC,EAAWd,EAAME,OAAuBC,QAC1C,mBAEJ,IAAKW,EAAS,CACV,M,CAEJ,MAAMrB,EAAQW,OAAQU,EAAwBT,QAAQZ,OACtD,MAAMC,EAAOoB,EAAQR,aAAa,SAAW,GAC7Cf,KAAKK,YAAYH,EAAOC,EAAK,EAGzBH,KAAAwB,aAAgBf,IACpBA,EAAMgB,kBACNzB,KAAK0B,UAAYjB,EAAMkB,MAAM,EAGzB3B,KAAA4B,QAAWnB,IACfA,EAAMgB,kBACNzB,KAAK6B,KAAOpB,EAAMkB,OAASjC,EAAoBoC,SAAS,E,mBAtHrB,E,qBAGL,G,UAe9BpC,E,eAGgB,I,CAEbqC,SACH,OACIC,EAACC,EAAI,KACDD,EAAA,OACIE,KAAK,aAAY,aACN,eACX1B,QAASR,KAAKQ,QACdQ,UAAWhB,KAAKgB,WAEfhB,KAAKC,MAAMkC,KAAKC,GACbJ,EAAA,mBACId,IAAKkB,EAAKlC,MAAK,aACHkC,EAAKlC,MACjBA,MAAOkC,EAAKlC,MACZC,KAAMiC,EAAKjC,KACXC,cAAegC,EAAKhC,cACpBiC,KAAK,QACLC,SAAUtC,KAAKM,gBAAkB8B,EAAKlC,MACtCqC,SACIvC,KAAKM,gBAAkB8B,EAAKlC,MAAQ,GAAK,EAE7C2B,KAAM7B,KAAK6B,KACXH,UAAW1B,KAAK0B,eAI5BM,EAAA,uBACIQ,MAAM,mBACNtC,MAAOF,KAAKO,kBAEhByB,EAAA,8BACIA,EAAA,kBACIS,UAAWzC,KAAK6B,KAChBW,MAAM,OACNE,SAAU1C,KAAK4B,UAEnBI,EAAA,kBACIS,QAASzC,KAAK0B,UACdc,MAAM,YACNE,SAAU1C,KAAKwB,gB"}