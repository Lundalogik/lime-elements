{"version":3,"names":["DialogNestedCloseEventsExample","this","openDialog","isOpen","handleCloseOnDialog","handleCloseOnCollapsible","event","stopInnerCloseEvent","console","log","stopPropagation","handleStopEventChange","detail","render","h","primary","label","onClick","open","onClose","header","slot","style","value","onChange"],"sources":["./src/components/dialog/examples/dialog-nested-close-events.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * Nested `close` events\n *\n * When putting other elements that emit `close` events inside a dialog, those\n * events must be caught and stopped inside the dialog. If not, they will bubble\n * to the event handler listening for `close` events on the dialog, which will\n * close the dialog too.\n *\n * This example has an event handler for the `close` event on the dialog, and\n * a second event handler for the `close` event on the collapsible-section.\n *\n * Try it out with the _Stop the inner close-event_ switch disabled, and then\n * with the switch enabled, to see the difference.\n */\n@Component({\n    tag: 'limel-example-dialog-nested-close-events',\n    shadow: true,\n})\nexport class DialogNestedCloseEventsExample {\n    @State()\n    private isOpen = false;\n\n    @State()\n    private stopInnerCloseEvent = false;\n\n    public render() {\n        return [\n            <limel-button\n                primary={true}\n                label=\"Open\"\n                onClick={this.openDialog}\n            />,\n            <limel-dialog open={this.isOpen} onClose={this.handleCloseOnDialog}>\n                <limel-collapsible-section\n                    header=\"Click to open me\"\n                    onClose={this.handleCloseOnCollapsible}\n                >\n                    <p>Then close me againâ€¦</p>\n                </limel-collapsible-section>\n                <limel-button\n                    label=\"Ok\"\n                    onClick={this.handleCloseOnDialog}\n                    slot=\"button\"\n                />\n            </limel-dialog>,\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-switch\n                    label=\"Stop the inner close-event\"\n                    value={this.stopInnerCloseEvent}\n                    onChange={this.handleStopEventChange}\n                />\n            </limel-example-controls>,\n        ];\n    }\n\n    private openDialog = () => {\n        this.isOpen = true;\n    };\n\n    private handleCloseOnDialog = () => {\n        this.isOpen = false;\n    };\n\n    private handleCloseOnCollapsible = (event: CustomEvent) => {\n        if (this.stopInnerCloseEvent) {\n            console.log('Stopping the inner `close` event.');\n            event.stopPropagation();\n        } else {\n            console.log('NOT stopping the inner `close` event!');\n        }\n    };\n\n    private handleStopEventChange = (event: CustomEvent<boolean>) => {\n        this.stopInnerCloseEvent = event.detail;\n    };\n}\n"],"mappings":"qDAoBaA,EAA8B,M,yBAuC/BC,KAAAC,WAAa,KACjBD,KAAKE,OAAS,IAAI,EAGdF,KAAAG,oBAAsB,KAC1BH,KAAKE,OAAS,KAAK,EAGfF,KAAAI,yBAA4BC,IAChC,GAAIL,KAAKM,oBAAqB,CAC1BC,QAAQC,IAAI,qCACZH,EAAMI,iB,KACH,CACHF,QAAQC,IAAI,wC,GAIZR,KAAAU,sBAAyBL,IAC7BL,KAAKM,oBAAsBD,EAAMM,MAAM,E,YAvD1B,M,yBAGa,K,CAEvBC,SACH,MAAO,CACHC,EAAA,gBACIC,QAAS,KACTC,MAAM,OACNC,QAAShB,KAAKC,aAElBY,EAAA,gBAAcI,KAAMjB,KAAKE,OAAQgB,QAASlB,KAAKG,qBAC3CU,EAAA,6BACIM,OAAO,mBACPD,QAASlB,KAAKI,0BAEdS,EAAA,kCAEJA,EAAA,gBACIE,MAAM,KACNC,QAAShB,KAAKG,oBACdiB,KAAK,YAGbP,EAAA,0BACIQ,MAAO,CAAE,mCAAoC,aAE7CR,EAAA,gBACIE,MAAM,6BACNO,MAAOtB,KAAKM,oBACZiB,SAAUvB,KAAKU,yB"}