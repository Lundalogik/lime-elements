{"version":3,"names":["TextEditorWithTablesExample","this","setReadonly","event","stopPropagation","readonly","detail","handleChange","value","render","h","key","onChange","contentType","checked","label"],"sources":["./src/components/text-editor/examples/text-editor-with-tables.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n/**\n * Text editor with tables (HTML mode only).\n *\n * Basic table support is available when using the text editor in `HTML` mode.\n * This allows you to paste and display tables in the text editor.\n * Complex operations are not supported, adding and removing columns are not supported.\n *\n * Tables will only appear as expected in text-editor fields that are in `HTML` mode.\n */\n@Component({\n    tag: 'limel-example-text-editor-with-tables',\n    shadow: true,\n})\nexport class TextEditorWithTablesExample {\n    @State()\n    private value: string = `<table><tbody>\n        <tr>\n        <td style=\"background-color: rgb(25, 107, 36);color: white;\"><p><strong>Column1</strong></p></td>\n        <td style=\"background-color: rgb(25, 107, 36);color: white;\"><p><strong>Column2</strong></p></td>\n        </tr>\n        <tr>\n        <td style=\"background-color: rgb(193, 240, 200);color: black;\"><p>Cell A1</p></td>\n        <td style=\"background-color: rgb(193, 240, 200);color: black;\"><p>Cell B1</p></td>\n        </tr>\n        <tr>\n        <td style=\"background-color: yellow;color: red;\"><p>Cell A2</p></td>\n        <td style=\"background-color: yellow;color: red;\"><p>Cell B2</p></td>\n        </tr>\n        </tbody></table>`;\n\n    @State()\n    private readonly = false;\n\n    public render() {\n        return [\n            <limel-text-editor\n                key=\"html-editor\"\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                contentType=\"html\"\n            />,\n            <limel-example-controls key=\"controls\">\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n            </limel-example-controls>,\n            <limel-example-value key=\"example-value\" value={this.value} />,\n        ];\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAcaA,EAA2B,M,yBAwC5BC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,aAAgBJ,IACpBF,KAAKO,MAAQL,EAAMG,MAAM,E,WA5CL,4qB,cAgBL,K,CAEZG,SACH,MAAO,CACHC,EAAA,qBACIC,IAAI,cACJH,MAAOP,KAAKO,MACZI,SAAUX,KAAKM,aACfF,SAAUJ,KAAKI,SACfQ,YAAY,SAEhBH,EAAA,0BAAwBC,IAAI,YACxBD,EAAA,kBACII,QAASb,KAAKI,SACdU,MAAM,WACNH,SAAUX,KAAKC,eAGvBQ,EAAA,uBAAqBC,IAAI,gBAAgBH,MAAOP,KAAKO,Q"}