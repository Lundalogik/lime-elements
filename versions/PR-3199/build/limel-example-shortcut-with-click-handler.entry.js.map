{"version":3,"names":["shortcutCss","ShortcutWithClickHandlerExample","constructor","hostRef","this","handleClick","event","altKey","ctrlKey","metaKey","shiftKey","preventDefault","alert","render","link","href","title","h","icon","label","onClick"],"sources":["./src/components/shortcut/examples/shortcut.scss?tag=limel-example-shortcut-with-click-handler&encapsulation=shadow","./src/components/shortcut/examples/shortcut-with-click-handler.tsx"],"sourcesContent":["limel-shortcut {\n    width: 20%;\n}\n","import { Component, h } from '@stencil/core';\n/**\n * Example with click handler\n */\n@Component({\n    tag: 'limel-example-shortcut-with-click-handler',\n    shadow: true,\n    styleUrl: 'shortcut.scss',\n})\nexport class ShortcutWithClickHandlerExample {\n    public render() {\n        const link = {\n            href: '#/component/limel-table',\n            title: 'Open the documentation for limel-table',\n        };\n\n        return (\n            <limel-shortcut\n                icon=\"pivot_table\"\n                label=\"limel-table\"\n                onClick={this.handleClick}\n                link={link}\n            />\n        );\n    }\n\n    private handleClick = (event: PointerEvent) => {\n        if (\n            !(event.altKey || event.ctrlKey || event.metaKey || event.shiftKey)\n        ) {\n            event.preventDefault();\n            alert(\n                \"No modifier key pressed. Link should open in current window, but we might want to handle the navigation with our application's router, to avoid reloading the whole application (if we're in a single page app, like Lime CRM Web Client).\\n\\nTry holding down a modifier key, like Shift, while clicking.\"\n            );\n        }\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAc,4B,MCSPC,EAA+B,MAL5CC,YAAAC,G,UAsBYC,KAAAC,YAAeC,IACnB,KACMA,EAAMC,QAAUD,EAAME,SAAWF,EAAMG,SAAWH,EAAMI,UAC5D,CACEJ,EAAMK,iBACNC,MACI,6S,GAtBLC,SACH,MAAMC,EAAO,CACTC,KAAM,0BACNC,MAAO,0CAGX,OACIC,EAAA,kBACIC,KAAK,cACLC,MAAM,cACNC,QAAShB,KAAKC,YACdS,KAAMA,G"}