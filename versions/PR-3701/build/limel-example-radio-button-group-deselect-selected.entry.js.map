{"version":3,"names":["RadioButtonDeselectSelectedExample","this","items","text","value","selected","handleChange","event","item","detail","selectedItem","undefined","setDisabled","stopPropagation","disabled","componentWillLoad","find","render","h","Host","onChange","checked","label","_a"],"sources":["./src/components/radio-button-group/examples/radio-button-group-deselect-selected.tsx"],"sourcesContent":["import {\n    ListItem,\n    LimelRadioButtonGroupCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, Host, State } from '@stencil/core';\n\n/**\n * Allowing to deselect a selected radio button\n *\n * In native radio button groups, users cannot deselect an already selected radio button.\n * This is the standard behavior across most implementations; which we also showcased in the\n * \"Basic example\", before this one. However, this interaction design comes with a\n * significant user experience drawback. Once a user selects one choice, they cannot regret their choice.\n * This could be problematic in some designs such as forms or survey.\n * This is because a user cannot first answer a single choice question,\n * and then decide to skip that question and leave it unanswered.\n *\n * As a developer, for such scenarios you always have to remember to provide a N/A choice or similar,\n * to enable the user or respondents to skip that question.\n * However, having a radio button group in a survey that allows respondents to leave it\n * unanswered means that the question cannot be marked as \"Required\" or \"Compulsory\".\n * A required question works best, when user has to select an option, and cannot unselect it.\n *\n * See how `handleChange` is implemented in this example, and compare it to the Basic example\n * which does not allow deselecting the currently selected option.\n */\n@Component({\n    tag: 'limel-example-radio-button-group-deselect-selected',\n    shadow: true,\n})\nexport class RadioButtonDeselectSelectedExample {\n    @State()\n    private selectedItem: ListItem<string>;\n\n    @State()\n    private disabled: boolean = false;\n\n    private items: Array<ListItem<string>> = [\n        { text: 'Very satisfied', value: 'very-satisfied' },\n        { text: 'Satisfied', value: 'satisfied', selected: true },\n        { text: 'Neutral', value: 'neutral' },\n        { text: 'Dissatisfied', value: 'dissatisfied' },\n        { text: 'Very dissatisfied', value: 'very-dissatisfied' },\n    ];\n\n    public componentWillLoad() {\n        this.selectedItem = this.items.find((item) => item.selected);\n    }\n\n    public render() {\n        return (\n            <Host>\n                <p>How satisfied are you with our product?</p>\n                <limel-radio-button-group\n                    items={this.items}\n                    selectedItem={this.selectedItem}\n                    disabled={this.disabled}\n                    onChange={this.handleChange}\n                />\n                <limel-example-controls>\n                    <limel-checkbox\n                        checked={this.disabled}\n                        label=\"Disabled\"\n                        onChange={this.setDisabled}\n                    />\n                </limel-example-controls>\n                <limel-example-value\n                    label=\"Selected answer\"\n                    value={this.selectedItem?.value}\n                />\n            </Host>\n        );\n    }\n\n    private handleChange = (\n        event: LimelRadioButtonGroupCustomEvent<ListItem<string>>\n    ) => {\n        const item = event.detail;\n        this.selectedItem = item.selected === false ? undefined : item;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n}\n"],"mappings":"4DA8BaA,EAAkC,M,yBAOnCC,KAAAC,MAAiC,CACrC,CAAEC,KAAM,iBAAkBC,MAAO,kBACjC,CAAED,KAAM,YAAaC,MAAO,YAAaC,SAAU,MACnD,CAAEF,KAAM,UAAWC,MAAO,WAC1B,CAAED,KAAM,eAAgBC,MAAO,gBAC/B,CAAED,KAAM,oBAAqBC,MAAO,sBAgChCH,KAAAK,aACJC,IAEA,MAAMC,EAAOD,EAAME,OACnBR,KAAKS,aAAeF,EAAKH,WAAa,MAAQM,UAAYH,CAAI,EAG1DP,KAAAW,YAAeL,IACnBA,EAAMM,kBACNZ,KAAKa,SAAWP,EAAME,MAAM,E,0CAhDJ,K,CAUrBM,oBACHd,KAAKS,aAAeT,KAAKC,MAAMc,MAAMR,GAASA,EAAKH,U,CAGhDY,S,MACH,OACIC,EAACC,EAAI,KACDD,EAAA,oDACAA,EAAA,4BACIhB,MAAOD,KAAKC,MACZQ,aAAcT,KAAKS,aACnBI,SAAUb,KAAKa,SACfM,SAAUnB,KAAKK,eAEnBY,EAAA,8BACIA,EAAA,kBACIG,QAASpB,KAAKa,SACdQ,MAAM,WACNF,SAAUnB,KAAKW,eAGvBM,EAAA,uBACII,MAAM,kBACNlB,OAAOmB,EAAAtB,KAAKS,gBAAY,MAAAa,SAAA,SAAAA,EAAEnB,Q"}