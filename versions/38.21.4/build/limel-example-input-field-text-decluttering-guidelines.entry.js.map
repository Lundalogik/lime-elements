{"version":3,"names":["inputFieldTextDeclutteringGuidelinesCss","InputFieldTextExample","this","handleChange","event","value","detail","setDisabled","stopPropagation","disabled","setReadonly","readonly","setRequired","required","render","MAX_LENGTH","h","label","helperText","maxlength","invalid","onChange","checked","checkValidity"],"sources":["./src/design-guidelines/declutter/examples/input-field-text-decluttering-guidelines.scss?tag=limel-example-input-field-text-decluttering-guidelines&encapsulation=shadow","./src/design-guidelines/declutter/examples/input-field-text-decluttering-guidelines.tsx"],"sourcesContent":[":host {\n    display: block;\n    padding: 1rem;\n    border-radius: 0.25rem;\n    background-color: rgb(var(--contrast-100));\n}\nlimel-input-field {\n    margin-bottom: 1rem;\n}\n\nlimel-button {\n    margin-left: 0.5rem;\n}\n","import { Component, h, State, Watch } from '@stencil/core';\n\n/**\n * Input Field of Type Text\n */\n@Component({\n    tag: 'limel-example-input-field-text-decluttering-guidelines',\n    shadow: true,\n    styleUrl: 'input-field-text-decluttering-guidelines.scss',\n})\nexport class InputFieldTextExample {\n    @State()\n    private required = false;\n\n    @State()\n    private disabled = false;\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private value: string;\n\n    public render() {\n        const MAX_LENGTH = 15;\n\n        return [\n            <limel-input-field\n                label=\"Text Field\"\n                helperText=\"Please enter a useful message!\"\n                maxlength={MAX_LENGTH}\n                value={this.value}\n                required={this.required}\n                invalid={this.invalid}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                onChange={this.handleChange}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n            </limel-example-controls>,\n        ];\n    }\n\n    @Watch('required')\n    protected checkValidity() {\n        this.invalid = this.required && !this.value;\n    }\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA0C,yK,MCUnCC,EAAqB,M,yBAwDtBC,KAAAC,aAAgBC,IACpBF,KAAKG,MAAQD,EAAME,MAAM,EAGrBJ,KAAAK,YAAeH,IACnBA,EAAMI,kBACNN,KAAKO,SAAWL,EAAME,MAAM,EAGxBJ,KAAAQ,YAAeN,IACnBA,EAAMI,kBACNN,KAAKS,SAAWP,EAAME,MAAM,EAGxBJ,KAAAU,YAAeR,IACnBA,EAAMI,kBACNN,KAAKW,SAAWT,EAAME,MAAM,E,cAtEb,M,cAGA,M,cAGA,M,aAGD,M,qBAKXQ,SACH,MAAMC,EAAa,GAEnB,MAAO,CACHC,EAAA,qBACIC,MAAM,aACNC,WAAW,iCACXC,UAAWJ,EACXV,MAAOH,KAAKG,MACZQ,SAAUX,KAAKW,SACfO,QAASlB,KAAKkB,QACdX,SAAUP,KAAKO,SACfE,SAAUT,KAAKS,SACfU,SAAUnB,KAAKC,eAEnBa,EAAA,8BACIA,EAAA,kBACIM,QAASpB,KAAKO,SACdQ,MAAM,WACNI,SAAUnB,KAAKK,cAEnBS,EAAA,kBACIM,QAASpB,KAAKS,SACdM,MAAM,WACNI,SAAUnB,KAAKQ,cAEnBM,EAAA,kBACIM,QAASpB,KAAKW,SACdI,MAAM,WACNI,SAAUnB,KAAKU,e,CAOrBW,gBACNrB,KAAKkB,QAAUlB,KAAKW,WAAaX,KAAKG,K"}