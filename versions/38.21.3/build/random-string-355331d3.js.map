{"version":3,"names":["createRandomString","window","_a","crypto","randomUUID","legacyCreateRandomString","USE_HEX","SKIP_LEADING_ZERODOT","ASCII_A","NUMBER_OF_LETTERS","String","fromCharCode","Math","floor","random","toString","slice","max"],"sources":["./src/util/random-string.ts"],"sourcesContent":["export const createRandomString = () => {\n    if (\n        !('crypto' in window) ||\n        typeof window.crypto?.randomUUID !== 'function'\n    ) {\n        return legacyCreateRandomString();\n    }\n\n    return 'a_' + crypto.randomUUID(); // ids must start with letters\n};\n\nfunction legacyCreateRandomString() {\n    const USE_HEX = 36;\n    const SKIP_LEADING_ZERODOT = 2;\n    const ASCII_A = 97;\n    const NUMBER_OF_LETTERS = 26;\n\n    /* eslint-disable sonarjs/pseudo-random */\n    return (\n        // eslint-disable-next-line unicorn/prefer-code-point\n        String.fromCharCode(\n            ASCII_A + Math.floor(Math.random() * NUMBER_OF_LETTERS)\n        ) +\n        Math.random()\n            .toString(USE_HEX)\n            .slice(Math.max(0, SKIP_LEADING_ZERODOT)) +\n        Math.random().toString(USE_HEX).slice(Math.max(0, SKIP_LEADING_ZERODOT))\n    );\n    /* eslint-enable sonarjs/pseudo-random */\n}\n"],"mappings":"MAAaA,EAAqB,K,MAC9B,KACM,WAAYC,iBACPC,EAAAD,OAAOE,UAAM,MAAAD,SAAA,SAAAA,EAAEE,cAAe,WACvC,CACE,OAAOC,G,CAGX,MAAO,KAAOF,OAAOC,YAAY,EAGrC,SAASC,IACL,MAAMC,EAAU,GAChB,MAAMC,EAAuB,EAC7B,MAAMC,EAAU,GAChB,MAAMC,EAAoB,GAG1B,OAEIC,OAAOC,aACHH,EAAUI,KAAKC,MAAMD,KAAKE,SAAWL,IAEzCG,KAAKE,SACAC,SAAST,GACTU,MAAMJ,KAAKK,IAAI,EAAGV,IACvBK,KAAKE,SAASC,SAAST,GAASU,MAAMJ,KAAKK,IAAI,EAAGV,GAG1D,Q"}