{"version":3,"names":["SnackbarExample","this","triggerSnackbarWithChangingMessage","trigger","message","timeoutMs","setTimeout","isOpen","handleHide","render","h","label","onClick","open","timeout","onHide"],"sources":["./src/components/snackbar/examples/snackbar-changing-message.tsx"],"sourcesContent":["import { Component, h, State } from '@stencil/core';\n\n/**\n * With changing messages\n */\n@Component({\n    tag: 'limel-example-snackbar-with-changing-messages',\n    shadow: true,\n})\nexport class SnackbarExample {\n    @State()\n    private isOpen = false;\n\n    @State()\n    private message: string;\n\n    public render() {\n        return [\n            <limel-button\n                label=\"Spam me\"\n                onClick={this.triggerSnackbarWithChangingMessage}\n            />,\n            <limel-snackbar\n                message={this.message}\n                open={this.isOpen}\n                timeout={4000}\n                onHide={this.handleHide}\n            />,\n        ];\n    }\n\n    private triggerSnackbarWithChangingMessage = () => {\n        const trigger = (message, timeoutMs) => {\n            setTimeout(() => {\n                this.message = message;\n                this.isOpen = true;\n            }, timeoutMs);\n        };\n\n        trigger('We will show you a new message in 5 seconds', 0);\n        trigger('You will see another message in 5 seconds', 5000);\n        trigger('The last message comes in 5 seconds', 10000);\n        trigger('There will be no more messages!', 15000);\n    };\n\n    private handleHide = () => {\n        this.isOpen = false;\n    };\n}\n"],"mappings":"qDASaA,EAAe,M,yBAsBhBC,KAAAC,mCAAqC,KACzC,MAAMC,EAAU,CAACC,EAASC,KACtBC,YAAW,KACPL,KAAKG,QAAUA,EACfH,KAAKM,OAAS,IAAI,GACnBF,EAAU,EAGjBF,EAAQ,8CAA+C,GACvDA,EAAQ,4CAA6C,KACrDA,EAAQ,sCAAuC,KAC/CA,EAAQ,kCAAmC,KAAM,EAG7CF,KAAAO,WAAa,KACjBP,KAAKM,OAAS,KAAK,E,YAnCN,M,uBAKVE,SACH,MAAO,CACHC,EAAA,gBACIC,MAAM,UACNC,QAASX,KAAKC,qCAElBQ,EAAA,kBACIN,QAASH,KAAKG,QACdS,KAAMZ,KAAKM,OACXO,QAAS,IACTC,OAAQd,KAAKO,a"}