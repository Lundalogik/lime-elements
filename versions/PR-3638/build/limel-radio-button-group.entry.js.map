{"version":3,"names":["RadioButtonGroup","this","updateInternalOptions","internalOptions","options","map","option","Object","assign","selected","value","disabled","handleChange","event","stopPropagation","selectedOption","detail","change","emit","componentWillLoad","handlePropsChange","render","h","items","type","badgeIcons","maxLinesSecondaryText","onChange"],"sources":["./src/components/radio-button-group/radio-button-group.tsx"],"sourcesContent":["import {\n    Component,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { ListItem } from '../list/list-item.types';\nimport { LimelListCustomEvent } from '@limetech/lime-elements';\n\n/**\n * Radio Button Group\n *\n * The Radio Button component provides a convenient way to create a group of radio buttons\n * from an array of options. Radio buttons allow users to select a single option from\n * multiple choices, making them ideal for exclusive selections.\n *\n * :::note\n * A single radio button is never useful in a UI. Radio buttons should always come in groups\n * of at least 2 options where only one can be selected at a time.\n * :::\n *\n * @exampleComponent limel-example-radio-button-group-basic\n * @exampleComponent limel-example-radio-button-group-icons\n * @exampleComponent limel-example-radio-button-group-multiple-lines\n * @beta\n */\n@Component({\n    tag: 'limel-radio-button-group',\n    shadow: true,\n})\nexport class RadioButtonGroup {\n    /**\n     * Array of radio button options to display\n     */\n    @Prop()\n    public options: Array<ListItem> = [];\n\n    /**\n     * The currently selected value\n     */\n    @Prop()\n    public value: any;\n\n    /**\n     * Disables all radio buttons when `true`\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Set to `true` if the radio button group should display larger icons with a background\n     */\n    @Prop({ reflect: true })\n    public badgeIcons: boolean;\n\n    /**\n     * By default, lists will display 3 lines of text, and then truncate the rest.\n     * Consumers can increase or decrease this number by specifying\n     * `maxLinesSecondaryText`. If consumer enters zero or negative\n     * numbers we default to 1; and if they type decimals we round up.\n     */\n    @Prop({ reflect: true })\n    public maxLinesSecondaryText: number = 3;\n\n    /**\n     * Emitted when the selected value changes\n     */\n    @Event()\n    private change: EventEmitter<any>;\n\n    @State()\n    private internalOptions: Array<ListItem> = [];\n\n    public componentWillLoad() {\n        this.updateInternalOptions();\n    }\n\n    @Watch('options')\n    @Watch('value')\n    @Watch('disabled')\n    @Watch('maxLinesSecondaryText')\n    protected handlePropsChange() {\n        this.updateInternalOptions();\n    }\n\n    public render() {\n        return (\n            <limel-list\n                items={this.internalOptions}\n                type=\"radio\"\n                badgeIcons={this.badgeIcons}\n                maxLinesSecondaryText={this.maxLinesSecondaryText}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    private updateInternalOptions = () => {\n        this.internalOptions = this.options.map((option) => ({\n            ...option,\n            selected: option.value === this.value,\n            disabled: this.disabled || option.disabled,\n        }));\n    };\n\n    private handleChange = (event: LimelListCustomEvent<ListItem>) => {\n        event.stopPropagation();\n\n        if (this.disabled) {\n            return;\n        }\n\n        const selectedOption = event.detail;\n        this.change.emit(selectedOption.value);\n    };\n}\n"],"mappings":"4DAiCaA,EAAgB,M,wDAmEjBC,KAAAC,sBAAwB,KAC5BD,KAAKE,gBAAkBF,KAAKG,QAAQC,KAAKC,GAAMC,OAAAC,OAAAD,OAAAC,OAAA,GACxCF,GAAM,CACTG,SAAUH,EAAOI,QAAUT,KAAKS,MAChCC,SAAUV,KAAKU,UAAYL,EAAOK,YACnC,EAGCV,KAAAW,aAAgBC,IACpBA,EAAMC,kBAEN,GAAIb,KAAKU,SAAU,CACf,M,CAGJ,MAAMI,EAAiBF,EAAMG,OAC7Bf,KAAKgB,OAAOC,KAAKH,EAAeL,MAAM,E,aA9ER,G,mCAYhB,M,qDAeqB,E,qBASI,E,CAEpCS,oBACHlB,KAAKC,uB,CAOCkB,oBACNnB,KAAKC,uB,CAGFmB,SACH,OACIC,EAAA,cACIC,MAAOtB,KAAKE,gBACZqB,KAAK,QACLC,WAAYxB,KAAKwB,WACjBC,sBAAuBzB,KAAKyB,sBAC5BC,SAAU1B,KAAKW,c"}