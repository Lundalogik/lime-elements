{"version":3,"names":["objectCreate","Object","create","baseCreate","object","proto","isObject","prototype","result","undefined","copyArray","source","array","index","length","Array","arrayEach","iteratee","copyObject","props","customizer","isNew","key","newValue","baseAssignValue","assignValue","baseAssign","keys","baseAssignIn","keysIn","freeExports","exports","nodeType","freeModule","module","moduleExports","Buffer","root","allocUnsafe","cloneBuffer","buffer","isDeep","slice","constructor","copy","copySymbols","getSymbols","copySymbolsIn","getSymbolsIn","objectProto","hasOwnProperty","initCloneArray","call","input","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","set","cloneDataView","dataView","byteOffset","reFlags","cloneRegExp","regexp","exec","lastIndex","symbolProto","Symbol","symbolValueOf","valueOf","cloneSymbol","symbol","cloneTypedArray","typedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","tag","Ctor","initCloneObject","isPrototype","getPrototype","baseIsMap","value","isObjectLike","getTag","nodeIsMap","nodeUtil","isMap","baseUnary","baseIsSet","nodeIsSet","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","arrayTag","errorTag","funcTag","genTag","objectTag","weakMapTag","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isArr","isArray","isFunc","isBuffer","Stack","stacked","get","forEach","subValue","add","keysFunc","getAllKeysIn","getAllKeys","cloneDeep"],"sources":["./node_modules/lodash-es/_baseCreate.js","./node_modules/lodash-es/_copyArray.js","./node_modules/lodash-es/_arrayEach.js","./node_modules/lodash-es/_copyObject.js","./node_modules/lodash-es/_baseAssign.js","./node_modules/lodash-es/_baseAssignIn.js","./node_modules/lodash-es/_cloneBuffer.js","./node_modules/lodash-es/_copySymbols.js","./node_modules/lodash-es/_copySymbolsIn.js","./node_modules/lodash-es/_initCloneArray.js","./node_modules/lodash-es/_cloneArrayBuffer.js","./node_modules/lodash-es/_cloneDataView.js","./node_modules/lodash-es/_cloneRegExp.js","./node_modules/lodash-es/_cloneSymbol.js","./node_modules/lodash-es/_cloneTypedArray.js","./node_modules/lodash-es/_initCloneByTag.js","./node_modules/lodash-es/_initCloneObject.js","./node_modules/lodash-es/_baseIsMap.js","./node_modules/lodash-es/isMap.js","./node_modules/lodash-es/_baseIsSet.js","./node_modules/lodash-es/isSet.js","./node_modules/lodash-es/_baseClone.js","./node_modules/lodash-es/cloneDeep.js"],"sourcesContent":["import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n"],"mappings":"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"}