{"version":3,"file":"methods.js","sourceRoot":"","sources":["../../../../src/components/component/templates/methods.tsx"],"names":[],"mappings":"AAKA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAIlC,MAAM,UAAU,UAAU,CAAC,EACvB,OAAO,EACP,EAAE,GAIL;IACG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAClB,OAAO;IACX,CAAC;IAED,OAAO;QACH,UAAI,KAAK,EAAC,6BAA6B,EAAC,EAAE,EAAE,EAAE,cAEzC;QACL,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;KAC/B,CAAC;AACN,CAAC;AAED,SAAS,YAAY,CAAC,MAAsB;IACxC,MAAM,KAAK,GAAmB;QAC1B;YACI,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,MAAM,CAAC,SAAS;SAC1B;KACJ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;IAE7C,OAAO,CACH,WAAK,KAAK,EAAC,gBAAgB;QACvB,UAAI,KAAK,EAAC,eAAe,IAAE,MAAM,CAAC,IAAI,CAAM;QAC5C,WAAK,KAAK,EAAC,iBAAiB;YACxB;gBACI,2BAAqB,IAAI,EAAE,MAAM,CAAC,IAAI,GAAI,CACxC;YACN;gBACI,0BAAoB,IAAI,EAAE,MAAM,CAAC,QAAQ,GAAI;gBAC7C,2BAAqB,KAAK,EAAE,KAAK,GAAI;gBACrC,EAAC,SAAS,IAAC,MAAM,EAAE,MAAM,CAAC,UAAU,GAAI,CACtC,CACJ;QACN,WAAK,KAAK,EAAC,iBAAiB;YACxB,EAAC,OAAO,IAAC,KAAK,EAAE,MAAM,CAAC,OAAO,GAAI,CAChC,CACJ,CACT,CAAC;AACN,CAAC;AAED,SAAS,SAAS,CAAC,EAAE,MAAM,EAAwC;IAC/D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;QACjB,OAAO;IACX,CAAC;IAED,OAAO,CAAC,2BAAmB,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,WAAW,CAAC,KAA2B;IAC5C,MAAM,KAAK,GAAmB;QAC1B;YACI,GAAG,EAAE,MAAM;YACX,KAAK,EAAE,KAAK,CAAC,IAAI;SACpB;QACD;YACI,GAAG,EAAE,UAAU;YACf,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;SAChC;QACD;YACI,GAAG,EAAE,SAAS;YACd,KAAK,EAAE,KAAK,CAAC,OAAO;SACvB;KACJ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;IAE7C,OAAO,CACH;QACI,cAAK,KAAK,CAAC,IAAI,CAAM;QACrB,2BAAqB,IAAI,EAAE,KAAK,CAAC,IAAI,GAAI;QACzC,2BAAqB,KAAK,EAAE,KAAK,GAAI,CACnC,CACT,CAAC;AACN,CAAC;AAED,SAAS,OAAO,CAAC,EAAE,KAAK,EAAmC;IACvD,IAAI,CAAC,KAAK,EAAE,CAAC;QACT,OAAO;IACX,CAAC;IAED,MAAM,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAEpC,OAAO;QACH,wBAAgB;QAChB,2BAAqB,IAAI,EAAE,KAAK,CAAC,IAAI,GAAI;QACzC,2BAAqB,IAAI,EAAE,IAAI,GAAI;KACtC,CAAC;AACN,CAAC","sourcesContent":["import {\n    JsonDocsMethod,\n    JsonDocMethodParameter,\n    JsonDocsMethodReturn,\n} from '@stencil/core/internal';\nimport { h } from '@stencil/core';\nimport { ProplistItem } from '../../proplist/proplist';\nimport { ParameterDescription } from '../../../types';\n\nexport function MethodList({\n    methods,\n    id,\n}: {\n    id?: string;\n    methods: Array<Partial<JsonDocsMethod>>;\n}): HTMLElement[] {\n    if (!methods.length) {\n        return;\n    }\n\n    return [\n        <h3 class=\"docs-layout-section-heading\" id={id}>\n            Methods\n        </h3>,\n        ...methods.map(renderMethod),\n    ];\n}\n\nfunction renderMethod(method: JsonDocsMethod) {\n    const items: ProplistItem[] = [\n        {\n            key: 'Signature',\n            value: method.signature,\n        },\n    ].filter((item) => item.value !== undefined);\n\n    return (\n        <div class=\"methods-layout\">\n            <h4 class=\"methods-title\">{method.name}</h4>\n            <div class=\"methods-content\">\n                <div>\n                    <kompendium-markdown text={method.docs} />\n                </div>\n                <div>\n                    <kompendium-taglist tags={method.docsTags} />\n                    <kompendium-proplist items={items} />\n                    <ParamList params={method.parameters} />\n                </div>\n            </div>\n            <div class=\"methods-returns\">\n                <Returns value={method.returns} />\n            </div>\n        </div>\n    );\n}\n\nfunction ParamList({ params }: { params: JsonDocMethodParameter[] }) {\n    if (!params.length) {\n        return;\n    }\n\n    return [<h5>Parameters</h5>, ...params.map(renderParam)];\n}\n\nfunction renderParam(param: ParameterDescription) {\n    const items: ProplistItem[] = [\n        {\n            key: 'Type',\n            value: param.type,\n        },\n        {\n            key: 'Optional',\n            value: String(param.optional),\n        },\n        {\n            key: 'Default',\n            value: param.default,\n        },\n    ].filter((item) => item.value !== undefined);\n\n    return (\n        <div>\n            <h6>{param.name}</h6>\n            <kompendium-markdown text={param.docs} />\n            <kompendium-proplist items={items} />\n        </div>\n    );\n}\n\nfunction Returns({ value }: { value: JsonDocsMethodReturn }) {\n    if (!value) {\n        return;\n    }\n\n    const type = '`' + value.type + '`';\n\n    return [\n        <h5>Returns</h5>,\n        <kompendium-markdown text={value.docs} />,\n        <kompendium-markdown text={type} />,\n    ];\n}\n"]}