{"version":3,"file":"kompendium-route.js","sourceRoot":"","sources":["../../../src/components/router/kompendium-route.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, Element, State } from '@stencil/core';\nimport { getHashPath, matchRoute, MatchResults } from './router-utils';\n\n/**\n * Interface for accessing route element properties\n * Used for type-safe sibling route checking\n */\ninterface RouteElement extends Element {\n    url?: string;\n}\n\n/**\n * Type guard to check if an element is a route element with expected properties\n * @param {Element} element - The element to check\n * @returns {boolean} True if the element is a kompendium-route with a url property\n */\nfunction isRouteElement(element: Element): element is RouteElement {\n    return (\n        element.tagName.toLowerCase() === 'kompendium-route' && 'url' in element\n    );\n}\n\n/**\n * Custom route component for Kompendium\n * Renders a component when the route matches\n */\n@Component({\n    tag: 'kompendium-route',\n    shadow: false,\n})\nexport class KompendiumRoute {\n    @Element()\n    private el: HTMLElement;\n\n    @State()\n    private currentPath: string = '/';\n\n    @Prop()\n    public url?: string;\n\n    @Prop()\n    public component?: string;\n\n    @Prop()\n    public componentProps?: Record<string, any>;\n\n    @Prop()\n    public exact?: boolean = false;\n\n    @Prop()\n    public routeRender?: (props: { match: MatchResults }) => any;\n\n    constructor() {\n        this.handleHashChange = this.handleHashChange.bind(this);\n    }\n\n    connectedCallback(): void {\n        window.addEventListener('hashchange', this.handleHashChange);\n        this.handleHashChange();\n    }\n\n    disconnectedCallback(): void {\n        window.removeEventListener('hashchange', this.handleHashChange);\n    }\n\n    private handleHashChange(): void {\n        this.currentPath = getHashPath();\n    }\n\n    render() {\n        // Use current path from state (updated by hashchange listener)\n        const currentPath = this.currentPath;\n\n        // Check if a previous sibling route matches (first-match wins)\n        if (this.hasPreviousMatchingSibling(currentPath)) {\n            return null;\n        }\n\n        // Check if this route matches\n        let match: MatchResults;\n        if (this.url) {\n            match = matchRoute(currentPath, this.url);\n        } else {\n            match = { params: {} }; // Catch-all route\n        }\n\n        if (!match) {\n            return null;\n        }\n\n        // Render the matched route\n        if (this.routeRender) {\n            return this.routeRender({ match: match });\n        }\n\n        if (this.component) {\n            const props = {\n                ...this.componentProps,\n                match: match,\n            };\n\n            // Create element dynamically using h() with string tag name\n            // Use match params as key to force recreation when params change\n            // Sort param keys for deterministic key generation\n            const key = Object.keys(match.params)\n                .sort()\n                .map((k) => `${k}=${match.params[k]}`)\n                .join('&');\n\n            return h(this.component, { key: key, ...props });\n        }\n\n        return <slot />;\n    }\n\n    private hasPreviousMatchingSibling(currentPath: string): boolean {\n        const parent = this.el.parentElement;\n        if (parent?.tagName.toLowerCase() !== 'kompendium-route-switch') {\n            return false;\n        }\n\n        const siblings = Array.from(parent.children);\n        const myIndex = siblings.indexOf(this.el);\n\n        // Check all previous siblings\n        for (let i = 0; i < myIndex; i++) {\n            const sibling = siblings[i];\n\n            // Use type guard to ensure element has expected route properties\n            if (!isRouteElement(sibling)) {\n                continue;\n            }\n\n            // Access sibling's URL property with type safety\n            const siblingUrl = sibling.url;\n\n            // Check if sibling matches current path\n            let siblingMatch: MatchResults;\n            if (siblingUrl) {\n                siblingMatch = matchRoute(currentPath, siblingUrl);\n            } else {\n                siblingMatch = { params: {} }; // Routes without URL are catch-all\n            }\n\n            if (siblingMatch) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n"]}