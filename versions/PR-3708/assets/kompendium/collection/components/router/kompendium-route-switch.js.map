{"version":3,"file":"kompendium-route-switch.js","sourceRoot":"","sources":["../../../src/components/router/kompendium-route-switch.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC1D,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAE7C;;;GAGG;AAKH,MAAM,OAAO,qBAAqB;IAO9B;QALO,oBAAe,GAAY,CAAC,CAAC;QAG5B,gBAAW,GAAW,GAAG,CAAC;QAG9B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5D;IAED,iBAAiB;QACb,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAED,oBAAoB;QAChB,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACpE,CAAC;IAEO,gBAAgB;QACpB,MAAM,OAAO,GAAG,WAAW,EAAE,CAAC;QAC9B,IAAI,OAAO,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAC3B,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE,CAAC;gBACrC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC7C,CAAC;QACL,CAAC;IACL,CAAC;IAED,MAAM;QACF,6BAA6B;QAC7B,kEAAkE;QAClE,8DAA8D;QAC9D,OAAO,8DAAQ,CAAC;IACpB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Prop, State } from '@stencil/core';\nimport { getHashPath } from './router-utils';\n\n/**\n * Custom route switch component for Kompendium\n * Manages navigation state and passes current path to child routes\n */\n@Component({\n    tag: 'kompendium-route-switch',\n    shadow: false,\n})\nexport class KompendiumRouteSwitch {\n    @Prop()\n    public scrollTopOffset?: number = 0;\n\n    @State()\n    private currentPath: string = '/';\n\n    constructor() {\n        this.handleHashChange = this.handleHashChange.bind(this);\n    }\n\n    connectedCallback(): void {\n        window.addEventListener('hashchange', this.handleHashChange);\n        this.handleHashChange();\n    }\n\n    disconnectedCallback(): void {\n        window.removeEventListener('hashchange', this.handleHashChange);\n    }\n\n    private handleHashChange(): void {\n        const newPath = getHashPath();\n        if (newPath !== this.currentPath) {\n            this.currentPath = newPath;\n            if (this.scrollTopOffset !== undefined) {\n                window.scrollTo(0, this.scrollTopOffset);\n            }\n        }\n    }\n\n    render() {\n        // Simply render child routes\n        // The @State currentPath will trigger re-render when hash changes\n        // Each route component will re-render and check if it matches\n        return <slot />;\n    }\n}\n"]}