{"version":3,"file":"generator.js","sourceRoot":"","sources":["../../src/kompendium/generator.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonDocs, Config, Logger } from '@stencil/core/internal';\nimport { defaultConfig } from './config';\nimport { addSources } from './source';\nimport lnk from 'lnk';\nimport { createMenu } from './menu';\nimport { exists, mkdir, readFile, writeFile, stat } from './filesystem';\nimport { createWatcher } from './watch';\nimport { findGuides } from './guides';\nimport { KompendiumConfig, KompendiumData, TypeDescription } from '../types';\nimport { parseFile } from './typedoc';\nimport { createSchemas } from './schema';\nimport { createIndex } from './search';\n\nexport const kompendium = (config: Partial<KompendiumConfig> = {}) => {\n    if (!generateDocs()) {\n        return () => null;\n    }\n\n    return kompendiumGenerator(config);\n};\n\nlet logger: Logger;\n\nexport function kompendiumGenerator(\n    config: Partial<KompendiumConfig>,\n): (docs: JsonDocs, stencilConfig: Config) => Promise<void> {\n    config = {\n        ...defaultConfig,\n        ...config,\n    };\n    initialize(config);\n\n    return async (docs: JsonDocs, stencilConfig: Config) => {\n        logger = stencilConfig.logger;\n        const timeSpan = logger.createTimeSpan('kompendium started');\n\n        const [jsonDocs, title, readme, guides, types] = await Promise.all([\n            addSources(docs),\n            getProjectTitle(config),\n            getReadme(),\n            findGuides(config),\n            getTypes(config, stencilConfig.tsconfig),\n        ]);\n\n        const data: KompendiumData = {\n            docs: jsonDocs,\n            title: title,\n            logo: config.logo,\n            menu: createMenu(docs, guides, types),\n            readme: readme,\n            guides: guides,\n            types: types,\n            schemas: createSchemas(docs.components, types),\n            index: null,\n        };\n\n        data.index = createIndex(data);\n\n        await writeData(config, data);\n\n        timeSpan.finish('kompendium finished');\n    };\n}\n\nasync function initialize(config: Partial<KompendiumConfig>) {\n    const path = `${config.publicPath}/kompendium.json`;\n\n    if (isWatcher()) {\n        createWatcher(path, 'unlink', onUnlink(config));\n    }\n\n    await createOutputDirs(config);\n}\n\nconst onUnlink = (config: Partial<KompendiumConfig>) => () => {\n    createSymlink(config);\n};\n\nasync function createSymlink(config: Partial<KompendiumConfig>) {\n    const source = `${config.path}/kompendium.json`;\n    const target = `${config.publicPath}/kompendium.json`;\n\n    if (!(await exists(source))) {\n        return;\n    }\n\n    if (await exists(target)) {\n        return;\n    }\n\n    lnk([source], config.publicPath);\n}\n\nasync function getProjectTitle(\n    config: Partial<KompendiumConfig>,\n): Promise<string> {\n    if (config.title) {\n        return config.title;\n    }\n\n    const json = await readFile('./package.json');\n    const data = JSON.parse(json);\n\n    return data.name\n        .replace(/^@[^/]+?\\//, '')\n        .split('-')\n        .join(' ');\n}\n\nasync function writeData(\n    config: Partial<KompendiumConfig>,\n    data: KompendiumData,\n) {\n    let filePath = `${config.path}/kompendium.json`;\n\n    if (isProd()) {\n        filePath = `${config.publicPath}/kompendium.json`;\n    }\n\n    await writeFile(filePath, JSON.stringify(data));\n\n    if (isWatcher()) {\n        createSymlink(config);\n    }\n}\n\nasync function createOutputDirs(config: Partial<KompendiumConfig>) {\n    let path = config.path;\n    if (!(await exists(path))) {\n        mkdir(path, { recursive: true });\n    }\n\n    path = config.publicPath;\n    if (!(await exists(path))) {\n        mkdir(path, { recursive: true });\n    }\n}\n\nasync function getReadme(): Promise<string> {\n    const files = ['readme.md', 'README.md', 'README', 'readme'];\n    let data = null;\n\n    for (const file of files) {\n        if (data) {\n            continue;\n        }\n\n        if (!(await exists(file))) {\n            continue;\n        }\n\n        data = await readFile(file);\n    }\n\n    if (!data) {\n        logger.warn('README did not exist');\n    }\n\n    return data;\n}\n\nfunction generateDocs(): boolean {\n    return !!process.argv.includes('--docs');\n}\n\nfunction isWatcher(): boolean {\n    return !!process.argv.includes('--watch');\n}\n\nfunction isProd(): boolean {\n    return !(\n        process.argv.includes('--dev') ||\n        process.argv.includes('test') ||\n        process.argv.find((arg) => arg.includes('jest-worker'))\n    );\n}\n\nasync function getTypes(\n    config: Partial<KompendiumConfig>,\n    tsconfig?: string,\n): Promise<TypeDescription[]> {\n    logger.debug('Getting type information...');\n    let types = await readTypes(config);\n    const cache = await readCache(config);\n\n    if (types.length === 0 || (await isModified(types, cache))) {\n        logger.debug('Parsing types...');\n        const data = parseFile(config.typeRoot, tsconfig);\n        await saveData(config, data);\n        types = data;\n    }\n\n    return types;\n}\n\nasync function isModified(types: any[], cache: Record<string, number>) {\n    if (Object.keys(cache).length === 0) {\n        return true;\n    }\n\n    let filenames = types.map((t) => t.sources).flat();\n    filenames = [...new Set(filenames)];\n\n    // Handle stat errors gracefully - if a file can't be stat'd, assume it's modified\n    const stats = await Promise.all(\n        filenames.map((filename) => stat(filename).catch(() => null)),\n    );\n\n    return stats.some((data, index) => {\n        const filename = filenames[index];\n\n        // If stat failed, consider the file modified\n        if (!data) {\n            logger.debug(`${filename} cannot be accessed, marking as modified`);\n\n            return true;\n        }\n\n        const result = cache[filename] !== data.mtimeMs;\n\n        logger.debug(`${filename} was ${result ? '' : 'not'} modified!`);\n\n        return result;\n    });\n}\n\nasync function saveData(\n    config: Partial<KompendiumConfig>,\n    types: TypeDescription[],\n) {\n    let filenames = types.map((t) => t.sources).flat();\n    filenames = [...new Set(filenames)];\n\n    // Handle stat errors gracefully - skip files that can't be accessed\n    const stats = await Promise.all(\n        filenames.map((filename) => stat(filename).catch(() => null)),\n    );\n\n    const cache = {};\n    stats.forEach((data, index) => {\n        if (data) {\n            const filename = filenames[index];\n            cache[filename] = data.mtimeMs;\n        }\n    });\n\n    await Promise.all([writeCache(config, cache), writeTypes(config, types)]);\n}\n\nasync function readCache(config: Partial<KompendiumConfig>) {\n    try {\n        const data = await readFile(`${config.path}/cache.json`);\n\n        return JSON.parse(data);\n    } catch {\n        return {};\n    }\n}\n\nasync function writeCache(config: Partial<KompendiumConfig>, data: any) {\n    await writeFile(`${config.path}/cache.json`, JSON.stringify(data));\n}\n\nasync function readTypes(config: Partial<KompendiumConfig>) {\n    try {\n        const data = await readFile(`${config.path}/types.json`);\n\n        return JSON.parse(data);\n    } catch {\n        return [];\n    }\n}\n\nasync function writeTypes(config: Partial<KompendiumConfig>, data: any) {\n    await writeFile(`${config.path}/types.json`, JSON.stringify(data));\n}\n"]}