{"version":3,"file":"guides.js","sourceRoot":"","sources":["../../src/kompendium/guides.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAGxC,MAAM,CAAC,KAAK,UAAU,UAAU,CAC5B,MAAiC;IAEjC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC5D,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAExC,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACjC,CAAC;AAOD,MAAM,CAAC,MAAM,cAAc,GACvB,CAAC,IAAY,EAAE,EAAE,CACjB,CAAC,KAAY,EAAyB,EAAE;IACpC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC5B,MAAM,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;QAExC,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9D,CAAC;IAED,OAAO;QACH,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,KAAK;KAClB,CAAC;AACN,CAAC,CAAC;AAEN,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,EAAE,EAC9B,QAAQ,EAAE,IAAI,EACd,QAAQ,GACD,EAA4B,EAAE;IACrC,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAEzC,OAAO;QACH,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC;QAC1B,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC;QAC5B,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC;QAC3B,IAAI,EAAE;YACF,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;SAClC;QACD,OAAO,EAAE,OAAO;KACnB,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { basename, dirname, resolve } from 'path';\nimport { readFile } from './filesystem';\nimport { KompendiumGuide, KompendiumConfig, Guide } from '../types';\n\nexport async function findGuides(\n    config: Partial<KompendiumConfig>,\n): Promise<KompendiumGuide[]> {\n    const nodes = config.guides.map(createMenuNode('/')).flat();\n    const promises = nodes.map(createGuide);\n\n    return Promise.all(promises);\n}\n\ninterface MenuNode {\n    menupath: string;\n    filepath: string;\n}\n\nexport const createMenuNode =\n    (path: string) =>\n    (guide: Guide): MenuNode | MenuNode[] => {\n        if (typeof guide !== 'string') {\n            const newPath = path + guide.name + '/';\n\n            return guide.children.map(createMenuNode(newPath)).flat();\n        }\n\n        return {\n            menupath: path,\n            filepath: guide,\n        };\n    };\n\nexport const createGuide = async ({\n    menupath: path,\n    filepath,\n}: MenuNode): Promise<KompendiumGuide> => {\n    const content = await readFile(filepath);\n\n    return {\n        dirPath: dirname(filepath),\n        fileName: basename(filepath),\n        filePath: resolve(filepath),\n        data: {\n            path: path + basename(filepath),\n        },\n        content: content,\n    };\n};\n"]}