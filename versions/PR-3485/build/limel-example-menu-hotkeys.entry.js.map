{"version":3,"names":["MenuHotkeysExample","this","items","text","commandText","separator","handleSelect","event","lastSelectedItem","detail","render","console","log","h","onSelect","label","slot","value"],"sources":["./src/components/menu/examples/menu-hotkeys.tsx"],"sourcesContent":["import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * Menu with supporting hotkeys\n *\n */\n@Component({\n    tag: 'limel-example-menu-hotkeys',\n    shadow: true,\n})\nexport class MenuHotkeysExample {\n    @State()\n    private lastSelectedItem: string;\n\n    private items: Array<ListSeparator | MenuItem> = [\n        { text: 'Copy', commandText: 'alt + C' },\n        { text: 'Cut', commandText: 'alt + X' },\n        { separator: true },\n        { text: 'Paste', commandText: 'alt + V' },\n    ];\n\n    public render() {\n        console.log(this.items);\n\n        return [\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-button label=\"Menu\" slot=\"trigger\" />\n            </limel-menu>,\n            <limel-example-value\n                label=\"Last selected item\"\n                value={this.lastSelectedItem}\n            />,\n        ];\n    }\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.lastSelectedItem = event.detail.text;\n    };\n}\n"],"mappings":"qDAeaA,EAAkB,M,yBAInBC,KAAAC,MAAyC,CAC7C,CAAEC,KAAM,OAAQC,YAAa,WAC7B,CAAED,KAAM,MAAOC,YAAa,WAC5B,CAAEC,UAAW,MACb,CAAEF,KAAM,QAASC,YAAa,YAiB1BH,KAAAK,aAAgBC,IACpBN,KAAKO,iBAAmBD,EAAME,OAAON,IAAI,E,gCAftCO,SACHC,QAAQC,IAAIX,KAAKC,OAEjB,MAAO,CACHW,EAAA,cAAYX,MAAOD,KAAKC,MAAOY,SAAUb,KAAKK,cAC1CO,EAAA,gBAAcE,MAAM,OAAOC,KAAK,aAEpCH,EAAA,uBACIE,MAAM,qBACNE,MAAOhB,KAAKO,mB"}