name: Pull Request Checks
on: [pull_request, merge_group]

concurrency:
  # Only allow one active run of this workflow, per PR.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@v3
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run lint:prod

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@v3
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Read .nvmrc
      run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
      id: nvm
    - uses: actions/setup-node@v3
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm test --if-present

  commitlint:
    name: Commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: github.actor != 'dependabot[bot]' && github.event_name != 'merge_group'
      - uses: wagoid/commitlint-github-action@v5
        if: github.actor != 'dependabot[bot]' && github.event_name != 'merge_group'

  autosquash:
    name: Block Autosquash Commits
    runs-on: ubuntu-latest
    steps:
      - name: Block Autosquash Commits
        if:  github.event_name != 'merge_group'
        uses: xt0rted/block-autosquash-commits-action@v2.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Docs
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/publish-docs.yml
    with:
      version: "PR-${{ github.event.pull_request.number }}"
      linkToPR: true
      # Only publish docs if the PR comes from a repo owned by Lime.
      # Also, skip publishing if the PR was created by Dependabot,
      # or if this is a merge queue run.
      buildOnly: ${{ github.event.pull_request.head.repo.owner.login != 'Lundalogik' || github.actor == 'dependabot[bot]' || github.event_name == 'merge_group' }}
    secrets: inherit

  autoapprove:
    needs: [lint, build, test, autosquash, docs]
    # Only run job if the PR comes from a repo owned by Lime and the PR was
    # created by Dependabot.
    if: github.event.pull_request.head.repo.owner.login == 'Lundalogik' && github.actor == 'dependabot[bot]' && github.event_name != 'merge_group'
    runs-on: ubuntu-latest
    steps:
      - name: Enable Automerge
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.ENABLE_AUTOMERGE }}
      - name: Autoapprove
        uses: hmarr/auto-approve-action@v2.1.0
        with:
          github-token: ${{ secrets.APPROVE_AUTOMATIC_PRS }}
