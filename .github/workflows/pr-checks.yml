name: Pull Request Checks
on: [pull_request]

concurrency:
  # Dependabot rebases all its PRs automatically, which causes all branches to
  # run again every time something is merged. Then perhaps one of Dependabot's
  # PRs are merged, then all Dependabot's PRs are rebased and run again, etc.
  # This causes very many unnecessary workflow runs, so we try to limit this
  # by having each new run triggered by Dependabot cancel any previous runs
  # triggered by Dependabot.
  # For any other users, only runs for the same PR are cancelled when a new run
  # is started. /Ads
  group: ${{ github.workflow }}-${{ github.actor == 'dependabot[bot]' && 'dependabot' || github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run lint:prod

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm
    - uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
    - run: node -v && npm -v
    - run: npm ci
    - run: npm test --if-present

  commitlint:
    name: Commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        if: github.actor != 'dependabot[bot]'
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v2
        if: github.actor != 'dependabot[bot]'

  autosquash:
    name: Block Autosquash Commits
    runs-on: ubuntu-latest
    steps:
      - name: Block Autosquash Commits
        uses: xt0rted/block-autosquash-commits-action@v2.1.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Docs
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/publish-docs.yml
    with:
      version: "PR-${{ github.event.pull_request.number }}"
      linkToPR: true
      # Only publish docs if the PR comes from a repo owned by Lime.
      # Also, skip publishing if the PR was created by Dependabot.
      buildOnly: ${{ github.event.pull_request.head.repo.owner.login != 'Lundalogik' || github.actor == 'dependabot[bot]' }}
    secrets: inherit

  autoapprove:
    needs: [lint, build, test, autosquash, docs]
    # Only run job if the PR comes from a repo owned by Lime and the PR was
    # created by Dependabot.
    if: github.event.pull_request.head.repo.owner.login == 'Lundalogik' && github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Enable Automerge
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.ENABLE_AUTOMERGE }}
      - name: Autoapprove
        uses: hmarr/auto-approve-action@v2.1.0
        with:
          github-token: ${{ secrets.APPROVE_AUTOMATIC_PRS }}
